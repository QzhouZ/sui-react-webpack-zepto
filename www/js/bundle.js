/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonp"];
/******/ 	window["webpackJsonp"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + chunkId + ".bundle.js";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "../js/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	window.Zepto = window.$ = __webpack_require__(2);
	$.config = {
					autoInit: false,
					showPageLoadingIndicator: false // ajax加载页面关闭加载指示器
	};
	__webpack_require__(3);
	__webpack_require__(4);
	__webpack_require__(5);
	var React = __webpack_require__(6);
	var HomeContent = __webpack_require__(162);
	var SortContent = __webpack_require__(168);
	var CartContent = __webpack_require__(165);
	var MeContent = __webpack_require__(166);
	var Unit = __webpack_require__(163);
	
	$(document).on('pageInit', function (e, pageId, $page) {
					// 加载子页面组件
					Unit.loadComponent(pageId);
	});
	
	// 首页
	React.render(React.createElement(HomeContent, null), document.getElementById("home_content"));
	
	$('#home_content').on('show', function (e) {});
	
	// 分类
	$('#sort_content').on('show', function (e) {
					React.render(React.createElement(SortContent, null), document.getElementById("sort_content"));
	});
	
	// 购物车
	$('#cart_content').on('show', function (e) {
					React.render(React.createElement(CartContent, null), document.getElementById("cart_content"));
	});
	
	// 我的
	$('#me_content').on('show', function (e) {
					React.render(React.createElement(MeContent, null), document.getElementById("me_content"));
	});

/***/ },
/* 2 */
/***/ function(module, exports) {

	/* Zepto v1.1.6 - zepto event ajax form ie - zeptojs.com/license */
	
	var Zepto = module.exports = (function() {
	  var undefined, key, $, classList, emptyArray = [], slice = emptyArray.slice, filter = emptyArray.filter,
	    document = window.document,
	    elementDisplay = {}, classCache = {},
	    cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },
	    fragmentRE = /^\s*<(\w+|!)[^>]*>/,
	    singleTagRE = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
	    tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
	    rootNodeRE = /^(?:body|html)$/i,
	    capitalRE = /([A-Z])/g,
	
	    // special attributes that should be get/set via method calls
	    methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],
	
	    adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],
	    table = document.createElement('table'),
	    tableRow = document.createElement('tr'),
	    containers = {
	      'tr': document.createElement('tbody'),
	      'tbody': table, 'thead': table, 'tfoot': table,
	      'td': tableRow, 'th': tableRow,
	      '*': document.createElement('div')
	    },
	    readyRE = /complete|loaded|interactive/,
	    simpleSelectorRE = /^[\w-]*$/,
	    class2type = {},
	    toString = class2type.toString,
	    zepto = {},
	    camelize, uniq,
	    tempParent = document.createElement('div'),
	    propMap = {
	      'tabindex': 'tabIndex',
	      'readonly': 'readOnly',
	      'for': 'htmlFor',
	      'class': 'className',
	      'maxlength': 'maxLength',
	      'cellspacing': 'cellSpacing',
	      'cellpadding': 'cellPadding',
	      'rowspan': 'rowSpan',
	      'colspan': 'colSpan',
	      'usemap': 'useMap',
	      'frameborder': 'frameBorder',
	      'contenteditable': 'contentEditable'
	    },
	    isArray = Array.isArray ||
	      function(object){ return object instanceof Array }
	
	  zepto.matches = function(element, selector) {
	    if (!selector || !element || element.nodeType !== 1) return false
	    var matchesSelector = element.webkitMatchesSelector || element.mozMatchesSelector ||
	                          element.oMatchesSelector || element.matchesSelector
	    if (matchesSelector) return matchesSelector.call(element, selector)
	    // fall back to performing a selector:
	    var match, parent = element.parentNode, temp = !parent
	    if (temp) (parent = tempParent).appendChild(element)
	    match = ~zepto.qsa(parent, selector).indexOf(element)
	    temp && tempParent.removeChild(element)
	    return match
	  }
	
	  function type(obj) {
	    return obj == null ? String(obj) :
	      class2type[toString.call(obj)] || "object"
	  }
	
	  function isFunction(value) { return type(value) == "function" }
	  function isWindow(obj)     { return obj != null && obj == obj.window }
	  function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }
	  function isObject(obj)     { return type(obj) == "object" }
	  function isPlainObject(obj) {
	    return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype
	  }
	  function likeArray(obj) { return typeof obj.length == 'number' }
	
	  function compact(array) { return filter.call(array, function(item){ return item != null }) }
	  function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }
	  camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }
	  function dasherize(str) {
	    return str.replace(/::/g, '/')
	           .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')
	           .replace(/([a-z\d])([A-Z])/g, '$1_$2')
	           .replace(/_/g, '-')
	           .toLowerCase()
	  }
	  uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }
	
	  function classRE(name) {
	    return name in classCache ?
	      classCache[name] : (classCache[name] = new RegExp('(^|\\s)' + name + '(\\s|$)'))
	  }
	
	  function maybeAddPx(name, value) {
	    return (typeof value == "number" && !cssNumber[dasherize(name)]) ? value + "px" : value
	  }
	
	  function defaultDisplay(nodeName) {
	    var element, display
	    if (!elementDisplay[nodeName]) {
	      element = document.createElement(nodeName)
	      document.body.appendChild(element)
	      display = getComputedStyle(element, '').getPropertyValue("display")
	      element.parentNode.removeChild(element)
	      display == "none" && (display = "block")
	      elementDisplay[nodeName] = display
	    }
	    return elementDisplay[nodeName]
	  }
	
	  function children(element) {
	    return 'children' in element ?
	      slice.call(element.children) :
	      $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })
	  }
	
	  // `$.zepto.fragment` takes a html string and an optional tag name
	  // to generate DOM nodes nodes from the given html string.
	  // The generated DOM nodes are returned as an array.
	  // This function can be overriden in plugins for example to make
	  // it compatible with browsers that don't support the DOM fully.
	  zepto.fragment = function(html, name, properties) {
	    var dom, nodes, container
	
	    // A special case optimization for a single tag
	    if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))
	
	    if (!dom) {
	      if (html.replace) html = html.replace(tagExpanderRE, "<$1></$2>")
	      if (name === undefined) name = fragmentRE.test(html) && RegExp.$1
	      if (!(name in containers)) name = '*'
	
	      container = containers[name]
	      container.innerHTML = '' + html
	      dom = $.each(slice.call(container.childNodes), function(){
	        container.removeChild(this)
	      })
	    }
	
	    if (isPlainObject(properties)) {
	      nodes = $(dom)
	      $.each(properties, function(key, value) {
	        if (methodAttributes.indexOf(key) > -1) nodes[key](value)
	        else nodes.attr(key, value)
	      })
	    }
	
	    return dom
	  }
	
	  // `$.zepto.Z` swaps out the prototype of the given `dom` array
	  // of nodes with `$.fn` and thus supplying all the Zepto functions
	  // to the array. Note that `__proto__` is not supported on Internet
	  // Explorer. This method can be overriden in plugins.
	  zepto.Z = function(dom, selector) {
	    dom = dom || []
	    dom.__proto__ = $.fn
	    dom.selector = selector || ''
	    return dom
	  }
	
	  // `$.zepto.isZ` should return `true` if the given object is a Zepto
	  // collection. This method can be overriden in plugins.
	  zepto.isZ = function(object) {
	    return object instanceof zepto.Z
	  }
	
	  // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and
	  // takes a CSS selector and an optional context (and handles various
	  // special cases).
	  // This method can be overriden in plugins.
	  zepto.init = function(selector, context) {
	    var dom
	    // If nothing given, return an empty Zepto collection
	    if (!selector) return zepto.Z()
	    // Optimize for string selectors
	    else if (typeof selector == 'string') {
	      selector = selector.trim()
	      // If it's a html fragment, create nodes from it
	      // Note: In both Chrome 21 and Firefox 15, DOM error 12
	      // is thrown if the fragment doesn't begin with <
	      if (selector[0] == '<' && fragmentRE.test(selector))
	        dom = zepto.fragment(selector, RegExp.$1, context), selector = null
	      // If there's a context, create a collection on that context first, and select
	      // nodes from there
	      else if (context !== undefined) return $(context).find(selector)
	      // If it's a CSS selector, use it to select nodes.
	      else dom = zepto.qsa(document, selector)
	    }
	    // If a function is given, call it when the DOM is ready
	    else if (isFunction(selector)) return $(document).ready(selector)
	    // If a Zepto collection is given, just return it
	    else if (zepto.isZ(selector)) return selector
	    else {
	      // normalize array if an array of nodes is given
	      if (isArray(selector)) dom = compact(selector)
	      // Wrap DOM nodes.
	      else if (isObject(selector))
	        dom = [selector], selector = null
	      // If it's a html fragment, create nodes from it
	      else if (fragmentRE.test(selector))
	        dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null
	      // If there's a context, create a collection on that context first, and select
	      // nodes from there
	      else if (context !== undefined) return $(context).find(selector)
	      // And last but no least, if it's a CSS selector, use it to select nodes.
	      else dom = zepto.qsa(document, selector)
	    }
	    // create a new Zepto collection from the nodes found
	    return zepto.Z(dom, selector)
	  }
	
	  // `$` will be the base `Zepto` object. When calling this
	  // function just call `$.zepto.init, which makes the implementation
	  // details of selecting nodes and creating Zepto collections
	  // patchable in plugins.
	  $ = function(selector, context){
	    return zepto.init(selector, context)
	  }
	
	  function extend(target, source, deep) {
	    for (key in source)
	      if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {
	        if (isPlainObject(source[key]) && !isPlainObject(target[key]))
	          target[key] = {}
	        if (isArray(source[key]) && !isArray(target[key]))
	          target[key] = []
	        extend(target[key], source[key], deep)
	      }
	      else if (source[key] !== undefined) target[key] = source[key]
	  }
	
	  // Copy all but undefined properties from one or more
	  // objects to the `target` object.
	  $.extend = function(target){
	    var deep, args = slice.call(arguments, 1)
	    if (typeof target == 'boolean') {
	      deep = target
	      target = args.shift()
	    }
	    args.forEach(function(arg){ extend(target, arg, deep) })
	    return target
	  }
	
	  // `$.zepto.qsa` is Zepto's CSS selector implementation which
	  // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.
	  // This method can be overriden in plugins.
	  zepto.qsa = function(element, selector){
	    var found,
	        maybeID = selector[0] == '#',
	        maybeClass = !maybeID && selector[0] == '.',
	        nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked
	        isSimple = simpleSelectorRE.test(nameOnly)
	    return (isDocument(element) && isSimple && maybeID) ?
	      ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :
	      (element.nodeType !== 1 && element.nodeType !== 9) ? [] :
	      slice.call(
	        isSimple && !maybeID ?
	          maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class
	          element.getElementsByTagName(selector) : // Or a tag
	          element.querySelectorAll(selector) // Or it's not simple, and we need to query all
	      )
	  }
	
	  function filtered(nodes, selector) {
	    return selector == null ? $(nodes) : $(nodes).filter(selector)
	  }
	
	  $.contains = document.documentElement.contains ?
	    function(parent, node) {
	      return parent !== node && parent.contains(node)
	    } :
	    function(parent, node) {
	      while (node && (node = node.parentNode))
	        if (node === parent) return true
	      return false
	    }
	
	  function funcArg(context, arg, idx, payload) {
	    return isFunction(arg) ? arg.call(context, idx, payload) : arg
	  }
	
	  function setAttribute(node, name, value) {
	    value == null ? node.removeAttribute(name) : node.setAttribute(name, value)
	  }
	
	  // access className property while respecting SVGAnimatedString
	  function className(node, value){
	    var klass = node.className || '',
	        svg   = klass && klass.baseVal !== undefined
	
	    if (value === undefined) return svg ? klass.baseVal : klass
	    svg ? (klass.baseVal = value) : (node.className = value)
	  }
	
	  // "true"  => true
	  // "false" => false
	  // "null"  => null
	  // "42"    => 42
	  // "42.5"  => 42.5
	  // "08"    => "08"
	  // JSON    => parse if valid
	  // String  => self
	  function deserializeValue(value) {
	    try {
	      return value ?
	        value == "true" ||
	        ( value == "false" ? false :
	          value == "null" ? null :
	          +value + "" == value ? +value :
	          /^[\[\{]/.test(value) ? $.parseJSON(value) :
	          value )
	        : value
	    } catch(e) {
	      return value
	    }
	  }
	
	  $.type = type
	  $.isFunction = isFunction
	  $.isWindow = isWindow
	  $.isArray = isArray
	  $.isPlainObject = isPlainObject
	
	  $.isEmptyObject = function(obj) {
	    var name
	    for (name in obj) return false
	    return true
	  }
	
	  $.inArray = function(elem, array, i){
	    return emptyArray.indexOf.call(array, elem, i)
	  }
	
	  $.camelCase = camelize
	  $.trim = function(str) {
	    return str == null ? "" : String.prototype.trim.call(str)
	  }
	
	  // plugin compatibility
	  $.uuid = 0
	  $.support = { }
	  $.expr = { }
	
	  $.map = function(elements, callback){
	    var value, values = [], i, key
	    if (likeArray(elements))
	      for (i = 0; i < elements.length; i++) {
	        value = callback(elements[i], i)
	        if (value != null) values.push(value)
	      }
	    else
	      for (key in elements) {
	        value = callback(elements[key], key)
	        if (value != null) values.push(value)
	      }
	    return flatten(values)
	  }
	
	  $.each = function(elements, callback){
	    var i, key
	    if (likeArray(elements)) {
	      for (i = 0; i < elements.length; i++)
	        if (callback.call(elements[i], i, elements[i]) === false) return elements
	    } else {
	      for (key in elements)
	        if (callback.call(elements[key], key, elements[key]) === false) return elements
	    }
	
	    return elements
	  }
	
	  $.grep = function(elements, callback){
	    return filter.call(elements, callback)
	  }
	
	  if (window.JSON) $.parseJSON = JSON.parse
	
	  // Populate the class2type map
	  $.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	    class2type[ "[object " + name + "]" ] = name.toLowerCase()
	  })
	
	  // Define methods that will be available on all
	  // Zepto collections
	  $.fn = {
	    // Because a collection acts like an array
	    // copy over these useful array functions.
	    forEach: emptyArray.forEach,
	    reduce: emptyArray.reduce,
	    push: emptyArray.push,
	    sort: emptyArray.sort,
	    indexOf: emptyArray.indexOf,
	    concat: emptyArray.concat,
	
	    // `map` and `slice` in the jQuery API work differently
	    // from their array counterparts
	    map: function(fn){
	      return $($.map(this, function(el, i){ return fn.call(el, i, el) }))
	    },
	    slice: function(){
	      return $(slice.apply(this, arguments))
	    },
	
	    ready: function(callback){
	      // need to check if document.body exists for IE as that browser reports
	      // document ready when it hasn't yet created the body element
	      if (readyRE.test(document.readyState) && document.body) callback($)
	      else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)
	      return this
	    },
	    get: function(idx){
	      return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]
	    },
	    toArray: function(){ return this.get() },
	    size: function(){
	      return this.length
	    },
	    remove: function(){
	      return this.each(function(){
	        if (this.parentNode != null)
	          this.parentNode.removeChild(this)
	      })
	    },
	    each: function(callback){
	      emptyArray.every.call(this, function(el, idx){
	        return callback.call(el, idx, el) !== false
	      })
	      return this
	    },
	    filter: function(selector){
	      if (isFunction(selector)) return this.not(this.not(selector))
	      return $(filter.call(this, function(element){
	        return zepto.matches(element, selector)
	      }))
	    },
	    add: function(selector,context){
	      return $(uniq(this.concat($(selector,context))))
	    },
	    is: function(selector){
	      return this.length > 0 && zepto.matches(this[0], selector)
	    },
	    not: function(selector){
	      var nodes=[]
	      if (isFunction(selector) && selector.call !== undefined)
	        this.each(function(idx){
	          if (!selector.call(this,idx)) nodes.push(this)
	        })
	      else {
	        var excludes = typeof selector == 'string' ? this.filter(selector) :
	          (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)
	        this.forEach(function(el){
	          if (excludes.indexOf(el) < 0) nodes.push(el)
	        })
	      }
	      return $(nodes)
	    },
	    has: function(selector){
	      return this.filter(function(){
	        return isObject(selector) ?
	          $.contains(this, selector) :
	          $(this).find(selector).size()
	      })
	    },
	    eq: function(idx){
	      return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)
	    },
	    first: function(){
	      var el = this[0]
	      return el && !isObject(el) ? el : $(el)
	    },
	    last: function(){
	      var el = this[this.length - 1]
	      return el && !isObject(el) ? el : $(el)
	    },
	    find: function(selector){
	      var result, $this = this
	      if (!selector) result = $()
	      else if (typeof selector == 'object')
	        result = $(selector).filter(function(){
	          var node = this
	          return emptyArray.some.call($this, function(parent){
	            return $.contains(parent, node)
	          })
	        })
	      else if (this.length == 1) result = $(zepto.qsa(this[0], selector))
	      else result = this.map(function(){ return zepto.qsa(this, selector) })
	      return result
	    },
	    closest: function(selector, context){
	      var node = this[0], collection = false
	      if (typeof selector == 'object') collection = $(selector)
	      while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))
	        node = node !== context && !isDocument(node) && node.parentNode
	      return $(node)
	    },
	    parents: function(selector){
	      var ancestors = [], nodes = this
	      while (nodes.length > 0)
	        nodes = $.map(nodes, function(node){
	          if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {
	            ancestors.push(node)
	            return node
	          }
	        })
	      return filtered(ancestors, selector)
	    },
	    parent: function(selector){
	      return filtered(uniq(this.pluck('parentNode')), selector)
	    },
	    children: function(selector){
	      return filtered(this.map(function(){ return children(this) }), selector)
	    },
	    contents: function() {
	      return this.map(function() { return slice.call(this.childNodes) })
	    },
	    siblings: function(selector){
	      return filtered(this.map(function(i, el){
	        return filter.call(children(el.parentNode), function(child){ return child!==el })
	      }), selector)
	    },
	    empty: function(){
	      return this.each(function(){ this.innerHTML = '' })
	    },
	    // `pluck` is borrowed from Prototype.js
	    pluck: function(property){
	      return $.map(this, function(el){ return el[property] })
	    },
	    show: function(){
	      return this.each(function(){
	        this.style.display == "none" && (this.style.display = '')
	        if (getComputedStyle(this, '').getPropertyValue("display") == "none")
	          this.style.display = defaultDisplay(this.nodeName)
	      })
	    },
	    replaceWith: function(newContent){
	      return this.before(newContent).remove()
	    },
	    wrap: function(structure){
	      var func = isFunction(structure)
	      if (this[0] && !func)
	        var dom   = $(structure).get(0),
	            clone = dom.parentNode || this.length > 1
	
	      return this.each(function(index){
	        $(this).wrapAll(
	          func ? structure.call(this, index) :
	            clone ? dom.cloneNode(true) : dom
	        )
	      })
	    },
	    wrapAll: function(structure){
	      if (this[0]) {
	        $(this[0]).before(structure = $(structure))
	        var children
	        // drill down to the inmost element
	        while ((children = structure.children()).length) structure = children.first()
	        $(structure).append(this)
	      }
	      return this
	    },
	    wrapInner: function(structure){
	      var func = isFunction(structure)
	      return this.each(function(index){
	        var self = $(this), contents = self.contents(),
	            dom  = func ? structure.call(this, index) : structure
	        contents.length ? contents.wrapAll(dom) : self.append(dom)
	      })
	    },
	    unwrap: function(){
	      this.parent().each(function(){
	        $(this).replaceWith($(this).children())
	      })
	      return this
	    },
	    clone: function(){
	      return this.map(function(){ return this.cloneNode(true) })
	    },
	    hide: function(){
	      return this.css("display", "none")
	    },
	    toggle: function(setting){
	      return this.each(function(){
	        var el = $(this)
	        ;(setting === undefined ? el.css("display") == "none" : setting) ? el.show() : el.hide()
	      })
	    },
	    prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },
	    next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },
	    html: function(html){
	      return 0 in arguments ?
	        this.each(function(idx){
	          var originHtml = this.innerHTML
	          $(this).empty().append( funcArg(this, html, idx, originHtml) )
	        }) :
	        (0 in this ? this[0].innerHTML : null)
	    },
	    text: function(text){
	      return 0 in arguments ?
	        this.each(function(idx){
	          var newText = funcArg(this, text, idx, this.textContent)
	          this.textContent = newText == null ? '' : ''+newText
	        }) :
	        (0 in this ? this[0].textContent : null)
	    },
	    attr: function(name, value){
	      var result
	      return (typeof name == 'string' && !(1 in arguments)) ?
	        (!this.length || this[0].nodeType !== 1 ? undefined :
	          (!(result = this[0].getAttribute(name)) && name in this[0]) ? this[0][name] : result
	        ) :
	        this.each(function(idx){
	          if (this.nodeType !== 1) return
	          if (isObject(name)) for (key in name) setAttribute(this, key, name[key])
	          else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))
	        })
	    },
	    removeAttr: function(name){
	      return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){
	        setAttribute(this, attribute)
	      }, this)})
	    },
	    prop: function(name, value){
	      name = propMap[name] || name
	      return (1 in arguments) ?
	        this.each(function(idx){
	          this[name] = funcArg(this, value, idx, this[name])
	        }) :
	        (this[0] && this[0][name])
	    },
	    data: function(name, value){
	      var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()
	
	      var data = (1 in arguments) ?
	        this.attr(attrName, value) :
	        this.attr(attrName)
	
	      return data !== null ? deserializeValue(data) : undefined
	    },
	    val: function(value){
	      return 0 in arguments ?
	        this.each(function(idx){
	          this.value = funcArg(this, value, idx, this.value)
	        }) :
	        (this[0] && (this[0].multiple ?
	           $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :
	           this[0].value)
	        )
	    },
	    offset: function(coordinates){
	      if (coordinates) return this.each(function(index){
	        var $this = $(this),
	            coords = funcArg(this, coordinates, index, $this.offset()),
	            parentOffset = $this.offsetParent().offset(),
	            props = {
	              top:  coords.top  - parentOffset.top,
	              left: coords.left - parentOffset.left
	            }
	
	        if ($this.css('position') == 'static') props['position'] = 'relative'
	        $this.css(props)
	      })
	      if (!this.length) return null
	      var obj = this[0].getBoundingClientRect()
	      return {
	        left: obj.left + window.pageXOffset,
	        top: obj.top + window.pageYOffset,
	        width: Math.round(obj.width),
	        height: Math.round(obj.height)
	      }
	    },
	    css: function(property, value){
	      if (arguments.length < 2) {
	        var computedStyle, element = this[0]
	        if(!element) return
	        computedStyle = getComputedStyle(element, '')
	        if (typeof property == 'string')
	          return element.style[camelize(property)] || computedStyle.getPropertyValue(property)
	        else if (isArray(property)) {
	          var props = {}
	          $.each(property, function(_, prop){
	            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))
	          })
	          return props
	        }
	      }
	
	      var css = ''
	      if (type(property) == 'string') {
	        if (!value && value !== 0)
	          this.each(function(){ this.style.removeProperty(dasherize(property)) })
	        else
	          css = dasherize(property) + ":" + maybeAddPx(property, value)
	      } else {
	        for (key in property)
	          if (!property[key] && property[key] !== 0)
	            this.each(function(){ this.style.removeProperty(dasherize(key)) })
	          else
	            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'
	      }
	
	      return this.each(function(){ this.style.cssText += ';' + css })
	    },
	    index: function(element){
	      return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])
	    },
	    hasClass: function(name){
	      if (!name) return false
	      return emptyArray.some.call(this, function(el){
	        return this.test(className(el))
	      }, classRE(name))
	    },
	    addClass: function(name){
	      if (!name) return this
	      return this.each(function(idx){
	        if (!('className' in this)) return
	        classList = []
	        var cls = className(this), newName = funcArg(this, name, idx, cls)
	        newName.split(/\s+/g).forEach(function(klass){
	          if (!$(this).hasClass(klass)) classList.push(klass)
	        }, this)
	        classList.length && className(this, cls + (cls ? " " : "") + classList.join(" "))
	      })
	    },
	    removeClass: function(name){
	      return this.each(function(idx){
	        if (!('className' in this)) return
	        if (name === undefined) return className(this, '')
	        classList = className(this)
	        funcArg(this, name, idx, classList).split(/\s+/g).forEach(function(klass){
	          classList = classList.replace(classRE(klass), " ")
	        })
	        className(this, classList.trim())
	      })
	    },
	    toggleClass: function(name, when){
	      if (!name) return this
	      return this.each(function(idx){
	        var $this = $(this), names = funcArg(this, name, idx, className(this))
	        names.split(/\s+/g).forEach(function(klass){
	          (when === undefined ? !$this.hasClass(klass) : when) ?
	            $this.addClass(klass) : $this.removeClass(klass)
	        })
	      })
	    },
	    scrollTop: function(value){
	      if (!this.length) return
	      var hasScrollTop = 'scrollTop' in this[0]
	      if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset
	      return this.each(hasScrollTop ?
	        function(){ this.scrollTop = value } :
	        function(){ this.scrollTo(this.scrollX, value) })
	    },
	    scrollLeft: function(value){
	      if (!this.length) return
	      var hasScrollLeft = 'scrollLeft' in this[0]
	      if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset
	      return this.each(hasScrollLeft ?
	        function(){ this.scrollLeft = value } :
	        function(){ this.scrollTo(value, this.scrollY) })
	    },
	    position: function() {
	      if (!this.length) return
	
	      var elem = this[0],
	        // Get *real* offsetParent
	        offsetParent = this.offsetParent(),
	        // Get correct offsets
	        offset       = this.offset(),
	        parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()
	
	      // Subtract element margins
	      // note: when an element has margin: auto the offsetLeft and marginLeft
	      // are the same in Safari causing offset.left to incorrectly be 0
	      offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0
	      offset.left -= parseFloat( $(elem).css('margin-left') ) || 0
	
	      // Add offsetParent borders
	      parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0
	      parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0
	
	      // Subtract the two offsets
	      return {
	        top:  offset.top  - parentOffset.top,
	        left: offset.left - parentOffset.left
	      }
	    },
	    offsetParent: function() {
	      return this.map(function(){
	        var parent = this.offsetParent || document.body
	        while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css("position") == "static")
	          parent = parent.offsetParent
	        return parent
	      })
	    }
	  }
	
	  // for now
	  $.fn.detach = $.fn.remove
	
	  // Generate the `width` and `height` functions
	  ;['width', 'height'].forEach(function(dimension){
	    var dimensionProperty =
	      dimension.replace(/./, function(m){ return m[0].toUpperCase() })
	
	    $.fn[dimension] = function(value){
	      var offset, el = this[0]
	      if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :
	        isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :
	        (offset = this.offset()) && offset[dimension]
	      else return this.each(function(idx){
	        el = $(this)
	        el.css(dimension, funcArg(this, value, idx, el[dimension]()))
	      })
	    }
	  })
	
	  function traverseNode(node, fun) {
	    fun(node)
	    for (var i = 0, len = node.childNodes.length; i < len; i++)
	      traverseNode(node.childNodes[i], fun)
	  }
	
	  // Generate the `after`, `prepend`, `before`, `append`,
	  // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.
	  adjacencyOperators.forEach(function(operator, operatorIndex) {
	    var inside = operatorIndex % 2 //=> prepend, append
	
	    $.fn[operator] = function(){
	      // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings
	      var argType, nodes = $.map(arguments, function(arg) {
	            argType = type(arg)
	            return argType == "object" || argType == "array" || arg == null ?
	              arg : zepto.fragment(arg)
	          }),
	          parent, copyByClone = this.length > 1
	      if (nodes.length < 1) return this
	
	      return this.each(function(_, target){
	        parent = inside ? target : target.parentNode
	
	        // convert all methods to a "before" operation
	        target = operatorIndex == 0 ? target.nextSibling :
	                 operatorIndex == 1 ? target.firstChild :
	                 operatorIndex == 2 ? target :
	                 null
	
	        var parentInDocument = $.contains(document.documentElement, parent)
	
	        nodes.forEach(function(node){
	          if (copyByClone) node = node.cloneNode(true)
	          else if (!parent) return $(node).remove()
	
	          parent.insertBefore(node, target)
	          if (parentInDocument) traverseNode(node, function(el){
	            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&
	               (!el.type || el.type === 'text/javascript') && !el.src)
	              window['eval'].call(window, el.innerHTML)
	          })
	        })
	      })
	    }
	
	    // after    => insertAfter
	    // prepend  => prependTo
	    // before   => insertBefore
	    // append   => appendTo
	    $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){
	      $(html)[operator](this)
	      return this
	    }
	  })
	
	  zepto.Z.prototype = $.fn
	
	  // Export internal API functions in the `$.zepto` namespace
	  zepto.uniq = uniq
	  zepto.deserializeValue = deserializeValue
	  $.zepto = zepto
	
	  return $
	})()
	
	;(function($){
	  var _zid = 1, undefined,
	      slice = Array.prototype.slice,
	      isFunction = $.isFunction,
	      isString = function(obj){ return typeof obj == 'string' },
	      handlers = {},
	      specialEvents={},
	      focusinSupported = 'onfocusin' in window,
	      focus = { focus: 'focusin', blur: 'focusout' },
	      hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }
	
	  specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'
	
	  function zid(element) {
	    return element._zid || (element._zid = _zid++)
	  }
	  function findHandlers(element, event, fn, selector) {
	    event = parse(event)
	    if (event.ns) var matcher = matcherFor(event.ns)
	    return (handlers[zid(element)] || []).filter(function(handler) {
	      return handler
	        && (!event.e  || handler.e == event.e)
	        && (!event.ns || matcher.test(handler.ns))
	        && (!fn       || zid(handler.fn) === zid(fn))
	        && (!selector || handler.sel == selector)
	    })
	  }
	  function parse(event) {
	    var parts = ('' + event).split('.')
	    return {e: parts[0], ns: parts.slice(1).sort().join(' ')}
	  }
	  function matcherFor(ns) {
	    return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')
	  }
	
	  function eventCapture(handler, captureSetting) {
	    return handler.del &&
	      (!focusinSupported && (handler.e in focus)) ||
	      !!captureSetting
	  }
	
	  function realEvent(type) {
	    return hover[type] || (focusinSupported && focus[type]) || type
	  }
	
	  function add(element, events, fn, data, selector, delegator, capture){
	    var id = zid(element), set = (handlers[id] || (handlers[id] = []))
	    events.split(/\s/).forEach(function(event){
	      if (event == 'ready') return $(document).ready(fn)
	      var handler   = parse(event)
	      handler.fn    = fn
	      handler.sel   = selector
	      // emulate mouseenter, mouseleave
	      if (handler.e in hover) fn = function(e){
	        var related = e.relatedTarget
	        if (!related || (related !== this && !$.contains(this, related)))
	          return handler.fn.apply(this, arguments)
	      }
	      handler.del   = delegator
	      var callback  = delegator || fn
	      handler.proxy = function(e){
	        e = compatible(e)
	        if (e.isImmediatePropagationStopped()) return
	        e.data = data
	        var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))
	        if (result === false) e.preventDefault(), e.stopPropagation()
	        return result
	      }
	      handler.i = set.length
	      set.push(handler)
	      if ('addEventListener' in element)
	        element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))
	    })
	  }
	  function remove(element, events, fn, selector, capture){
	    var id = zid(element)
	    ;(events || '').split(/\s/).forEach(function(event){
	      findHandlers(element, event, fn, selector).forEach(function(handler){
	        delete handlers[id][handler.i]
	      if ('removeEventListener' in element)
	        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))
	      })
	    })
	  }
	
	  $.event = { add: add, remove: remove }
	
	  $.proxy = function(fn, context) {
	    var args = (2 in arguments) && slice.call(arguments, 2)
	    if (isFunction(fn)) {
	      var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }
	      proxyFn._zid = zid(fn)
	      return proxyFn
	    } else if (isString(context)) {
	      if (args) {
	        args.unshift(fn[context], fn)
	        return $.proxy.apply(null, args)
	      } else {
	        return $.proxy(fn[context], fn)
	      }
	    } else {
	      throw new TypeError("expected function")
	    }
	  }
	
	  $.fn.bind = function(event, data, callback){
	    return this.on(event, data, callback)
	  }
	  $.fn.unbind = function(event, callback){
	    return this.off(event, callback)
	  }
	  $.fn.one = function(event, selector, data, callback){
	    return this.on(event, selector, data, callback, 1)
	  }
	
	  var returnTrue = function(){return true},
	      returnFalse = function(){return false},
	      ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,
	      eventMethods = {
	        preventDefault: 'isDefaultPrevented',
	        stopImmediatePropagation: 'isImmediatePropagationStopped',
	        stopPropagation: 'isPropagationStopped'
	      }
	
	  function compatible(event, source) {
	    if (source || !event.isDefaultPrevented) {
	      source || (source = event)
	
	      $.each(eventMethods, function(name, predicate) {
	        var sourceMethod = source[name]
	        event[name] = function(){
	          this[predicate] = returnTrue
	          return sourceMethod && sourceMethod.apply(source, arguments)
	        }
	        event[predicate] = returnFalse
	      })
	
	      if (source.defaultPrevented !== undefined ? source.defaultPrevented :
	          'returnValue' in source ? source.returnValue === false :
	          source.getPreventDefault && source.getPreventDefault())
	        event.isDefaultPrevented = returnTrue
	    }
	    return event
	  }
	
	  function createProxy(event) {
	    var key, proxy = { originalEvent: event }
	    for (key in event)
	      if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]
	
	    return compatible(proxy, event)
	  }
	
	  $.fn.delegate = function(selector, event, callback){
	    return this.on(event, selector, callback)
	  }
	  $.fn.undelegate = function(selector, event, callback){
	    return this.off(event, selector, callback)
	  }
	
	  $.fn.live = function(event, callback){
	    $(document.body).delegate(this.selector, event, callback)
	    return this
	  }
	  $.fn.die = function(event, callback){
	    $(document.body).undelegate(this.selector, event, callback)
	    return this
	  }
	
	  $.fn.on = function(event, selector, data, callback, one){
	    var autoRemove, delegator, $this = this
	    if (event && !isString(event)) {
	      $.each(event, function(type, fn){
	        $this.on(type, selector, data, fn, one)
	      })
	      return $this
	    }
	
	    if (!isString(selector) && !isFunction(callback) && callback !== false)
	      callback = data, data = selector, selector = undefined
	    if (isFunction(data) || data === false)
	      callback = data, data = undefined
	
	    if (callback === false) callback = returnFalse
	
	    return $this.each(function(_, element){
	      if (one) autoRemove = function(e){
	        remove(element, e.type, callback)
	        return callback.apply(this, arguments)
	      }
	
	      if (selector) delegator = function(e){
	        var evt, match = $(e.target).closest(selector, element).get(0)
	        if (match && match !== element) {
	          evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})
	          return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))
	        }
	      }
	
	      add(element, event, callback, data, selector, delegator || autoRemove)
	    })
	  }
	  $.fn.off = function(event, selector, callback){
	    var $this = this
	    if (event && !isString(event)) {
	      $.each(event, function(type, fn){
	        $this.off(type, selector, fn)
	      })
	      return $this
	    }
	
	    if (!isString(selector) && !isFunction(callback) && callback !== false)
	      callback = selector, selector = undefined
	
	    if (callback === false) callback = returnFalse
	
	    return $this.each(function(){
	      remove(this, event, callback, selector)
	    })
	  }
	
	  $.fn.trigger = function(event, args){
	    event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)
	    event._args = args
	    return this.each(function(){
	      // handle focus(), blur() by calling them directly
	      if (event.type in focus && typeof this[event.type] == "function") this[event.type]()
	      // items in the collection might not be DOM elements
	      else if ('dispatchEvent' in this) this.dispatchEvent(event)
	      else $(this).triggerHandler(event, args)
	    })
	  }
	
	  // triggers event handlers on current element just as if an event occurred,
	  // doesn't trigger an actual event, doesn't bubble
	  $.fn.triggerHandler = function(event, args){
	    var e, result
	    this.each(function(i, element){
	      e = createProxy(isString(event) ? $.Event(event) : event)
	      e._args = args
	      e.target = element
	      $.each(findHandlers(element, event.type || event), function(i, handler){
	        result = handler.proxy(e)
	        if (e.isImmediatePropagationStopped()) return false
	      })
	    })
	    return result
	  }
	
	  // shortcut methods for `.bind(event, fn)` for each event type
	  ;('focusin focusout focus blur load resize scroll unload click dblclick '+
	  'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+
	  'change select keydown keypress keyup error').split(' ').forEach(function(event) {
	    $.fn[event] = function(callback) {
	      return (0 in arguments) ?
	        this.bind(event, callback) :
	        this.trigger(event)
	    }
	  })
	
	  $.Event = function(type, props) {
	    if (!isString(type)) props = type, type = props.type
	    var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true
	    if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])
	    event.initEvent(type, bubbles, true)
	    return compatible(event)
	  }
	
	})(Zepto)
	
	;(function($){
	  var jsonpID = 0,
	      document = window.document,
	      key,
	      name,
	      rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
	      scriptTypeRE = /^(?:text|application)\/javascript/i,
	      xmlTypeRE = /^(?:text|application)\/xml/i,
	      jsonType = 'application/json',
	      htmlType = 'text/html',
	      blankRE = /^\s*$/,
	      originAnchor = document.createElement('a')
	
	  originAnchor.href = window.location.href
	
	  // trigger a custom event and return false if it was cancelled
	  function triggerAndReturn(context, eventName, data) {
	    var event = $.Event(eventName)
	    $(context).trigger(event, data)
	    return !event.isDefaultPrevented()
	  }
	
	  // trigger an Ajax "global" event
	  function triggerGlobal(settings, context, eventName, data) {
	    if (settings.global) return triggerAndReturn(context || document, eventName, data)
	  }
	
	  // Number of active Ajax requests
	  $.active = 0
	
	  function ajaxStart(settings) {
	    if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')
	  }
	  function ajaxStop(settings) {
	    if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')
	  }
	
	  // triggers an extra global event "ajaxBeforeSend" that's like "ajaxSend" but cancelable
	  function ajaxBeforeSend(xhr, settings) {
	    var context = settings.context
	    if (settings.beforeSend.call(context, xhr, settings) === false ||
	        triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)
	      return false
	
	    triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])
	  }
	  function ajaxSuccess(data, xhr, settings, deferred) {
	    var context = settings.context, status = 'success'
	    settings.success.call(context, data, status, xhr)
	    if (deferred) deferred.resolveWith(context, [data, status, xhr])
	    triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])
	    ajaxComplete(status, xhr, settings)
	  }
	  // type: "timeout", "error", "abort", "parsererror"
	  function ajaxError(error, type, xhr, settings, deferred) {
	    var context = settings.context
	    settings.error.call(context, xhr, type, error)
	    if (deferred) deferred.rejectWith(context, [xhr, type, error])
	    triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])
	    ajaxComplete(type, xhr, settings)
	  }
	  // status: "success", "notmodified", "error", "timeout", "abort", "parsererror"
	  function ajaxComplete(status, xhr, settings) {
	    var context = settings.context
	    settings.complete.call(context, xhr, status)
	    triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])
	    ajaxStop(settings)
	  }
	
	  // Empty function, used as default callback
	  function empty() {}
	
	  $.ajaxJSONP = function(options, deferred){
	    if (!('type' in options)) return $.ajax(options)
	
	    var _callbackName = options.jsonpCallback,
	      callbackName = ($.isFunction(_callbackName) ?
	        _callbackName() : _callbackName) || ('jsonp' + (++jsonpID)),
	      script = document.createElement('script'),
	      originalCallback = window[callbackName],
	      responseData,
	      abort = function(errorType) {
	        $(script).triggerHandler('error', errorType || 'abort')
	      },
	      xhr = { abort: abort }, abortTimeout
	
	    if (deferred) deferred.promise(xhr)
	
	    $(script).on('load error', function(e, errorType){
	      clearTimeout(abortTimeout)
	      $(script).off().remove()
	
	      if (e.type == 'error' || !responseData) {
	        ajaxError(null, errorType || 'error', xhr, options, deferred)
	      } else {
	        ajaxSuccess(responseData[0], xhr, options, deferred)
	      }
	
	      window[callbackName] = originalCallback
	      if (responseData && $.isFunction(originalCallback))
	        originalCallback(responseData[0])
	
	      originalCallback = responseData = undefined
	    })
	
	    if (ajaxBeforeSend(xhr, options) === false) {
	      abort('abort')
	      return xhr
	    }
	
	    window[callbackName] = function(){
	      responseData = arguments
	    }
	
	    script.src = options.url.replace(/\?(.+)=\?/, '?$1=' + callbackName)
	    document.head.appendChild(script)
	
	    if (options.timeout > 0) abortTimeout = setTimeout(function(){
	      abort('timeout')
	    }, options.timeout)
	
	    return xhr
	  }
	
	  $.ajaxSettings = {
	    // Default type of request
	    type: 'GET',
	    // Callback that is executed before request
	    beforeSend: empty,
	    // Callback that is executed if the request succeeds
	    success: empty,
	    // Callback that is executed the the server drops error
	    error: empty,
	    // Callback that is executed on request complete (both: error and success)
	    complete: empty,
	    // The context for the callbacks
	    context: null,
	    // Whether to trigger "global" Ajax events
	    global: true,
	    // Transport
	    xhr: function () {
	      return new window.XMLHttpRequest()
	    },
	    // MIME types mapping
	    // IIS returns Javascript as "application/x-javascript"
	    accepts: {
	      script: 'text/javascript, application/javascript, application/x-javascript',
	      json:   jsonType,
	      xml:    'application/xml, text/xml',
	      html:   htmlType,
	      text:   'text/plain'
	    },
	    // Whether the request is to another domain
	    crossDomain: false,
	    // Default timeout
	    timeout: 0,
	    // Whether data should be serialized to string
	    processData: true,
	    // Whether the browser should be allowed to cache GET responses
	    cache: true
	  }
	
	  function mimeToDataType(mime) {
	    if (mime) mime = mime.split(';', 2)[0]
	    return mime && ( mime == htmlType ? 'html' :
	      mime == jsonType ? 'json' :
	      scriptTypeRE.test(mime) ? 'script' :
	      xmlTypeRE.test(mime) && 'xml' ) || 'text'
	  }
	
	  function appendQuery(url, query) {
	    if (query == '') return url
	    return (url + '&' + query).replace(/[&?]{1,2}/, '?')
	  }
	
	  // serialize payload and append it to the URL for GET requests
	  function serializeData(options) {
	    if (options.processData && options.data && $.type(options.data) != "string")
	      options.data = $.param(options.data, options.traditional)
	    if (options.data && (!options.type || options.type.toUpperCase() == 'GET'))
	      options.url = appendQuery(options.url, options.data), options.data = undefined
	  }
	
	  $.ajax = function(options){
	    var settings = $.extend({}, options || {}),
	        deferred = $.Deferred && $.Deferred(),
	        urlAnchor
	    for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]
	
	    ajaxStart(settings)
	
	    if (!settings.crossDomain) {
	      urlAnchor = document.createElement('a')
	      urlAnchor.href = settings.url
	      urlAnchor.href = urlAnchor.href
	      settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)
	    }
	
	    if (!settings.url) settings.url = window.location.toString()
	    serializeData(settings)
	
	    var dataType = settings.dataType, hasPlaceholder = /\?.+=\?/.test(settings.url)
	    if (hasPlaceholder) dataType = 'jsonp'
	
	    if (settings.cache === false || (
	         (!options || options.cache !== true) &&
	         ('script' == dataType || 'jsonp' == dataType)
	        ))
	      settings.url = appendQuery(settings.url, '_=' + Date.now())
	
	    if ('jsonp' == dataType) {
	      if (!hasPlaceholder)
	        settings.url = appendQuery(settings.url,
	          settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')
	      return $.ajaxJSONP(settings, deferred)
	    }
	
	    var mime = settings.accepts[dataType],
	        headers = { },
	        setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },
	        protocol = /^([\w-]+:)\/\//.test(settings.url) ? RegExp.$1 : window.location.protocol,
	        xhr = settings.xhr(),
	        nativeSetHeader = xhr.setRequestHeader,
	        abortTimeout
	
	    if (deferred) deferred.promise(xhr)
	
	    if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')
	    setHeader('Accept', mime || '*/*')
	    if (mime = settings.mimeType || mime) {
	      if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]
	      xhr.overrideMimeType && xhr.overrideMimeType(mime)
	    }
	    if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))
	      setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')
	
	    if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])
	    xhr.setRequestHeader = setHeader
	
	    xhr.onreadystatechange = function(){
	      if (xhr.readyState == 4) {
	        xhr.onreadystatechange = empty
	        clearTimeout(abortTimeout)
	        var result, error = false
	        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {
	          dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))
	          result = xhr.responseText
	
	          try {
	            // http://perfectionkills.com/global-eval-what-are-the-options/
	            if (dataType == 'script')    (1,eval)(result)
	            else if (dataType == 'xml')  result = xhr.responseXML
	            else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)
	          } catch (e) { error = e }
	
	          if (error) ajaxError(error, 'parsererror', xhr, settings, deferred)
	          else ajaxSuccess(result, xhr, settings, deferred)
	        } else {
	          ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)
	        }
	      }
	    }
	
	    if (ajaxBeforeSend(xhr, settings) === false) {
	      xhr.abort()
	      ajaxError(null, 'abort', xhr, settings, deferred)
	      return xhr
	    }
	
	    if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]
	
	    var async = 'async' in settings ? settings.async : true
	    xhr.open(settings.type, settings.url, async, settings.username, settings.password)
	
	    for (name in headers) nativeSetHeader.apply(xhr, headers[name])
	
	    if (settings.timeout > 0) abortTimeout = setTimeout(function(){
	        xhr.onreadystatechange = empty
	        xhr.abort()
	        ajaxError(null, 'timeout', xhr, settings, deferred)
	      }, settings.timeout)
	
	    // avoid sending empty string (#319)
	    xhr.send(settings.data ? settings.data : null)
	    return xhr
	  }
	
	  // handle optional data/success arguments
	  function parseArguments(url, data, success, dataType) {
	    if ($.isFunction(data)) dataType = success, success = data, data = undefined
	    if (!$.isFunction(success)) dataType = success, success = undefined
	    return {
	      url: url
	    , data: data
	    , success: success
	    , dataType: dataType
	    }
	  }
	
	  $.get = function(/* url, data, success, dataType */){
	    return $.ajax(parseArguments.apply(null, arguments))
	  }
	
	  $.post = function(/* url, data, success, dataType */){
	    var options = parseArguments.apply(null, arguments)
	    options.type = 'POST'
	    return $.ajax(options)
	  }
	
	  $.getJSON = function(/* url, data, success */){
	    var options = parseArguments.apply(null, arguments)
	    options.dataType = 'json'
	    return $.ajax(options)
	  }
	
	  $.fn.load = function(url, data, success){
	    if (!this.length) return this
	    var self = this, parts = url.split(/\s/), selector,
	        options = parseArguments(url, data, success),
	        callback = options.success
	    if (parts.length > 1) options.url = parts[0], selector = parts[1]
	    options.success = function(response){
	      self.html(selector ?
	        $('<div>').html(response.replace(rscript, "")).find(selector)
	        : response)
	      callback && callback.apply(self, arguments)
	    }
	    $.ajax(options)
	    return this
	  }
	
	  var escape = encodeURIComponent
	
	  function serialize(params, obj, traditional, scope){
	    var type, array = $.isArray(obj), hash = $.isPlainObject(obj)
	    $.each(obj, function(key, value) {
	      type = $.type(value)
	      if (scope) key = traditional ? scope :
	        scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'
	      // handle data in serializeArray() format
	      if (!scope && array) params.add(value.name, value.value)
	      // recurse into nested objects
	      else if (type == "array" || (!traditional && type == "object"))
	        serialize(params, value, traditional, key)
	      else params.add(key, value)
	    })
	  }
	
	  $.param = function(obj, traditional){
	    var params = []
	    params.add = function(key, value) {
	      if ($.isFunction(value)) value = value()
	      if (value == null) value = ""
	      this.push(escape(key) + '=' + escape(value))
	    }
	    serialize(params, obj, traditional)
	    return params.join('&').replace(/%20/g, '+')
	  }
	})(Zepto)
	
	;(function($){
	  $.fn.serializeArray = function() {
	    var name, type, result = [],
	      add = function(value) {
	        if (value.forEach) return value.forEach(add)
	        result.push({ name: name, value: value })
	      }
	    if (this[0]) $.each(this[0].elements, function(_, field){
	      type = field.type, name = field.name
	      if (name && field.nodeName.toLowerCase() != 'fieldset' &&
	        !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&
	        ((type != 'radio' && type != 'checkbox') || field.checked))
	          add($(field).val())
	    })
	    return result
	  }
	
	  $.fn.serialize = function(){
	    var result = []
	    this.serializeArray().forEach(function(elm){
	      result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))
	    })
	    return result.join('&')
	  }
	
	  $.fn.submit = function(callback) {
	    if (0 in arguments) this.bind('submit', callback)
	    else if (this.length) {
	      var event = $.Event('submit')
	      this.eq(0).trigger(event)
	      if (!event.isDefaultPrevented()) this.get(0).submit()
	    }
	    return this
	  }
	
	})(Zepto)
	
	;(function($){
	  // __proto__ doesn't exist on IE<11, so redefine
	  // the Z function to use object extension instead
	  if (!('__proto__' in {})) {
	    $.extend($.zepto, {
	      Z: function(dom, selector){
	        dom = dom || []
	        $.extend(dom, $.fn)
	        dom.selector = selector || ''
	        dom.__Z = true
	        return dom
	      },
	      // this is a kludge but works
	      isZ: function(object){
	        return $.type(object) === 'array' && '__Z' in object
	      }
	    })
	  }
	
	  // getComputedStyle shouldn't freak out when called
	  // without a valid element as argument
	  try {
	    getComputedStyle(undefined)
	  } catch(e) {
	    var nativeGetComputedStyle = getComputedStyle;
	    window.getComputedStyle = function(element){
	      try {
	        return nativeGetComputedStyle(element)
	      } catch(e) {
	        return null
	      }
	    }
	  }
	})(Zepto)

/***/ },
/* 3 */
/***/ function(module, exports) {

	/*!
	 * =====================================================
	 * SUI Mobile - http://m.sui.taobao.org/
	 *
	 * =====================================================
	 */"use strict";+(function($){"use strict"; //全局配置
	var defaults={autoInit:false, //自动初始化页面
	showPageLoadingIndicator:true, //push.js加载页面的时候显示一个加载提示
	pushjs:true, //默认使用push.js加载页面
	swipePanel:"left", //滑动打开侧栏
	swipePanelOnlyClose:false, //只允许滑动关闭，不允许滑动打开侧栏
	pushAnimationDuration:400 //不要动这个，这是解决安卓 animationEnd 事件无法触发的bug
	};$.smConfig = $.extend(defaults,$.config);})(Zepto); /*===========================
	Device/OS Detection
	===========================*/ /* global Zepto:true */;(function($){"use strict";var device={};var ua=navigator.userAgent;var android=ua.match(/(Android);?[\s\/]+([\d.]+)?/);var ipad=ua.match(/(iPad).*OS\s([\d_]+)/);var ipod=ua.match(/(iPod)(.*OS\s([\d_]+))?/);var iphone=!ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);device.ios = device.android = device.iphone = device.ipad = device.androidChrome = false; // Android
	if(android){device.os = 'android';device.osVersion = android[2];device.android = true;device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;}if(ipad || iphone || ipod){device.os = 'ios';device.ios = true;} // iOS
	if(iphone && !ipod){device.osVersion = iphone[2].replace(/_/g,'.');device.iphone = true;}if(ipad){device.osVersion = ipad[2].replace(/_/g,'.');device.ipad = true;}if(ipod){device.osVersion = ipod[3]?ipod[3].replace(/_/g,'.'):null;device.iphone = true;} // iOS 8+ changed UA
	if(device.ios && device.osVersion && ua.indexOf('Version/') >= 0){if(device.osVersion.split('.')[0] === '10'){device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];}} // Webview
	device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i); // Minimal UI
	if(device.os && device.os === 'ios'){var osVersionArr=device.osVersion.split('.');device.minimalUi = !device.webView && (ipod || iphone) && (osVersionArr[0] * 1 === 7?osVersionArr[1] * 1 >= 1:osVersionArr[0] * 1 > 7) && $('meta[name="viewport"]').length > 0 && $('meta[name="viewport"]').attr('content').indexOf('minimal-ui') >= 0;} // Check for status bar and fullscreen app mode
	var windowWidth=$(window).width();var windowHeight=$(window).height();device.statusBar = false;if(device.webView && windowWidth * windowHeight === screen.width * screen.height){device.statusBar = true;}else {device.statusBar = false;} // Classes
	var classNames=[]; // Pixel Ratio
	device.pixelRatio = window.devicePixelRatio || 1;classNames.push('pixel-ratio-' + Math.floor(device.pixelRatio));if(device.pixelRatio >= 2){classNames.push('retina');} // OS classes
	if(device.os){classNames.push(device.os,device.os + '-' + device.osVersion.split('.')[0],device.os + '-' + device.osVersion.replace(/\./g,'-'));if(device.os === 'ios'){var major=parseInt(device.osVersion.split('.')[0],10);for(var i=major - 1;i >= 6;i--) {classNames.push('ios-gt-' + i);}}} // Status bar classes
	if(device.statusBar){classNames.push('with-statusbar-overlay');}else {$('html').removeClass('with-statusbar-overlay');} // Add html classes
	if(classNames.length > 0)$('html').addClass(classNames.join(' '));$.device = device;})(Zepto); /* global Zepto:true */+(function($){"use strict"; //比较一个字符串版本号
	//a > b === 1
	//a = b === 0
	//a < b === -1
	$.compareVersion = function(a,b){var as=a.split('.');var bs=b.split('.');if(a === b)return 0;for(var i=0;i < as.length;i++) {var x=parseInt(as[i]);if(!bs[i])return 1;var y=parseInt(bs[i]);if(x < y)return -1;if(x > y)return 1;}return 1;};})(Zepto); //     Zepto.js
	//     (c) 2010-2015 Thomas Fuchs
	//     Zepto.js may be freely distributed under the MIT license.
	+(function($){"use strict";function detect(ua,platform){var os=this.os = {}, // jshint ignore:line
	browser=this.browser = {}, // jshint ignore:line
	webkit=ua.match(/Web[kK]it[\/]{0,1}([\d.]+)/),android=ua.match(/(Android);?[\s\/]+([\d.]+)?/),osx=!!ua.match(/\(Macintosh\; Intel /),ipad=ua.match(/(iPad).*OS\s([\d_]+)/),ipod=ua.match(/(iPod)(.*OS\s([\d_]+))?/),iphone=!ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/),webos=ua.match(/(webOS|hpwOS)[\s\/]([\d.]+)/),win=/Win\d{2}|Windows/.test(platform),wp=ua.match(/Windows Phone ([\d.]+)/),touchpad=webos && ua.match(/TouchPad/),kindle=ua.match(/Kindle\/([\d.]+)/),silk=ua.match(/Silk\/([\d._]+)/),blackberry=ua.match(/(BlackBerry).*Version\/([\d.]+)/),bb10=ua.match(/(BB10).*Version\/([\d.]+)/),rimtabletos=ua.match(/(RIM\sTablet\sOS)\s([\d.]+)/),playbook=ua.match(/PlayBook/),chrome=ua.match(/Chrome\/([\d.]+)/) || ua.match(/CriOS\/([\d.]+)/),firefox=ua.match(/Firefox\/([\d.]+)/),firefoxos=ua.match(/\((?:Mobile|Tablet); rv:([\d.]+)\).*Firefox\/[\d.]+/),ie=ua.match(/MSIE\s([\d.]+)/) || ua.match(/Trident\/[\d](?=[^\?]+).*rv:([0-9.].)/),webview=!chrome && ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/),safari=webview || ua.match(/Version\/([\d.]+)([^S](Safari)|[^M]*(Mobile)[^S]*(Safari))/); // Todo: clean this up with a better OS/browser seperation:
	// - discern (more) between multiple browsers on android
	// - decide if kindle fire in silk mode is android or not
	// - Firefox on Android doesn't specify the Android version
	// - possibly devide in os, device and browser hashes
	if(browser.webkit = !!webkit)browser.version = webkit[1]; // jshint ignore:line
	if(android)os.android = true,os.version = android[2];if(iphone && !ipod)os.ios = os.iphone = true,os.version = iphone[2].replace(/_/g,'.');if(ipad)os.ios = os.ipad = true,os.version = ipad[2].replace(/_/g,'.');if(ipod)os.ios = os.ipod = true,os.version = ipod[3]?ipod[3].replace(/_/g,'.'):null;if(wp)os.wp = true,os.version = wp[1];if(webos)os.webos = true,os.version = webos[2];if(touchpad)os.touchpad = true;if(blackberry)os.blackberry = true,os.version = blackberry[2];if(bb10)os.bb10 = true,os.version = bb10[2];if(rimtabletos)os.rimtabletos = true,os.version = rimtabletos[2];if(playbook)browser.playbook = true;if(kindle)os.kindle = true,os.version = kindle[1];if(silk)browser.silk = true,browser.version = silk[1];if(!silk && os.android && ua.match(/Kindle Fire/))browser.silk = true;if(chrome)browser.chrome = true,browser.version = chrome[1];if(firefox)browser.firefox = true,browser.version = firefox[1];if(firefoxos)os.firefoxos = true,os.version = firefoxos[1];if(ie)browser.ie = true,browser.version = ie[1];if(safari && (osx || os.ios || win)){browser.safari = true;if(!os.ios)browser.version = safari[1];}if(webview)browser.webview = true;os.tablet = !!(ipad || playbook || android && !ua.match(/Mobile/) || firefox && ua.match(/Tablet/) || ie && !ua.match(/Phone/) && ua.match(/Touch/));os.phone = !!(!os.tablet && !os.ipod && (android || iphone || webos || blackberry || bb10 || chrome && ua.match(/Android/) || chrome && ua.match(/CriOS\/([\d.]+)/) || firefox && ua.match(/Mobile/) || ie && ua.match(/Touch/)));}detect.call($,navigator.userAgent,navigator.platform); // make available to unit tests
	$.__detect = detect;})(Zepto); // jshint ignore:line
	/* global Zepto:true */ /* global WebKitCSSMatrix:true */(function($){"use strict";['width','height'].forEach(function(dimension){var Dimension=dimension.replace(/./,function(m){return m[0].toUpperCase();});$.fn['outer' + Dimension] = function(margin){var elem=this;if(elem){var size=elem[dimension]();var sides={'width':['left','right'],'height':['top','bottom']};sides[dimension].forEach(function(side){if(margin)size += parseInt(elem.css('margin-' + side),10);});return size;}else {return null;}};}); //support
	$.support = (function(){var support={touch:!!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)};return support;})();$.touchEvents = {start:$.support.touch?'touchstart':'mousedown',move:$.support.touch?'touchmove':'mousemove',end:$.support.touch?'touchend':'mouseup'};$.getTranslate = function(el,axis){var matrix,curTransform,curStyle,transformMatrix; // automatic axis detection
	if(typeof axis === 'undefined'){axis = 'x';}curStyle = window.getComputedStyle(el,null);if(window.WebKitCSSMatrix){ // Some old versions of Webkit choke when 'none' is passed; pass
	// empty string instead in this case
	transformMatrix = new WebKitCSSMatrix(curStyle.webkitTransform === 'none'?'':curStyle.webkitTransform);}else {transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(','matrix(1, 0, 0, 1,');matrix = transformMatrix.toString().split(',');}if(axis === 'x'){ //Latest Chrome and webkits Fix
	if(window.WebKitCSSMatrix)curTransform = transformMatrix.m41; //Crazy IE10 Matrix
	else if(matrix.length === 16)curTransform = parseFloat(matrix[12]); //Normal Browsers
	else curTransform = parseFloat(matrix[4]);}if(axis === 'y'){ //Latest Chrome and webkits Fix
	if(window.WebKitCSSMatrix)curTransform = transformMatrix.m42; //Crazy IE10 Matrix
	else if(matrix.length === 16)curTransform = parseFloat(matrix[13]); //Normal Browsers
	else curTransform = parseFloat(matrix[5]);}return curTransform || 0;};$.requestAnimationFrame = function(callback){if(window.requestAnimationFrame)return window.requestAnimationFrame(callback);else if(window.webkitRequestAnimationFrame)return window.webkitRequestAnimationFrame(callback);else if(window.mozRequestAnimationFrame)return window.mozRequestAnimationFrame(callback);else {return window.setTimeout(callback,1000 / 60);}};$.cancelAnimationFrame = function(id){if(window.cancelAnimationFrame)return window.cancelAnimationFrame(id);else if(window.webkitCancelAnimationFrame)return window.webkitCancelAnimationFrame(id);else if(window.mozCancelAnimationFrame)return window.mozCancelAnimationFrame(id);else {return window.clearTimeout(id);}};$.fn.transitionEnd = function(callback){var events=['webkitTransitionEnd','transitionend','oTransitionEnd','MSTransitionEnd','msTransitionEnd'],i,dom=this;function fireCallBack(e){ /*jshint validthis:true */if(e.target !== this)return;callback.call(this,e);for(i = 0;i < events.length;i++) {dom.off(events[i],fireCallBack);}}if(callback){for(i = 0;i < events.length;i++) {dom.on(events[i],fireCallBack);}}return this;};$.fn.dataset = function(){var el=this[0];if(el){var dataset={};if(el.dataset){for(var dataKey in el.dataset) { // jshint ignore:line
	dataset[dataKey] = el.dataset[dataKey];}}else {for(var i=0;i < el.attributes.length;i++) {var attr=el.attributes[i];if(attr.name.indexOf('data-') >= 0){dataset[$.toCamelCase(attr.name.split('data-')[1])] = attr.value;}}}for(var key in dataset) {if(dataset[key] === 'false')dataset[key] = false;else if(dataset[key] === 'true')dataset[key] = true;else if(parseFloat(dataset[key]) === dataset[key] * 1)dataset[key] = dataset[key] * 1;}return dataset;}else return undefined;};$.fn.data = function(key,value){if(typeof value === 'undefined'){ // Get value
	if(this[0] && this[0].getAttribute){var dataKey=this[0].getAttribute('data-' + key);if(dataKey){return dataKey;}else if(this[0].smElementDataStorage && key in this[0].smElementDataStorage){return this[0].smElementDataStorage[key];}else {return undefined;}}else return undefined;}else { // Set value
	for(var i=0;i < this.length;i++) {var el=this[i];if(!el.smElementDataStorage)el.smElementDataStorage = {};el.smElementDataStorage[key] = value;}return this;}};$.fn.animationEnd = function(callback){var events=['webkitAnimationEnd','OAnimationEnd','MSAnimationEnd','animationend'],i,dom=this;function fireCallBack(e){callback(e);for(i = 0;i < events.length;i++) {dom.off(events[i],fireCallBack);}}if(callback){for(i = 0;i < events.length;i++) {dom.on(events[i],fireCallBack);}}return this;};$.fn.transition = function(duration){if(typeof duration !== 'string'){duration = duration + 'ms';}for(var i=0;i < this.length;i++) {var elStyle=this[i].style;elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;}return this;};$.fn.transform = function(transform){for(var i=0;i < this.length;i++) {var elStyle=this[i].style;elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;}return this;};$.fn.prevAll = function(selector){var prevEls=[];var el=this[0];if(!el)return $([]);while(el.previousElementSibling) {var prev=el.previousElementSibling;if(selector){if($(prev).is(selector))prevEls.push(prev);}else prevEls.push(prev);el = prev;}return $(prevEls);};$.fn.nextAll = function(selector){var nextEls=[];var el=this[0];if(!el)return $([]);while(el.nextElementSibling) {var next=el.nextElementSibling;if(selector){if($(next).is(selector))nextEls.push(next);}else nextEls.push(next);el = next;}return $(nextEls);}; //重置zepto的show方法，防止有些人引用的版本中 show 方法操作 opacity 属性影响动画执行
	$.fn.show = function(){var elementDisplay={};function defaultDisplay(nodeName){var element,display;if(!elementDisplay[nodeName]){element = document.createElement(nodeName);document.body.appendChild(element);display = getComputedStyle(element,'').getPropertyValue("display");element.parentNode.removeChild(element);display === "none" && (display = "block");elementDisplay[nodeName] = display;}return elementDisplay[nodeName];}return this.each(function(){this.style.display === "none" && (this.style.display = '');if(getComputedStyle(this,'').getPropertyValue("display") === "none");this.style.display = defaultDisplay(this.nodeName);});};})(Zepto);;(function(){'use strict'; /**
		 * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
		 *
		 * @codingstandard ftlabs-jsv2
		 * @copyright The Financial Times Limited [All Rights Reserved]
		 * @license MIT License (see LICENSE.txt)
		 */ /*jslint browser:true, node:true, elision:true*/ /*global Event, Node*/ /**
		 * Instantiate fast-clicking listeners on the specified layer.
		 *
		 * @constructor
		 * @param {Element} layer The layer to listen on
		 * @param {Object} [options={}] The options to override the defaults
		 */function FastClick(layer,options){var oldOnClick;options = options || {}; /**
			 * Whether a click is currently being tracked.
			 *
			 * @type boolean
			 */this.trackingClick = false; /**
			 * Timestamp for when click tracking started.
			 *
			 * @type number
			 */this.trackingClickStart = 0; /**
			 * The element being tracked for a click.
			 *
			 * @type EventTarget
			 */this.targetElement = null; /**
			 * X-coordinate of touch start event.
			 *
			 * @type number
			 */this.touchStartX = 0; /**
			 * Y-coordinate of touch start event.
			 *
			 * @type number
			 */this.touchStartY = 0; /**
			 * ID of the last touch, retrieved from Touch.identifier.
			 *
			 * @type number
			 */this.lastTouchIdentifier = 0; /**
			 * Touchmove boundary, beyond which a click will be cancelled.
			 *
			 * @type number
			 */this.touchBoundary = options.touchBoundary || 10; /**
			 * The FastClick layer.
			 *
			 * @type Element
			 */this.layer = layer; /**
			 * The minimum time between tap(touchstart and touchend) events
			 *
			 * @type number
			 */this.tapDelay = options.tapDelay || 200; /**
			 * The maximum time for a tap
			 *
			 * @type number
			 */this.tapTimeout = options.tapTimeout || 700;if(FastClick.notNeeded(layer)){return;} // Some old versions of Android don't have Function.prototype.bind
	function bind(method,context){return function(){return method.apply(context,arguments);};}var methods=['onMouse','onClick','onTouchStart','onTouchMove','onTouchEnd','onTouchCancel'];var context=this;for(var i=0,l=methods.length;i < l;i++) {context[methods[i]] = bind(context[methods[i]],context);} // Set up event handlers as required
	if(deviceIsAndroid){layer.addEventListener('mouseover',this.onMouse,true);layer.addEventListener('mousedown',this.onMouse,true);layer.addEventListener('mouseup',this.onMouse,true);}layer.addEventListener('click',this.onClick,true);layer.addEventListener('touchstart',this.onTouchStart,false);layer.addEventListener('touchmove',this.onTouchMove,false);layer.addEventListener('touchend',this.onTouchEnd,false);layer.addEventListener('touchcancel',this.onTouchCancel,false); // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
	// which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
	// layer when they are cancelled.
	if(!Event.prototype.stopImmediatePropagation){layer.removeEventListener = function(type,callback,capture){var rmv=Node.prototype.removeEventListener;if(type === 'click'){rmv.call(layer,type,callback.hijacked || callback,capture);}else {rmv.call(layer,type,callback,capture);}};layer.addEventListener = function(type,callback,capture){var adv=Node.prototype.addEventListener;if(type === 'click'){adv.call(layer,type,callback.hijacked || (callback.hijacked = function(event){if(!event.propagationStopped){callback(event);}}),capture);}else {adv.call(layer,type,callback,capture);}};} // If a handler is already declared in the element's onclick attribute, it will be fired before
	// FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
	// adding it as listener.
	if(typeof layer.onclick === 'function'){ // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
	// - the old one won't work if passed to addEventListener directly.
	oldOnClick = layer.onclick;layer.addEventListener('click',function(event){oldOnClick(event);},false);layer.onclick = null;}} /**
		* Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
		*
		* @type boolean
		*/var deviceIsWindowsPhone=navigator.userAgent.indexOf("Windows Phone") >= 0; /**
		 * Android requires exceptions.
		 *
		 * @type boolean
		 */var deviceIsAndroid=navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone; /**
		 * iOS requires exceptions.
		 *
		 * @type boolean
		 */var deviceIsIOS=/iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone; /**
		 * iOS 4 requires an exception for select elements.
		 *
		 * @type boolean
		 */var deviceIsIOS4=deviceIsIOS && /OS 4_\d(_\d)?/.test(navigator.userAgent); /**
		 * iOS 6.0-7.* requires the target element to be manually derived
		 *
		 * @type boolean
		 */var deviceIsIOSWithBadTarget=deviceIsIOS && /OS [6-7]_\d/.test(navigator.userAgent); /**
		 * BlackBerry requires exceptions.
		 *
		 * @type boolean
		 */var deviceIsBlackBerry10=navigator.userAgent.indexOf('BB10') > 0; /**
		 * Determine whether a given element requires a native click.
		 *
		 * @param {EventTarget|Element} target Target DOM element
		 * @returns {boolean} Returns true if the element needs a native click
		 */FastClick.prototype.needsClick = function(target){ //修复bug: 如果父元素中有 label
	var parent=target;while(parent && parent.tagName.toUpperCase() !== "BODY") {if(parent.tagName.toUpperCase() === "LABEL")return true;parent = parent.parentNode;}switch(target.nodeName.toLowerCase()){ // Don't send a synthetic click to disabled inputs (issue #62)
	case 'button':case 'select':case 'textarea':if(target.disabled){return true;}break;case 'input': // File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
	if(deviceIsIOS && target.type === 'file' || target.disabled){return true;}break;case 'label':case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
	case 'video':return true;}return (/\bneedsclick\b/.test(target.className));}; /**
		 * Determine whether a given element requires a call to focus to simulate click into element.
		 *
		 * @param {EventTarget|Element} target Target DOM element
		 * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
		 */FastClick.prototype.needsFocus = function(target){switch(target.nodeName.toLowerCase()){case 'textarea':return true;case 'select':return !deviceIsAndroid;case 'input':switch(target.type){case 'button':case 'checkbox':case 'file':case 'image':case 'radio':case 'submit':return false;} // No point in attempting to focus disabled inputs
	return !target.disabled && !target.readOnly;default:return (/\bneedsfocus\b/.test(target.className));}}; /**
		 * Send a click event to the specified element.
		 *
		 * @param {EventTarget|Element} targetElement
		 * @param {Event} event
		 */FastClick.prototype.sendClick = function(targetElement,event){var clickEvent,touch; // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
	if(document.activeElement && document.activeElement !== targetElement){document.activeElement.blur();}touch = event.changedTouches[0]; // Synthesise a click event, with an extra attribute so it can be tracked
	clickEvent = document.createEvent('MouseEvents');clickEvent.initMouseEvent(this.determineEventType(targetElement),true,true,window,1,touch.screenX,touch.screenY,touch.clientX,touch.clientY,false,false,false,false,0,null);clickEvent.forwardedTouchEvent = true;targetElement.dispatchEvent(clickEvent);};FastClick.prototype.determineEventType = function(targetElement){ //Issue #159: Android Chrome Select Box does not open with a synthetic click event
	if(deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select'){return 'mousedown';}return 'click';}; /**
		 * @param {EventTarget|Element} targetElement
		 */FastClick.prototype.focus = function(targetElement){var length; // Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
	if(deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month'){length = targetElement.value.length;targetElement.setSelectionRange(length,length);}else {targetElement.focus();}}; /**
		 * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
		 *
		 * @param {EventTarget|Element} targetElement
		 */FastClick.prototype.updateScrollParent = function(targetElement){var scrollParent,parentElement;scrollParent = targetElement.fastClickScrollParent; // Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
	// target element was moved to another parent.
	if(!scrollParent || !scrollParent.contains(targetElement)){parentElement = targetElement;do {if(parentElement.scrollHeight > parentElement.offsetHeight){scrollParent = parentElement;targetElement.fastClickScrollParent = parentElement;break;}parentElement = parentElement.parentElement;}while(parentElement);} // Always update the scroll top tracker if possible.
	if(scrollParent){scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;}}; /**
		 * @param {EventTarget} targetElement
		 * @returns {Element|EventTarget}
		 */FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget){ // On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
	if(eventTarget.nodeType === Node.TEXT_NODE){return eventTarget.parentNode;}return eventTarget;}; /**
		 * On touch start, record the position and scroll offset.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.onTouchStart = function(event){var targetElement,touch,selection; // Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
	if(event.targetTouches.length > 1){return true;}targetElement = this.getTargetElementFromEventTarget(event.target);touch = event.targetTouches[0];if(deviceIsIOS){ // Only trusted events will deselect text on iOS (issue #49)
	selection = window.getSelection();if(selection.rangeCount && !selection.isCollapsed){return true;}if(!deviceIsIOS4){ // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
	// when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
	// with the same identifier as the touch event that previously triggered the click that triggered the alert.
	// Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
	// immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
	// Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
	// which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
	// random integers, it's safe to to continue if the identifier is 0 here.
	if(touch.identifier && touch.identifier === this.lastTouchIdentifier){event.preventDefault();return false;}this.lastTouchIdentifier = touch.identifier; // If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
	// 1) the user does a fling scroll on the scrollable layer
	// 2) the user stops the fling scroll with another tap
	// then the event.target of the last 'touchend' event will be the element that was under the user's finger
	// when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
	// is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
	this.updateScrollParent(targetElement);}}this.trackingClick = true;this.trackingClickStart = event.timeStamp;this.targetElement = targetElement;this.touchStartX = touch.pageX;this.touchStartY = touch.pageY; // Prevent phantom clicks on fast double-tap (issue #36)
	if(event.timeStamp - this.lastClickTime < this.tapDelay){event.preventDefault();}return true;}; /**
		 * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.touchHasMoved = function(event){var touch=event.changedTouches[0],boundary=this.touchBoundary;if(Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary){return true;}return false;}; /**
		 * Update the last position.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.onTouchMove = function(event){if(!this.trackingClick){return true;} // If the touch has moved, cancel the click tracking
	if(this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)){this.trackingClick = false;this.targetElement = null;}return true;}; /**
		 * Attempt to find the labelled control for the given label element.
		 *
		 * @param {EventTarget|HTMLLabelElement} labelElement
		 * @returns {Element|null}
		 */FastClick.prototype.findControl = function(labelElement){ // Fast path for newer browsers supporting the HTML5 control attribute
	if(labelElement.control !== undefined){return labelElement.control;} // All browsers under test that support touch events also support the HTML5 htmlFor attribute
	if(labelElement.htmlFor){return document.getElementById(labelElement.htmlFor);} // If no for attribute exists, attempt to retrieve the first labellable descendant element
	// the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
	return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');}; /**
		 * On touch end, determine whether to send a click event at once.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.onTouchEnd = function(event){var forElement,trackingClickStart,targetTagName,scrollParent,touch,targetElement=this.targetElement;if(!this.trackingClick){return true;} // Prevent phantom clicks on fast double-tap (issue #36)
	if(event.timeStamp - this.lastClickTime < this.tapDelay){this.cancelNextClick = true;return true;}if(event.timeStamp - this.trackingClickStart > this.tapTimeout){return true;} // Reset to prevent wrong click cancel on input (issue #156).
	this.cancelNextClick = false;this.lastClickTime = event.timeStamp;trackingClickStart = this.trackingClickStart;this.trackingClick = false;this.trackingClickStart = 0; // On some iOS devices, the targetElement supplied with the event is invalid if the layer
	// is performing a transition or scroll, and has to be re-detected manually. Note that
	// for this to function correctly, it must be called *after* the event target is checked!
	// See issue #57; also filed as rdar://13048589 .
	if(deviceIsIOSWithBadTarget){touch = event.changedTouches[0]; // In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
	targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset,touch.pageY - window.pageYOffset) || targetElement;targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;}targetTagName = targetElement.tagName.toLowerCase();if(targetTagName === 'label'){forElement = this.findControl(targetElement);if(forElement){this.focus(targetElement);if(deviceIsAndroid){return false;}targetElement = forElement;}}else if(this.needsFocus(targetElement)){ // Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
	// Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
	if(event.timeStamp - trackingClickStart > 100 || deviceIsIOS && window.top !== window && targetTagName === 'input'){this.targetElement = null;return false;}this.focus(targetElement);this.sendClick(targetElement,event); // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
	// Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
	if(!deviceIsIOS || targetTagName !== 'select'){this.targetElement = null;event.preventDefault();}return false;}if(deviceIsIOS && !deviceIsIOS4){ // Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
	// and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
	scrollParent = targetElement.fastClickScrollParent;if(scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop){return true;}} // Prevent the actual click from going though - unless the target node is marked as requiring
	// real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
	if(!this.needsClick(targetElement)){event.preventDefault();this.sendClick(targetElement,event);}return false;}; /**
		 * On touch cancel, stop tracking the click.
		 *
		 * @returns {void}
		 */FastClick.prototype.onTouchCancel = function(){this.trackingClick = false;this.targetElement = null;}; /**
		 * Determine mouse events which should be permitted.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.onMouse = function(event){ // If a target element was never set (because a touch event was never fired) allow the event
	if(!this.targetElement){return true;}if(event.forwardedTouchEvent){return true;} // Programmatically generated events targeting a specific element should be permitted
	if(!event.cancelable){return true;} // Derive and check the target element to see whether the mouse event needs to be permitted;
	// unless explicitly enabled, prevent non-touch click events from triggering actions,
	// to prevent ghost/doubleclicks.
	if(!this.needsClick(this.targetElement) || this.cancelNextClick){ // Prevent any user-added listeners declared on FastClick element from being fired.
	if(event.stopImmediatePropagation){event.stopImmediatePropagation();}else { // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
	event.propagationStopped = true;} // Cancel the event
	event.stopPropagation();event.preventDefault();return false;} // If the mouse event is permitted, return true for the action to go through.
	return true;}; /**
		 * On actual clicks, determine whether this is a touch-generated click, a click action occurring
		 * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
		 * an actual click which should be permitted.
		 *
		 * @param {Event} event
		 * @returns {boolean}
		 */FastClick.prototype.onClick = function(event){var permitted; // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
	if(this.trackingClick){this.targetElement = null;this.trackingClick = false;return true;} // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
	if(event.target.type === 'submit' && event.detail === 0){return true;}permitted = this.onMouse(event); // Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
	if(!permitted){this.targetElement = null;} // If clicks are permitted, return true for the action to go through.
	return permitted;}; /**
		 * Remove all FastClick's event listeners.
		 *
		 * @returns {void}
		 */FastClick.prototype.destroy = function(){var layer=this.layer;if(deviceIsAndroid){layer.removeEventListener('mouseover',this.onMouse,true);layer.removeEventListener('mousedown',this.onMouse,true);layer.removeEventListener('mouseup',this.onMouse,true);}layer.removeEventListener('click',this.onClick,true);layer.removeEventListener('touchstart',this.onTouchStart,false);layer.removeEventListener('touchmove',this.onTouchMove,false);layer.removeEventListener('touchend',this.onTouchEnd,false);layer.removeEventListener('touchcancel',this.onTouchCancel,false);}; /**
		 * Check whether FastClick is needed.
		 *
		 * @param {Element} layer The layer to listen on
		 */FastClick.notNeeded = function(layer){var metaViewport;var chromeVersion;var blackberryVersion;var firefoxVersion; // Devices that don't support touch don't need FastClick
	if(typeof window.ontouchstart === 'undefined'){return true;} // Chrome version - zero for other browsers
	chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];if(chromeVersion){if(deviceIsAndroid){metaViewport = document.querySelector('meta[name=viewport]');if(metaViewport){ // Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
	if(metaViewport.content.indexOf('user-scalable=no') !== -1){return true;} // Chrome 32 and above with width=device-width or less don't need FastClick
	if(chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth){return true;}} // Chrome desktop doesn't need FastClick (issue #15)
	}else {return true;}}if(deviceIsBlackBerry10){blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/); // BlackBerry 10.3+ does not require Fastclick library.
	// https://github.com/ftlabs/fastclick/issues/251
	if(blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3){metaViewport = document.querySelector('meta[name=viewport]');if(metaViewport){ // user-scalable=no eliminates click delay.
	if(metaViewport.content.indexOf('user-scalable=no') !== -1){return true;} // width=device-width (or less than device-width) eliminates click delay.
	if(document.documentElement.scrollWidth <= window.outerWidth){return true;}}}} // IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
	if(layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation'){return true;} // Firefox version - zero for other browsers
	firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];if(firefoxVersion >= 27){ // Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896
	metaViewport = document.querySelector('meta[name=viewport]');if(metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)){return true;}} // IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
	// http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
	if(layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation'){return true;}return false;}; /**
		 * Factory method for creating a FastClick object
		 *
		 * @param {Element} layer The layer to listen on
		 * @param {Object} [options={}] The options to override the defaults
		 */FastClick.attach = function(layer,options){return new FastClick(layer,options);}; //直接绑定
	FastClick.attach(document.body);})(); /*===========================
	  Template7 Template engine
	  ===========================*/ /* global Zepto:true */ /* jshint unused:false */ /* jshint forin:false */+(function($){"use strict";$.Template7 = $.t7 = (function(){function isArray(arr){return Object.prototype.toString.apply(arr) === '[object Array]';}function isObject(obj){return obj instanceof Object;}function isFunction(func){return typeof func === 'function';}var cache={};function helperToSlices(string){var helperParts=string.replace(/[{}#}]/g,'').split(' ');var slices=[];var shiftIndex,i,j;for(i = 0;i < helperParts.length;i++) {var part=helperParts[i];if(i === 0)slices.push(part);else {if(part.indexOf('"') === 0){ // Plain String
	if(part.match(/"/g).length === 2){ // One word string
	slices.push(part);}else { // Find closed Index
	shiftIndex = 0;for(j = i + 1;j < helperParts.length;j++) {part += ' ' + helperParts[j];if(helperParts[j].indexOf('"') >= 0){shiftIndex = j;slices.push(part);break;}}if(shiftIndex)i = shiftIndex;}}else {if(part.indexOf('=') > 0){ // Hash
	var hashParts=part.split('=');var hashName=hashParts[0];var hashContent=hashParts[1];if(hashContent.match(/"/g).length !== 2){shiftIndex = 0;for(j = i + 1;j < helperParts.length;j++) {hashContent += ' ' + helperParts[j];if(helperParts[j].indexOf('"') >= 0){shiftIndex = j;break;}}if(shiftIndex)i = shiftIndex;}var hash=[hashName,hashContent.replace(/"/g,'')];slices.push(hash);}else { // Plain variable
	slices.push(part);}}}}return slices;}function stringToBlocks(string){var blocks=[],i,j,k;if(!string)return [];var _blocks=string.split(/({{[^{^}]*}})/);for(i = 0;i < _blocks.length;i++) {var block=_blocks[i];if(block === '')continue;if(block.indexOf('{{') < 0){blocks.push({type:'plain',content:block});}else {if(block.indexOf('{/') >= 0){continue;}if(block.indexOf('{#') < 0 && block.indexOf(' ') < 0 && block.indexOf('else') < 0){ // Simple variable
	blocks.push({type:'variable',contextName:block.replace(/[{}]/g,'')});continue;} // Helpers
	var helperSlices=helperToSlices(block);var helperName=helperSlices[0];var helperContext=[];var helperHash={};for(j = 1;j < helperSlices.length;j++) {var slice=helperSlices[j];if(isArray(slice)){ // Hash
	helperHash[slice[0]] = slice[1] === 'false'?false:slice[1];}else {helperContext.push(slice);}}if(block.indexOf('{#') >= 0){ // Condition/Helper
	var helperStartIndex=i;var helperContent='';var elseContent='';var toSkip=0;var shiftIndex;var foundClosed=false,foundElse=false,foundClosedElse=false,depth=0;for(j = i + 1;j < _blocks.length;j++) {if(_blocks[j].indexOf('{{#') >= 0){depth++;}if(_blocks[j].indexOf('{{/') >= 0){depth--;}if(_blocks[j].indexOf('{{#' + helperName) >= 0){helperContent += _blocks[j];if(foundElse)elseContent += _blocks[j];toSkip++;}else if(_blocks[j].indexOf('{{/' + helperName) >= 0){if(toSkip > 0){toSkip--;helperContent += _blocks[j];if(foundElse)elseContent += _blocks[j];}else {shiftIndex = j;foundClosed = true;break;}}else if(_blocks[j].indexOf('else') >= 0 && depth === 0){foundElse = true;}else {if(!foundElse)helperContent += _blocks[j];if(foundElse)elseContent += _blocks[j];}}if(foundClosed){if(shiftIndex)i = shiftIndex;blocks.push({type:'helper',helperName:helperName,contextName:helperContext,content:helperContent,inverseContent:elseContent,hash:helperHash});}}else if(block.indexOf(' ') > 0){blocks.push({type:'helper',helperName:helperName,contextName:helperContext,hash:helperHash});}}}return blocks;}var Template7=function Template7(template){var t=this;t.template = template;function getCompileFn(block,depth){if(block.content)return compile(block.content,depth);else return function(){return '';};}function getCompileInverse(block,depth){if(block.inverseContent)return compile(block.inverseContent,depth);else return function(){return '';};}function getCompileVar(name,ctx){var variable,parts,levelsUp=0,initialCtx=ctx;if(name.indexOf('../') === 0){levelsUp = name.split('../').length - 1;var newDepth=ctx.split('_')[1] - levelsUp;ctx = 'ctx_' + (newDepth >= 1?newDepth:1);parts = name.split('../')[levelsUp].split('.');}else if(name.indexOf('@global') === 0){ctx = '$.Template7.global';parts = name.split('@global.')[1].split('.');}else if(name.indexOf('@root') === 0){ctx = 'ctx_1';parts = name.split('@root.')[1].split('.');}else {parts = name.split('.');}variable = ctx;for(var i=0;i < parts.length;i++) {var part=parts[i];if(part.indexOf('@') === 0){if(i > 0){variable += '[(data && data.' + part.replace('@','') + ')]';}else {variable = '(data && data.' + name.replace('@','') + ')';}}else {if(isFinite(part)){variable += '[' + part + ']';}else {if(part.indexOf('this') === 0){variable = part.replace('this',ctx);}else {variable += '.' + part;}}}}return variable;}function getCompiledArguments(contextArray,ctx){var arr=[];for(var i=0;i < contextArray.length;i++) {if(contextArray[i].indexOf('"') === 0)arr.push(contextArray[i]);else {arr.push(getCompileVar(contextArray[i],ctx));}}return arr.join(', ');}function compile(template,depth){depth = depth || 1;template = template || t.template;if(typeof template !== 'string'){throw new Error('Template7: Template must be a string');}var blocks=stringToBlocks(template);if(blocks.length === 0){return function(){return '';};}var ctx='ctx_' + depth;var resultString='(function (' + ctx + ', data) {\n';if(depth === 1){resultString += 'function isArray(arr){return Object.prototype.toString.apply(arr) === \'[object Array]\';}\n';resultString += 'function isFunction(func){return (typeof func === \'function\');}\n';resultString += 'function c(val, ctx) {if (typeof val !== "undefined") {if (isFunction(val)) {return val.call(ctx);} else return val;} else return "";}\n';}resultString += 'var r = \'\';\n';var i,j,context;for(i = 0;i < blocks.length;i++) {var block=blocks[i]; // Plain block
	if(block.type === 'plain'){resultString += 'r +=\'' + block.content.replace(/\r/g,'\\r').replace(/\n/g,'\\n').replace(/'/g,'\\' + '\'') + '\';';continue;}var variable,compiledArguments; // Variable block
	if(block.type === 'variable'){variable = getCompileVar(block.contextName,ctx);resultString += 'r += c(' + variable + ', ' + ctx + ');';} // Helpers block
	if(block.type === 'helper'){if(block.helperName in t.helpers){compiledArguments = getCompiledArguments(block.contextName,ctx);resultString += 'r += ($.Template7.helpers.' + block.helperName + ').call(' + ctx + ', ' + (compiledArguments && compiledArguments + ', ') + '{hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block,depth + 1) + ', inverse: ' + getCompileInverse(block,depth + 1) + ', root: ctx_1});';}else {if(block.contextName.length > 0){throw new Error('Template7: Missing helper: "' + block.helperName + '"');}else {variable = getCompileVar(block.helperName,ctx);resultString += 'if (' + variable + ') {';resultString += 'if (isArray(' + variable + ')) {';resultString += 'r += ($.Template7.helpers.each).call(' + ctx + ', ' + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block,depth + 1) + ', inverse: ' + getCompileInverse(block,depth + 1) + ', root: ctx_1});';resultString += '}else {';resultString += 'r += ($.Template7.helpers.with).call(' + ctx + ', ' + variable + ', {hash:' + JSON.stringify(block.hash) + ', data: data || {}, fn: ' + getCompileFn(block,depth + 1) + ', inverse: ' + getCompileInverse(block,depth + 1) + ', root: ctx_1});';resultString += '}}';}}}}resultString += '\nreturn r;})';return eval.call(window,resultString);}t.compile = function(template){if(!t.compiled){t.compiled = compile(template);}return t.compiled;};};Template7.prototype = {options:{},helpers:{'if':function _if(context,options){if(isFunction(context)){context = context.call(this);}if(context){return options.fn(this,options.data);}else {return options.inverse(this,options.data);}},'unless':function unless(context,options){if(isFunction(context)){context = context.call(this);}if(!context){return options.fn(this,options.data);}else {return options.inverse(this,options.data);}},'each':function each(context,options){var ret='',i=0;if(isFunction(context)){context = context.call(this);}if(isArray(context)){if(options.hash.reverse){context = context.reverse();}for(i = 0;i < context.length;i++) {ret += options.fn(context[i],{first:i === 0,last:i === context.length - 1,index:i});}if(options.hash.reverse){context = context.reverse();}}else {for(var key in context) {i++;ret += options.fn(context[key],{key:key});}}if(i > 0)return ret;else return options.inverse(this);},'with':function _with(context,options){if(isFunction(context)){context = context.call(this);}return options.fn(context);},'join':function join(context,options){if(isFunction(context)){context = context.call(this);}return context.join(options.hash.delimiter || options.hash.delimeter);},'js':function js(expression,options){var func;if(expression.indexOf('return') >= 0){func = '(function(){' + expression + '})';}else {func = '(function(){return (' + expression + ')})';}return eval.call(this,func).call(this);},'js_compare':function js_compare(expression,options){var func;if(expression.indexOf('return') >= 0){func = '(function(){' + expression + '})';}else {func = '(function(){return (' + expression + ')})';}var condition=eval.call(this,func).call(this);if(condition){return options.fn(this,options.data);}else {return options.inverse(this,options.data);}}}};var t7=function t7(template,data){if(arguments.length === 2){var instance=new Template7(template);var rendered=instance.compile()(data);instance = null;return rendered;}else return new Template7(template);};t7.registerHelper = function(name,fn){Template7.prototype.helpers[name] = fn;};t7.unregisterHelper = function(name){Template7.prototype.helpers[name] = undefined;delete Template7.prototype.helpers[name];};t7.compile = function(template,options){var instance=new Template7(template,options);return instance.compile();};t7.options = Template7.prototype.options;t7.helpers = Template7.prototype.helpers;return t7;})();})(Zepto); /* ===============================================================================
	************   scroller   ************
	=============================================================================== */ /* global Zepto:true */+(function($){"use strict";$.getCurrentPage = function(){return $(".page")[0] || document.body;};})(Zepto); /* ===============================================================================
	************   Tabs   ************
	=============================================================================== */ /* global Zepto:true */+(function($){"use strict";var showTab=function showTab(tab,tabLink,force){var newTab=$(tab);if(arguments.length === 2){if(typeof tabLink === 'boolean'){force = tabLink;}}if(newTab.length === 0)return false;if(newTab.hasClass('active')){if(force)newTab.trigger('show');return false;}var tabs=newTab.parent('.tabs');if(tabs.length === 0)return false; // Animated tabs
	/*var isAnimatedTabs = tabs.parent().hasClass('tabs-animated-wrap');
	      if (isAnimatedTabs) {
	      tabs.transform('translate3d(' + -newTab.index() * 100 + '%,0,0)');
	      }*/ // Remove active class from old tabs
	var oldTab=tabs.children('.tab.active').removeClass('active'); // Add active class to new tab
	newTab.addClass('active'); // Trigger 'show' event on new tab
	newTab.trigger('show'); // Update navbars in new tab
	/*if (!isAnimatedTabs && newTab.find('.navbar').length > 0) {
	    // Find tab's view
	    var viewContainer;
	    if (newTab.hasClass(app.params.viewClass)) viewContainer = newTab[0];
	    else viewContainer = newTab.parents('.' + app.params.viewClass)[0];
	    app.sizeNavbars(viewContainer);
	    }*/ // Find related link for new tab
	if(tabLink)tabLink = $(tabLink);else { // Search by id
	if(typeof tab === 'string')tabLink = $('.tab-link[href="' + tab + '"]');else tabLink = $('.tab-link[href="#' + newTab.attr('id') + '"]'); // Search by data-tab
	if(!tabLink || tabLink && tabLink.length === 0){$('[data-tab]').each(function(){if(newTab.is($(this).attr('data-tab')))tabLink = $(this);});}}if(tabLink.length === 0)return; // Find related link for old tab
	var oldTabLink;if(oldTab && oldTab.length > 0){ // Search by id
	var oldTabId=oldTab.attr('id');if(oldTabId)oldTabLink = $('.tab-link[href="#' + oldTabId + '"]'); // Search by data-tab
	if(!oldTabLink || oldTabLink && oldTabLink.length === 0){$('[data-tab]').each(function(){if(oldTab.is($(this).attr('data-tab')))oldTabLink = $(this);});}} // Update links' classes
	if(tabLink && tabLink.length > 0)tabLink.addClass('active');if(oldTabLink && oldTabLink.length > 0)oldTabLink.removeClass('active'); //app.refreshScroller();
	return true;};var old=$.showTab;$.showTab = showTab;$.showTab.noConflict = function(){$.showTab = old;return this;};$(document).on("click",".tab-link",function(e){e.preventDefault();var clicked=$(this);showTab(clicked.data("tab") || clicked.attr('href'),clicked);});})(Zepto); /*======================================================
	************   Modals   ************
	======================================================*/ /*jshint unused: false*/ /* global Zepto:true */+(function($){"use strict";var _modalTemplateTempDiv=document.createElement('div');$.modalStack = [];var t7=$.Template7;$.modalStackClearQueue = function(){if($.modalStack.length){$.modalStack.shift()();}};$.modal = function(params){params = params || {};var modalHTML='';if(defaults.modalTemplate){if(!$._compiledTemplates.modal)$._compiledTemplates.modal = t7.compile(defaults.modalTemplate);modalHTML = $._compiledTemplates.modal(params);}else {var buttonsHTML='';if(params.buttons && params.buttons.length > 0){for(var i=0;i < params.buttons.length;i++) {buttonsHTML += '<span class="modal-button' + (params.buttons[i].bold?' modal-button-bold':'') + '">' + params.buttons[i].text + '</span>';}}var titleHTML=params.title?'<div class="modal-title">' + params.title + '</div>':'';var textHTML=params.text?'<div class="modal-text">' + params.text + '</div>':'';var afterTextHTML=params.afterText?params.afterText:'';var noButtons=!params.buttons || params.buttons.length === 0?'modal-no-buttons':'';var verticalButtons=params.verticalButtons?'modal-buttons-vertical':'';modalHTML = '<div class="modal ' + noButtons + '"><div class="modal-inner">' + (titleHTML + textHTML + afterTextHTML) + '</div><div class="modal-buttons ' + verticalButtons + '">' + buttonsHTML + '</div></div>';}_modalTemplateTempDiv.innerHTML = modalHTML;var modal=$(_modalTemplateTempDiv).children();$(defaults.modalContainer).append(modal[0]); // Add events on buttons
	modal.find('.modal-button').each(function(index,el){$(el).on('click',function(e){if(params.buttons[index].close !== false)$.closeModal(modal);if(params.buttons[index].onClick)params.buttons[index].onClick(modal,e);if(params.onClick)params.onClick(modal,index);});});$.openModal(modal);return modal[0];};$.alert = function(text,title,callbackOk){if(typeof title === 'function'){callbackOk = arguments[1];title = undefined;}return $.modal({text:text || '',title:typeof title === 'undefined'?defaults.modalTitle:title,buttons:[{text:defaults.modalButtonOk,bold:true,onClick:callbackOk}]});};$.confirm = function(text,title,callbackOk,callbackCancel){if(typeof title === 'function'){callbackCancel = arguments[2];callbackOk = arguments[1];title = undefined;}return $.modal({text:text || '',title:typeof title === 'undefined'?defaults.modalTitle:title,buttons:[{text:defaults.modalButtonCancel,onClick:callbackCancel},{text:defaults.modalButtonOk,bold:true,onClick:callbackOk}]});};$.prompt = function(text,title,callbackOk,callbackCancel){if(typeof title === 'function'){callbackCancel = arguments[2];callbackOk = arguments[1];title = undefined;}return $.modal({text:text || '',title:typeof title === 'undefined'?defaults.modalTitle:title,afterText:'<input type="text" class="modal-text-input">',buttons:[{text:defaults.modalButtonCancel},{text:defaults.modalButtonOk,bold:true}],onClick:function onClick(modal,index){if(index === 0 && callbackCancel)callbackCancel($(modal).find('.modal-text-input').val());if(index === 1 && callbackOk)callbackOk($(modal).find('.modal-text-input').val());}});};$.modalLogin = function(text,title,callbackOk,callbackCancel){if(typeof title === 'function'){callbackCancel = arguments[2];callbackOk = arguments[1];title = undefined;}return $.modal({text:text || '',title:typeof title === 'undefined'?defaults.modalTitle:title,afterText:'<input type="text" name="modal-username" placeholder="' + defaults.modalUsernamePlaceholder + '" class="modal-text-input modal-text-input-double"><input type="password" name="modal-password" placeholder="' + defaults.modalPasswordPlaceholder + '" class="modal-text-input modal-text-input-double">',buttons:[{text:defaults.modalButtonCancel},{text:defaults.modalButtonOk,bold:true}],onClick:function onClick(modal,index){var username=$(modal).find('.modal-text-input[name="modal-username"]').val();var password=$(modal).find('.modal-text-input[name="modal-password"]').val();if(index === 0 && callbackCancel)callbackCancel(username,password);if(index === 1 && callbackOk)callbackOk(username,password);}});};$.modalPassword = function(text,title,callbackOk,callbackCancel){if(typeof title === 'function'){callbackCancel = arguments[2];callbackOk = arguments[1];title = undefined;}return $.modal({text:text || '',title:typeof title === 'undefined'?defaults.modalTitle:title,afterText:'<input type="password" name="modal-password" placeholder="' + defaults.modalPasswordPlaceholder + '" class="modal-text-input">',buttons:[{text:defaults.modalButtonCancel},{text:defaults.modalButtonOk,bold:true}],onClick:function onClick(modal,index){var password=$(modal).find('.modal-text-input[name="modal-password"]').val();if(index === 0 && callbackCancel)callbackCancel(password);if(index === 1 && callbackOk)callbackOk(password);}});};$.showPreloader = function(title){return $.modal({title:title || defaults.modalPreloaderTitle,text:'<div class="preloader"></div>'});};$.hidePreloader = function(){$.closeModal('.modal.modal-in');};$.showIndicator = function(){$(defaults.modalContainer).append('<div class="preloader-indicator-overlay"></div><div class="preloader-indicator-modal"><span class="preloader preloader-white"></span></div>');};$.hideIndicator = function(){$('.preloader-indicator-overlay, .preloader-indicator-modal').remove();}; // Action Sheet
	$.actions = function(target,params){var toPopover=false,modal,groupSelector,buttonSelector;if(arguments.length === 1){ // Actions
	params = target;}else { // Popover
	if($.device.ios){if($.device.ipad)toPopover = true;}else {if($(window).width() >= 768)toPopover = true;}}params = params || [];if(params.length > 0 && !$.isArray(params[0])){params = [params];}var modalHTML;if(toPopover){var actionsToPopoverTemplate=defaults.modalActionsToPopoverTemplate || '<div class="popover actions-popover">' + '<div class="popover-inner">' + '{{#each this}}' + '<div class="list-block">' + '<ul>' + '{{#each this}}' + '{{#if label}}' + '<li class="actions-popover-label {{#if color}}color-{{color}}{{/if}} {{#if bold}}actions-popover-bold{{/if}}">{{text}}</li>' + '{{else}}' + '<li><a href="#" class="item-link list-button {{#if color}}color-{{color}}{{/if}} {{#if bg}}bg-{{bg}}{{/if}} {{#if bold}}actions-popover-bold{{/if}} {{#if disabled}}disabled{{/if}}">{{text}}</a></li>' + '{{/if}}' + '{{/each}}' + '</ul>' + '</div>' + '{{/each}}' + '</div>' + '</div>';if(!$._compiledTemplates.actionsToPopover){$._compiledTemplates.actionsToPopover = t7.compile(actionsToPopoverTemplate);}var popoverHTML=$._compiledTemplates.actionsToPopover(params);modal = $($.popover(popoverHTML,target,true));groupSelector = '.list-block ul';buttonSelector = '.list-button';}else {if(defaults.modalActionsTemplate){if(!$._compiledTemplates.actions)$._compiledTemplates.actions = t7.compile(defaults.modalActionsTemplate);modalHTML = $._compiledTemplates.actions(params);}else {var buttonsHTML='';for(var i=0;i < params.length;i++) {for(var j=0;j < params[i].length;j++) {if(j === 0)buttonsHTML += '<div class="actions-modal-group">';var button=params[i][j];var buttonClass=button.label?'actions-modal-label':'actions-modal-button';if(button.bold)buttonClass += ' actions-modal-button-bold';if(button.color)buttonClass += ' color-' + button.color;if(button.bg)buttonClass += ' bg-' + button.bg;if(button.disabled)buttonClass += ' disabled';buttonsHTML += '<span class="' + buttonClass + '">' + button.text + '</span>';if(j === params[i].length - 1)buttonsHTML += '</div>';}}modalHTML = '<div class="actions-modal">' + buttonsHTML + '</div>';}_modalTemplateTempDiv.innerHTML = modalHTML;modal = $(_modalTemplateTempDiv).children();$(defaults.modalContainer).append(modal[0]);groupSelector = '.actions-modal-group';buttonSelector = '.actions-modal-button';}var groups=modal.find(groupSelector);groups.each(function(index,el){var groupIndex=index;$(el).children().each(function(index,el){var buttonIndex=index;var buttonParams=params[groupIndex][buttonIndex];var clickTarget;if(!toPopover && $(el).is(buttonSelector))clickTarget = $(el);if(toPopover && $(el).find(buttonSelector).length > 0)clickTarget = $(el).find(buttonSelector);if(clickTarget){clickTarget.on('click',function(e){if(buttonParams.close !== false)$.closeModal(modal);if(buttonParams.onClick)buttonParams.onClick(modal,e);});}});});if(!toPopover)$.openModal(modal);return modal[0];};$.popover = function(modal,target,removeOnClose){if(typeof removeOnClose === 'undefined')removeOnClose = true;if(typeof modal === 'string' && modal.indexOf('<') >= 0){var _modal=document.createElement('div');_modal.innerHTML = modal.trim();if(_modal.childNodes.length > 0){modal = _modal.childNodes[0];if(removeOnClose)modal.classList.add('remove-on-close');$(defaults.modalContainer).append(modal);}else return false; //nothing found
	}modal = $(modal);target = $(target);if(modal.length === 0 || target.length === 0)return false;if(modal.find('.popover-angle').length === 0){modal.append('<div class="popover-angle"></div>');}modal.show();function sizePopover(){modal.css({left:'',top:''});var modalWidth=modal.width();var modalHeight=modal.height(); // 13 - height of angle
	var modalAngle=modal.find('.popover-angle');var modalAngleSize=modalAngle.width() / 2;var modalAngleLeft,modalAngleTop;modalAngle.removeClass('on-left on-right on-top on-bottom').css({left:'',top:''});var targetWidth=target.outerWidth();var targetHeight=target.outerHeight();var targetOffset=target.offset();var targetParentPage=target.parents('.page');if(targetParentPage.length > 0){targetOffset.top = targetOffset.top - targetParentPage[0].scrollTop;}var windowHeight=$(window).height();var windowWidth=$(window).width();var modalTop=0;var modalLeft=0;var diff=0; // Top Position
	var modalPosition='top';if(modalHeight + modalAngleSize < targetOffset.top){ // On top
	modalTop = targetOffset.top - modalHeight - modalAngleSize;}else if(modalHeight + modalAngleSize < windowHeight - targetOffset.top - targetHeight){ // On bottom
	modalPosition = 'bottom';modalTop = targetOffset.top + targetHeight + modalAngleSize;}else { // On middle
	modalPosition = 'middle';modalTop = targetHeight / 2 + targetOffset.top - modalHeight / 2;diff = modalTop;if(modalTop < 0){modalTop = 5;}else if(modalTop + modalHeight > windowHeight){modalTop = windowHeight - modalHeight - 5;}diff = diff - modalTop;} // Horizontal Position
	if(modalPosition === 'top' || modalPosition === 'bottom'){modalLeft = targetWidth / 2 + targetOffset.left - modalWidth / 2;diff = modalLeft;if(modalLeft < 5)modalLeft = 5;if(modalLeft + modalWidth > windowWidth)modalLeft = windowWidth - modalWidth - 5;if(modalPosition === 'top')modalAngle.addClass('on-bottom');if(modalPosition === 'bottom')modalAngle.addClass('on-top');diff = diff - modalLeft;modalAngleLeft = modalWidth / 2 - modalAngleSize + diff;modalAngleLeft = Math.max(Math.min(modalAngleLeft,modalWidth - modalAngleSize * 2 - 6),6);modalAngle.css({left:modalAngleLeft + 'px'});}else if(modalPosition === 'middle'){modalLeft = targetOffset.left - modalWidth - modalAngleSize;modalAngle.addClass('on-right');if(modalLeft < 5){modalLeft = targetOffset.left + targetWidth + modalAngleSize;modalAngle.removeClass('on-right').addClass('on-left');}if(modalLeft + modalWidth > windowWidth){modalLeft = windowWidth - modalWidth - 5;modalAngle.removeClass('on-right').addClass('on-left');}modalAngleTop = modalHeight / 2 - modalAngleSize + diff;modalAngleTop = Math.max(Math.min(modalAngleTop,modalHeight - modalAngleSize * 2 - 6),6);modalAngle.css({top:modalAngleTop + 'px'});} // Apply Styles
	modal.css({top:modalTop + 'px',left:modalLeft + 'px'});}sizePopover();$(window).on('resize',sizePopover);modal.on('close',function(){$(window).off('resize',sizePopover);});if(modal.find('.' + defaults.viewClass).length > 0){$.sizeNavbars(modal.find('.' + defaults.viewClass)[0]);}$.openModal(modal);return modal[0];};$.popup = function(modal,removeOnClose){if(typeof removeOnClose === 'undefined')removeOnClose = true;if(typeof modal === 'string' && modal.indexOf('<') >= 0){var _modal=document.createElement('div');_modal.innerHTML = modal.trim();if(_modal.childNodes.length > 0){modal = _modal.childNodes[0];if(removeOnClose)modal.classList.add('remove-on-close');$(defaults.modalContainer).append(modal);}else return false; //nothing found
	}modal = $(modal);if(modal.length === 0)return false;modal.show();modal.find(".content").scroller("refresh");if(modal.find('.' + defaults.viewClass).length > 0){$.sizeNavbars(modal.find('.' + defaults.viewClass)[0]);}$.openModal(modal);return modal[0];};$.pickerModal = function(pickerModal,removeOnClose){if(typeof removeOnClose === 'undefined')removeOnClose = true;if(typeof pickerModal === 'string' && pickerModal.indexOf('<') >= 0){pickerModal = $(pickerModal);if(pickerModal.length > 0){if(removeOnClose)pickerModal.addClass('remove-on-close');$(defaults.modalContainer).append(pickerModal[0]);}else return false; //nothing found
	}pickerModal = $(pickerModal);if(pickerModal.length === 0)return false;pickerModal.show();$.openModal(pickerModal);return pickerModal[0];};$.loginScreen = function(modal){if(!modal)modal = '.login-screen';modal = $(modal);if(modal.length === 0)return false;modal.show();if(modal.find('.' + defaults.viewClass).length > 0){$.sizeNavbars(modal.find('.' + defaults.viewClass)[0]);}$.openModal(modal);return modal[0];}; //显示一个消息，会在2秒钟后自动消失
	$.toast = function(msg){var $toast=$("<div class='modal toast'>" + msg + "</div>").appendTo(document.body);$.openModal($toast);setTimeout(function(){$.closeModal($toast);},2000);};$.openModal = function(modal){modal = $(modal);var isModal=modal.hasClass('modal');if($('.modal.modal-in:not(.modal-out)').length && defaults.modalStack && isModal){$.modalStack.push(function(){$.openModal(modal);});return;}var isPopover=modal.hasClass('popover');var isPopup=modal.hasClass('popup');var isLoginScreen=modal.hasClass('login-screen');var isPickerModal=modal.hasClass('picker-modal');var isToast=modal.hasClass('toast');if(isModal){modal.show();modal.css({marginTop:-Math.round(modal.outerHeight() / 2) + 'px'});}if(isToast){modal.css({marginLeft:-Math.round(modal.outerWidth() / 2 / 1.185) + 'px' //1.185 是初始化时候的放大效果
	});}var overlay;if(!isLoginScreen && !isPickerModal && !isToast){if($('.modal-overlay').length === 0 && !isPopup){$(defaults.modalContainer).append('<div class="modal-overlay"></div>');}if($('.popup-overlay').length === 0 && isPopup){$(defaults.modalContainer).append('<div class="popup-overlay"></div>');}overlay = isPopup?$('.popup-overlay'):$('.modal-overlay');} //Make sure that styles are applied, trigger relayout;
	var clientLeft=modal[0].clientLeft; // Trugger open event
	modal.trigger('open'); // Picker modal body class
	if(isPickerModal){$(defaults.modalContainer).addClass('with-picker-modal');} // Classes for transition in
	if(!isLoginScreen && !isPickerModal && !isToast)overlay.addClass('modal-overlay-visible');modal.removeClass('modal-out').addClass('modal-in').transitionEnd(function(e){if(modal.hasClass('modal-out'))modal.trigger('closed');else modal.trigger('opened');});return true;};$.closeModal = function(modal){modal = $(modal || '.modal-in');if(typeof modal !== 'undefined' && modal.length === 0){return;}var isModal=modal.hasClass('modal');var isPopover=modal.hasClass('popover');var isPopup=modal.hasClass('popup');var isLoginScreen=modal.hasClass('login-screen');var isPickerModal=modal.hasClass('picker-modal');var removeOnClose=modal.hasClass('remove-on-close');var overlay=isPopup?$('.popup-overlay'):$('.modal-overlay');if(isPopup){if(modal.length === $('.popup.modal-in').length){overlay.removeClass('modal-overlay-visible');}}else if(!isPickerModal){overlay.removeClass('modal-overlay-visible');}modal.trigger('close'); // Picker modal body class
	if(isPickerModal){$(defaults.modalContainer).removeClass('with-picker-modal');$(defaults.modalContainer).addClass('picker-modal-closing');}if(!isPopover){modal.removeClass('modal-in').addClass('modal-out').transitionEnd(function(e){if(modal.hasClass('modal-out'))modal.trigger('closed');else modal.trigger('opened');if(isPickerModal){$(defaults.modalContainer).removeClass('picker-modal-closing');}if(isPopup || isLoginScreen || isPickerModal){modal.removeClass('modal-out').hide();if(removeOnClose && modal.length > 0){modal.remove();}}else {modal.remove();}});if(isModal && defaults.modalStack){$.modalStackClearQueue();}}else {modal.removeClass('modal-in modal-out').trigger('closed').hide();if(removeOnClose){modal.remove();}}return true;};function handleClicks(e){ /*jshint validthis:true */var clicked=$(this);var url=clicked.attr('href'); //Collect Clicked data- attributes
	var clickedData=clicked.dataset(); // Popover
	if(clicked.hasClass('open-popover')){var popover;if(clickedData.popover){popover = clickedData.popover;}else popover = '.popover';$.popover(popover,clicked);}if(clicked.hasClass('close-popover')){$.closeModal('.popover.modal-in');} // Popup
	var popup;if(clicked.hasClass('open-popup')){if(clickedData.popup){popup = clickedData.popup;}else popup = '.popup';$.popup(popup);}if(clicked.hasClass('close-popup')){if(clickedData.popup){popup = clickedData.popup;}else popup = '.popup.modal-in';$.closeModal(popup);} // Close Modal
	if(clicked.hasClass('modal-overlay')){if($('.modal.modal-in').length > 0 && defaults.modalCloseByOutside)$.closeModal('.modal.modal-in');if($('.actions-modal.modal-in').length > 0 && defaults.actionsCloseByOutside)$.closeModal('.actions-modal.modal-in');if($('.popover.modal-in').length > 0)$.closeModal('.popover.modal-in');}if(clicked.hasClass('popup-overlay')){if($('.popup.modal-in').length > 0 && defaults.popupCloseByOutside)$.closeModal('.popup.modal-in');}}$(document).on('click',' .modal-overlay, .popup-overlay, .close-popup, .open-popup, .open-popover,  .close-picker',handleClicks);var defaults=$.modal.prototype.defaults = {modalButtonOk:'确定',modalButtonCancel:'取消',modalPreloaderTitle:'加载中',modalContainer:document.body};})(Zepto); /*======================================================
	************   Calendar   ************
	======================================================*/ /* global Zepto:true */ /*jshint unused: false*/+(function($){"use strict";var rtl=false;var Calendar=function Calendar(params){var p=this;var defaults={monthNames:['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'],monthNamesShort:['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'],dayNames:['周日','周一','周二','周三','周四','周五','周六'],dayNamesShort:['周日','周一','周二','周三','周四','周五','周六'],firstDay:1, // First day of the week, Monday
	weekendDays:[0,6], // Sunday and Saturday
	multiple:false,dateFormat:'yyyy-mm-dd',direction:'horizontal', // or 'vertical'
	minDate:null,maxDate:null,touchMove:true,animate:true,closeOnSelect:true,monthPicker:true,monthPickerTemplate:'<div class="picker-calendar-month-picker">' + '<a href="#" class="link icon-only picker-calendar-prev-month"><i class="icon icon-prev"></i></a>' + '<div class="current-month-value"></div>' + '<a href="#" class="link icon-only picker-calendar-next-month"><i class="icon icon-next"></i></a>' + '</div>',yearPicker:true,yearPickerTemplate:'<div class="picker-calendar-year-picker">' + '<a href="#" class="link icon-only picker-calendar-prev-year"><i class="icon icon-prev"></i></a>' + '<span class="current-year-value"></span>' + '<a href="#" class="link icon-only picker-calendar-next-year"><i class="icon icon-next"></i></a>' + '</div>',weekHeader:true, // Common settings
	scrollToInput:true,inputReadOnly:true,convertToPopover:true,onlyInPopover:false,toolbar:true,toolbarCloseText:'Done',toolbarTemplate:'<div class="toolbar">' + '<div class="toolbar-inner">' + '{{monthPicker}}' + '{{yearPicker}}' +  // '<a href="#" class="link close-picker">{{closeText}}</a>' +
	'</div>' + '</div>'}; /* Callbacks
	          onMonthAdd
	          onChange
	          onOpen
	          onClose
	          onDayClick
	          onMonthYearChangeStart
	          onMonthYearChangeEnd
	          */params = params || {};for(var def in defaults) {if(typeof params[def] === 'undefined'){params[def] = defaults[def];}}p.params = params;p.initialized = false; // Inline flag
	p.inline = p.params.container?true:false; // Is horizontal
	p.isH = p.params.direction === 'horizontal'; // RTL inverter
	var inverter=p.isH?rtl?-1:1:1; // Animating flag
	p.animating = false; // Should be converted to popover
	function isPopover(){var toPopover=false;if(!p.params.convertToPopover && !p.params.onlyInPopover)return toPopover;if(!p.inline && p.params.input){if(p.params.onlyInPopover)toPopover = true;else {if($.device.ios){toPopover = $.device.ipad?true:false;}else {if($(window).width() >= 768)toPopover = true;}}}return toPopover;}function inPopover(){if(p.opened && p.container && p.container.length > 0 && p.container.parents('.popover').length > 0)return true;else return false;} // Format date
	function formatDate(date){date = new Date(date);var year=date.getFullYear();var month=date.getMonth();var month1=month + 1;var day=date.getDate();var weekDay=date.getDay();return p.params.dateFormat.replace(/yyyy/g,year).replace(/yy/g,(year + '').substring(2)).replace(/mm/g,month1 < 10?'0' + month1:month1).replace(/m/g,month1).replace(/MM/g,p.params.monthNames[month]).replace(/M/g,p.params.monthNamesShort[month]).replace(/dd/g,day < 10?'0' + day:day).replace(/d/g,day).replace(/DD/g,p.params.dayNames[weekDay]).replace(/D/g,p.params.dayNamesShort[weekDay]);} // Value
	p.addValue = function(value){if(p.params.multiple){if(!p.value)p.value = [];var inValuesIndex;for(var i=0;i < p.value.length;i++) {if(new Date(value).getTime() === new Date(p.value[i]).getTime()){inValuesIndex = i;}}if(typeof inValuesIndex === 'undefined'){p.value.push(value);}else {p.value.splice(inValuesIndex,1);}p.updateValue();}else {p.value = [value];p.updateValue();}};p.setValue = function(arrValues){p.value = arrValues;p.updateValue();};p.updateValue = function(){p.wrapper.find('.picker-calendar-day-selected').removeClass('picker-calendar-day-selected');var i,inputValue;for(i = 0;i < p.value.length;i++) {var valueDate=new Date(p.value[i]);p.wrapper.find('.picker-calendar-day[data-date="' + valueDate.getFullYear() + '-' + valueDate.getMonth() + '-' + valueDate.getDate() + '"]').addClass('picker-calendar-day-selected');}if(p.params.onChange){p.params.onChange(p,p.value,p.value.map(formatDate));}if(p.input && p.input.length > 0){if(p.params.formatValue)inputValue = p.params.formatValue(p,p.value);else {inputValue = [];for(i = 0;i < p.value.length;i++) {inputValue.push(formatDate(p.value[i]));}inputValue = inputValue.join(', ');}$(p.input).val(inputValue);$(p.input).trigger('change');}}; // Columns Handlers
	p.initCalendarEvents = function(){var col;var allowItemClick=true;var isTouched,isMoved,touchStartX,touchStartY,touchCurrentX,touchCurrentY,touchStartTime,touchEndTime,startTranslate,currentTranslate,wrapperWidth,wrapperHeight,percentage,touchesDiff,isScrolling;function handleTouchStart(e){if(isMoved || isTouched)return; // e.preventDefault();
	isTouched = true;touchStartX = touchCurrentY = e.type === 'touchstart'?e.targetTouches[0].pageX:e.pageX;touchStartY = touchCurrentY = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;touchStartTime = new Date().getTime();percentage = 0;allowItemClick = true;isScrolling = undefined;startTranslate = currentTranslate = p.monthsTranslate;}function handleTouchMove(e){if(!isTouched)return;touchCurrentX = e.type === 'touchmove'?e.targetTouches[0].pageX:e.pageX;touchCurrentY = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(typeof isScrolling === 'undefined'){isScrolling = !!(isScrolling || Math.abs(touchCurrentY - touchStartY) > Math.abs(touchCurrentX - touchStartX));}if(p.isH && isScrolling){isTouched = false;return;}e.preventDefault();if(p.animating){isTouched = false;return;}allowItemClick = false;if(!isMoved){ // First move
	isMoved = true;wrapperWidth = p.wrapper[0].offsetWidth;wrapperHeight = p.wrapper[0].offsetHeight;p.wrapper.transition(0);}e.preventDefault();touchesDiff = p.isH?touchCurrentX - touchStartX:touchCurrentY - touchStartY;percentage = touchesDiff / (p.isH?wrapperWidth:wrapperHeight);currentTranslate = (p.monthsTranslate * inverter + percentage) * 100; // Transform wrapper
	p.wrapper.transform('translate3d(' + (p.isH?currentTranslate:0) + '%, ' + (p.isH?0:currentTranslate) + '%, 0)');}function handleTouchEnd(e){if(!isTouched || !isMoved){isTouched = isMoved = false;return;}isTouched = isMoved = false;touchEndTime = new Date().getTime();if(touchEndTime - touchStartTime < 300){if(Math.abs(touchesDiff) < 10){p.resetMonth();}else if(touchesDiff >= 10){if(rtl)p.nextMonth();else p.prevMonth();}else {if(rtl)p.prevMonth();else p.nextMonth();}}else {if(percentage <= -0.5){if(rtl)p.prevMonth();else p.nextMonth();}else if(percentage >= 0.5){if(rtl)p.nextMonth();else p.prevMonth();}else {p.resetMonth();}} // Allow click
	setTimeout(function(){allowItemClick = true;},100);}function handleDayClick(e){if(!allowItemClick)return;var day=$(e.target).parents('.picker-calendar-day');if(day.length === 0 && $(e.target).hasClass('picker-calendar-day')){day = $(e.target);}if(day.length === 0)return;if(day.hasClass('picker-calendar-day-selected') && !p.params.multiple)return;if(day.hasClass('picker-calendar-day-disabled'))return;if(day.hasClass('picker-calendar-day-next'))p.nextMonth();if(day.hasClass('picker-calendar-day-prev'))p.prevMonth();var dateYear=day.attr('data-year');var dateMonth=day.attr('data-month');var dateDay=day.attr('data-day');if(p.params.onDayClick){p.params.onDayClick(p,day[0],dateYear,dateMonth,dateDay);}p.addValue(new Date(dateYear,dateMonth,dateDay).getTime());if(p.params.closeOnSelect)p.close();}p.container.find('.picker-calendar-prev-month').on('click',p.prevMonth);p.container.find('.picker-calendar-next-month').on('click',p.nextMonth);p.container.find('.picker-calendar-prev-year').on('click',p.prevYear);p.container.find('.picker-calendar-next-year').on('click',p.nextYear);p.wrapper.on('click',handleDayClick);if(p.params.touchMove){p.wrapper.on($.touchEvents.start,handleTouchStart);p.wrapper.on($.touchEvents.move,handleTouchMove);p.wrapper.on($.touchEvents.end,handleTouchEnd);}p.container[0].f7DestroyCalendarEvents = function(){p.container.find('.picker-calendar-prev-month').off('click',p.prevMonth);p.container.find('.picker-calendar-next-month').off('click',p.nextMonth);p.container.find('.picker-calendar-prev-year').off('click',p.prevYear);p.container.find('.picker-calendar-next-year').off('click',p.nextYear);p.wrapper.off('click',handleDayClick);if(p.params.touchMove){p.wrapper.off($.touchEvents.start,handleTouchStart);p.wrapper.off($.touchEvents.move,handleTouchMove);p.wrapper.off($.touchEvents.end,handleTouchEnd);}};};p.destroyCalendarEvents = function(colContainer){if('f7DestroyCalendarEvents' in p.container[0])p.container[0].f7DestroyCalendarEvents();}; // Calendar Methods
	p.daysInMonth = function(date){var d=new Date(date);return new Date(d.getFullYear(),d.getMonth() + 1,0).getDate();};p.monthHTML = function(date,offset){date = new Date(date);var year=date.getFullYear(),month=date.getMonth(),day=date.getDate();if(offset === 'next'){if(month === 11)date = new Date(year + 1,0);else date = new Date(year,month + 1,1);}if(offset === 'prev'){if(month === 0)date = new Date(year - 1,11);else date = new Date(year,month - 1,1);}if(offset === 'next' || offset === 'prev'){month = date.getMonth();year = date.getFullYear();}var daysInPrevMonth=p.daysInMonth(new Date(date.getFullYear(),date.getMonth()).getTime() - 10 * 24 * 60 * 60 * 1000),daysInMonth=p.daysInMonth(date),firstDayOfMonthIndex=new Date(date.getFullYear(),date.getMonth()).getDay();if(firstDayOfMonthIndex === 0)firstDayOfMonthIndex = 7;var dayDate,currentValues=[],i,j,rows=6,cols=7,monthHTML='',dayIndex=0 + (p.params.firstDay - 1),today=new Date().setHours(0,0,0,0),minDate=p.params.minDate?new Date(p.params.minDate).getTime():null,maxDate=p.params.maxDate?new Date(p.params.maxDate).getTime():null;if(p.value && p.value.length){for(i = 0;i < p.value.length;i++) {currentValues.push(new Date(p.value[i]).setHours(0,0,0,0));}}for(i = 1;i <= rows;i++) {var rowHTML='';var row=i;for(j = 1;j <= cols;j++) {var col=j;dayIndex++;var dayNumber=dayIndex - firstDayOfMonthIndex;var addClass='';if(dayNumber < 0){dayNumber = daysInPrevMonth + dayNumber + 1;addClass += ' picker-calendar-day-prev';dayDate = new Date(month - 1 < 0?year - 1:year,month - 1 < 0?11:month - 1,dayNumber).getTime();}else {dayNumber = dayNumber + 1;if(dayNumber > daysInMonth){dayNumber = dayNumber - daysInMonth;addClass += ' picker-calendar-day-next';dayDate = new Date(month + 1 > 11?year + 1:year,month + 1 > 11?0:month + 1,dayNumber).getTime();}else {dayDate = new Date(year,month,dayNumber).getTime();}} // Today
	if(dayDate === today)addClass += ' picker-calendar-day-today'; // Selected
	if(currentValues.indexOf(dayDate) >= 0)addClass += ' picker-calendar-day-selected'; // Weekend
	if(p.params.weekendDays.indexOf(col - 1) >= 0){addClass += ' picker-calendar-day-weekend';} // Disabled
	if(minDate && dayDate < minDate || maxDate && dayDate > maxDate){addClass += ' picker-calendar-day-disabled';}dayDate = new Date(dayDate);var dayYear=dayDate.getFullYear();var dayMonth=dayDate.getMonth();rowHTML += '<div data-year="' + dayYear + '" data-month="' + dayMonth + '" data-day="' + dayNumber + '" class="picker-calendar-day' + addClass + '" data-date="' + (dayYear + '-' + dayMonth + '-' + dayNumber) + '"><span>' + dayNumber + '</span></div>';}monthHTML += '<div class="picker-calendar-row">' + rowHTML + '</div>';}monthHTML = '<div class="picker-calendar-month" data-year="' + year + '" data-month="' + month + '">' + monthHTML + '</div>';return monthHTML;};p.animating = false;p.updateCurrentMonthYear = function(dir){if(typeof dir === 'undefined'){p.currentMonth = parseInt(p.months.eq(1).attr('data-month'),10);p.currentYear = parseInt(p.months.eq(1).attr('data-year'),10);}else {p.currentMonth = parseInt(p.months.eq(dir === 'next'?p.months.length - 1:0).attr('data-month'),10);p.currentYear = parseInt(p.months.eq(dir === 'next'?p.months.length - 1:0).attr('data-year'),10);}p.container.find('.current-month-value').text(p.params.monthNames[p.currentMonth]);p.container.find('.current-year-value').text(p.currentYear);};p.onMonthChangeStart = function(dir){p.updateCurrentMonthYear(dir);p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');var currentIndex=dir === 'next'?p.months.length - 1:0;p.months.eq(currentIndex).addClass('picker-calendar-month-current');p.months.eq(dir === 'next'?currentIndex - 1:currentIndex + 1).addClass(dir === 'next'?'picker-calendar-month-prev':'picker-calendar-month-next');if(p.params.onMonthYearChangeStart){p.params.onMonthYearChangeStart(p,p.currentYear,p.currentMonth);}};p.onMonthChangeEnd = function(dir,rebuildBoth){p.animating = false;var nextMonthHTML,prevMonthHTML,newMonthHTML;p.wrapper.find('.picker-calendar-month:not(.picker-calendar-month-prev):not(.picker-calendar-month-current):not(.picker-calendar-month-next)').remove();if(typeof dir === 'undefined'){dir = 'next';rebuildBoth = true;}if(!rebuildBoth){newMonthHTML = p.monthHTML(new Date(p.currentYear,p.currentMonth),dir);}else {p.wrapper.find('.picker-calendar-month-next, .picker-calendar-month-prev').remove();prevMonthHTML = p.monthHTML(new Date(p.currentYear,p.currentMonth),'prev');nextMonthHTML = p.monthHTML(new Date(p.currentYear,p.currentMonth),'next');}if(dir === 'next' || rebuildBoth){p.wrapper.append(newMonthHTML || nextMonthHTML);}if(dir === 'prev' || rebuildBoth){p.wrapper.prepend(newMonthHTML || prevMonthHTML);}p.months = p.wrapper.find('.picker-calendar-month');p.setMonthsTranslate(p.monthsTranslate);if(p.params.onMonthAdd){p.params.onMonthAdd(p,dir === 'next'?p.months.eq(p.months.length - 1)[0]:p.months.eq(0)[0]);}if(p.params.onMonthYearChangeEnd){p.params.onMonthYearChangeEnd(p,p.currentYear,p.currentMonth);}};p.setMonthsTranslate = function(translate){translate = translate || p.monthsTranslate || 0;if(typeof p.monthsTranslate === 'undefined')p.monthsTranslate = translate;p.months.removeClass('picker-calendar-month-current picker-calendar-month-prev picker-calendar-month-next');var prevMonthTranslate=-(translate + 1) * 100 * inverter;var currentMonthTranslate=-translate * 100 * inverter;var nextMonthTranslate=-(translate - 1) * 100 * inverter;p.months.eq(0).transform('translate3d(' + (p.isH?prevMonthTranslate:0) + '%, ' + (p.isH?0:prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');p.months.eq(1).transform('translate3d(' + (p.isH?currentMonthTranslate:0) + '%, ' + (p.isH?0:currentMonthTranslate) + '%, 0)').addClass('picker-calendar-month-current');p.months.eq(2).transform('translate3d(' + (p.isH?nextMonthTranslate:0) + '%, ' + (p.isH?0:nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');};p.nextMonth = function(transition){if(typeof transition === 'undefined' || typeof transition === 'object'){transition = '';if(!p.params.animate)transition = 0;}var nextMonth=parseInt(p.months.eq(p.months.length - 1).attr('data-month'),10);var nextYear=parseInt(p.months.eq(p.months.length - 1).attr('data-year'),10);var nextDate=new Date(nextYear,nextMonth);var nextDateTime=nextDate.getTime();var transitionEndCallback=p.animating?false:true;if(p.params.maxDate){if(nextDateTime > new Date(p.params.maxDate).getTime()){return p.resetMonth();}}p.monthsTranslate--;if(nextMonth === p.currentMonth){var nextMonthTranslate=-p.monthsTranslate * 100 * inverter;var nextMonthHTML=$(p.monthHTML(nextDateTime,'next')).transform('translate3d(' + (p.isH?nextMonthTranslate:0) + '%, ' + (p.isH?0:nextMonthTranslate) + '%, 0)').addClass('picker-calendar-month-next');p.wrapper.append(nextMonthHTML[0]);p.months = p.wrapper.find('.picker-calendar-month');if(p.params.onMonthAdd){p.params.onMonthAdd(p,p.months.eq(p.months.length - 1)[0]);}}p.animating = true;p.onMonthChangeStart('next');var translate=p.monthsTranslate * 100 * inverter;p.wrapper.transition(transition).transform('translate3d(' + (p.isH?translate:0) + '%, ' + (p.isH?0:translate) + '%, 0)');if(transitionEndCallback){p.wrapper.transitionEnd(function(){p.onMonthChangeEnd('next');});}if(!p.params.animate){p.onMonthChangeEnd('next');}};p.prevMonth = function(transition){if(typeof transition === 'undefined' || typeof transition === 'object'){transition = '';if(!p.params.animate)transition = 0;}var prevMonth=parseInt(p.months.eq(0).attr('data-month'),10);var prevYear=parseInt(p.months.eq(0).attr('data-year'),10);var prevDate=new Date(prevYear,prevMonth + 1,-1);var prevDateTime=prevDate.getTime();var transitionEndCallback=p.animating?false:true;if(p.params.minDate){if(prevDateTime < new Date(p.params.minDate).getTime()){return p.resetMonth();}}p.monthsTranslate++;if(prevMonth === p.currentMonth){var prevMonthTranslate=-p.monthsTranslate * 100 * inverter;var prevMonthHTML=$(p.monthHTML(prevDateTime,'prev')).transform('translate3d(' + (p.isH?prevMonthTranslate:0) + '%, ' + (p.isH?0:prevMonthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');p.wrapper.prepend(prevMonthHTML[0]);p.months = p.wrapper.find('.picker-calendar-month');if(p.params.onMonthAdd){p.params.onMonthAdd(p,p.months.eq(0)[0]);}}p.animating = true;p.onMonthChangeStart('prev');var translate=p.monthsTranslate * 100 * inverter;p.wrapper.transition(transition).transform('translate3d(' + (p.isH?translate:0) + '%, ' + (p.isH?0:translate) + '%, 0)');if(transitionEndCallback){p.wrapper.transitionEnd(function(){p.onMonthChangeEnd('prev');});}if(!p.params.animate){p.onMonthChangeEnd('prev');}};p.resetMonth = function(transition){if(typeof transition === 'undefined')transition = '';var translate=p.monthsTranslate * 100 * inverter;p.wrapper.transition(transition).transform('translate3d(' + (p.isH?translate:0) + '%, ' + (p.isH?0:translate) + '%, 0)');};p.setYearMonth = function(year,month,transition){if(typeof year === 'undefined')year = p.currentYear;if(typeof month === 'undefined')month = p.currentMonth;if(typeof transition === 'undefined' || typeof transition === 'object'){transition = '';if(!p.params.animate)transition = 0;}var targetDate;if(year < p.currentYear){targetDate = new Date(year,month + 1,-1).getTime();}else {targetDate = new Date(year,month).getTime();}if(p.params.maxDate && targetDate > new Date(p.params.maxDate).getTime()){return false;}if(p.params.minDate && targetDate < new Date(p.params.minDate).getTime()){return false;}var currentDate=new Date(p.currentYear,p.currentMonth).getTime();var dir=targetDate > currentDate?'next':'prev';var newMonthHTML=p.monthHTML(new Date(year,month));p.monthsTranslate = p.monthsTranslate || 0;var prevTranslate=p.monthsTranslate;var monthTranslate,wrapperTranslate;var transitionEndCallback=p.animating?false:true;if(targetDate > currentDate){ // To next
	p.monthsTranslate--;if(!p.animating)p.months.eq(p.months.length - 1).remove();p.wrapper.append(newMonthHTML);p.months = p.wrapper.find('.picker-calendar-month');monthTranslate = -(prevTranslate - 1) * 100 * inverter;p.months.eq(p.months.length - 1).transform('translate3d(' + (p.isH?monthTranslate:0) + '%, ' + (p.isH?0:monthTranslate) + '%, 0)').addClass('picker-calendar-month-next');}else { // To prev
	p.monthsTranslate++;if(!p.animating)p.months.eq(0).remove();p.wrapper.prepend(newMonthHTML);p.months = p.wrapper.find('.picker-calendar-month');monthTranslate = -(prevTranslate + 1) * 100 * inverter;p.months.eq(0).transform('translate3d(' + (p.isH?monthTranslate:0) + '%, ' + (p.isH?0:monthTranslate) + '%, 0)').addClass('picker-calendar-month-prev');}if(p.params.onMonthAdd){p.params.onMonthAdd(p,dir === 'next'?p.months.eq(p.months.length - 1)[0]:p.months.eq(0)[0]);}p.animating = true;p.onMonthChangeStart(dir);wrapperTranslate = p.monthsTranslate * 100 * inverter;p.wrapper.transition(transition).transform('translate3d(' + (p.isH?wrapperTranslate:0) + '%, ' + (p.isH?0:wrapperTranslate) + '%, 0)');if(transitionEndCallback){p.wrapper.transitionEnd(function(){p.onMonthChangeEnd(dir,true);});}if(!p.params.animate){p.onMonthChangeEnd(dir);}};p.nextYear = function(){p.setYearMonth(p.currentYear + 1);};p.prevYear = function(){p.setYearMonth(p.currentYear - 1);}; // HTML Layout
	p.layout = function(){var pickerHTML='';var pickerClass='';var i;var layoutDate=p.value && p.value.length?p.value[0]:new Date().setHours(0,0,0,0);var prevMonthHTML=p.monthHTML(layoutDate,'prev');var currentMonthHTML=p.monthHTML(layoutDate);var nextMonthHTML=p.monthHTML(layoutDate,'next');var monthsHTML='<div class="picker-calendar-months"><div class="picker-calendar-months-wrapper">' + (prevMonthHTML + currentMonthHTML + nextMonthHTML) + '</div></div>'; // Week days header
	var weekHeaderHTML='';if(p.params.weekHeader){for(i = 0;i < 7;i++) {var weekDayIndex=i + p.params.firstDay > 6?i - 7 + p.params.firstDay:i + p.params.firstDay;var dayName=p.params.dayNamesShort[weekDayIndex];weekHeaderHTML += '<div class="picker-calendar-week-day ' + (p.params.weekendDays.indexOf(weekDayIndex) >= 0?'picker-calendar-week-day-weekend':'') + '"> ' + dayName + '</div>';}weekHeaderHTML = '<div class="picker-calendar-week-days">' + weekHeaderHTML + '</div>';}pickerClass = 'picker-modal picker-calendar ' + (p.params.cssClass || '');var toolbarHTML=p.params.toolbar?p.params.toolbarTemplate.replace(/{{closeText}}/g,p.params.toolbarCloseText):'';if(p.params.toolbar){toolbarHTML = p.params.toolbarTemplate.replace(/{{closeText}}/g,p.params.toolbarCloseText).replace(/{{monthPicker}}/g,p.params.monthPicker?p.params.monthPickerTemplate:'').replace(/{{yearPicker}}/g,p.params.yearPicker?p.params.yearPickerTemplate:'');}pickerHTML = '<div class="' + pickerClass + '">' + toolbarHTML + '<div class="picker-modal-inner">' + weekHeaderHTML + monthsHTML + '</div>' + '</div>';p.pickerHTML = pickerHTML;}; // Input Events
	function openOnInput(e){e.preventDefault();if(p.opened)return;p.open();if(p.params.scrollToInput && !isPopover()){var pageContent=p.input.parents('.page-content');if(pageContent.length === 0)return;var paddingTop=parseInt(pageContent.css('padding-top'),10),paddingBottom=parseInt(pageContent.css('padding-bottom'),10),pageHeight=pageContent[0].offsetHeight - paddingTop - p.container.height(),pageScrollHeight=pageContent[0].scrollHeight - paddingTop - p.container.height(),newPaddingBottom;var inputTop=p.input.offset().top - paddingTop + p.input[0].offsetHeight;if(inputTop > pageHeight){var scrollTop=pageContent.scrollTop() + inputTop - pageHeight;if(scrollTop + pageHeight > pageScrollHeight){newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;if(pageHeight === pageScrollHeight){newPaddingBottom = p.container.height();}pageContent.css({'padding-bottom':newPaddingBottom + 'px'});}pageContent.scrollTop(scrollTop,300);}}}function closeOnHTMLClick(e){if(inPopover())return;if(p.input && p.input.length > 0){if(e.target !== p.input[0] && $(e.target).parents('.picker-modal').length === 0)p.close();}else {if($(e.target).parents('.picker-modal').length === 0)p.close();}}if(p.params.input){p.input = $(p.params.input);if(p.input.length > 0){if(p.params.inputReadOnly)p.input.prop('readOnly',true);if(!p.inline){p.input.on('click',openOnInput);}if(p.params.inputReadOnly){p.input.on('focus mousedown',function(e){e.preventDefault();});}}}if(!p.inline)$('html').on('click',closeOnHTMLClick); // Open
	function onPickerClose(){p.opened = false;if(p.input && p.input.length > 0)p.input.parents('.page-content').css({'padding-bottom':''});if(p.params.onClose)p.params.onClose(p); // Destroy events
	p.destroyCalendarEvents();}p.opened = false;p.open = function(){var toPopover=isPopover();var updateValue=false;if(!p.opened){ // Set date value
	if(!p.value){if(p.params.value){p.value = p.params.value;updateValue = true;}} // Layout
	p.layout(); // Append
	if(toPopover){p.pickerHTML = '<div class="popover popover-picker-calendar"><div class="popover-inner">' + p.pickerHTML + '</div></div>';p.popover = $.popover(p.pickerHTML,p.params.input,true);p.container = $(p.popover).find('.picker-modal');$(p.popover).on('close',function(){onPickerClose();});}else if(p.inline){p.container = $(p.pickerHTML);p.container.addClass('picker-modal-inline');$(p.params.container).append(p.container);}else {p.container = $($.pickerModal(p.pickerHTML));$(p.container).on('close',function(){onPickerClose();});} // Store calendar instance
	p.container[0].f7Calendar = p;p.wrapper = p.container.find('.picker-calendar-months-wrapper'); // Months
	p.months = p.wrapper.find('.picker-calendar-month'); // Update current month and year
	p.updateCurrentMonthYear(); // Set initial translate
	p.monthsTranslate = 0;p.setMonthsTranslate(); // Init events
	p.initCalendarEvents(); // Update input value
	if(updateValue)p.updateValue();} // Set flag
	p.opened = true;p.initialized = true;if(p.params.onMonthAdd){p.months.each(function(){p.params.onMonthAdd(p,this);});}if(p.params.onOpen)p.params.onOpen(p);}; // Close
	p.close = function(){if(!p.opened || p.inline)return;if(inPopover()){$.closeModal(p.popover);return;}else {$.closeModal(p.container);return;}}; // Destroy
	p.destroy = function(){p.close();if(p.params.input && p.input.length > 0){p.input.off('click focus',openOnInput);}$('html').off('click',closeOnHTMLClick);};if(p.inline){p.open();}return p;};$.fn.calendar = function(params){return this.each(function(){var $this=$(this);if(!$this[0])return;var p={};if($this[0].tagName.toUpperCase() === "INPUT"){p.input = $this;}else {p.container = $this;}new Calendar($.extend(p,params));});};$.initCalendar = function(content){var $content=content?$(content):$(document.body);$content.find("[data-toggle='date']").each(function(){$(this).calendar();});};})(Zepto); /*======================================================
	************   Picker   ************
	======================================================*/ /* global Zepto:true */ /* jshint unused:false */ /* jshint multistr:true */+(function($){"use strict";var Picker=function Picker(params){var p=this;var defaults={updateValuesOnMomentum:false,updateValuesOnTouchmove:true,rotateEffect:false,momentumRatio:7,freeMode:false, // Common settings
	scrollToInput:true,inputReadOnly:true,convertToPopover:true,onlyInPopover:false,toolbar:true,toolbarCloseText:'确定',toolbarTemplate:'<header class="bar bar-nav">\
	          <button class="button button-link pull-right close-picker">确定</button>\
	          <h1 class="title"></h1>\
	          </header>'};params = params || {};for(var def in defaults) {if(typeof params[def] === 'undefined'){params[def] = defaults[def];}}p.params = params;p.cols = [];p.initialized = false; // Inline flag
	p.inline = p.params.container?true:false; // 3D Transforms origin bug, only on safari
	var originBug=$.device.ios || navigator.userAgent.toLowerCase().indexOf('safari') >= 0 && navigator.userAgent.toLowerCase().indexOf('chrome') < 0 && !$.device.android; // Should be converted to popover
	function isPopover(){var toPopover=false;if(!p.params.convertToPopover && !p.params.onlyInPopover)return toPopover;if(!p.inline && p.params.input){if(p.params.onlyInPopover)toPopover = true;else {if($.device.ios){toPopover = $.device.ipad?true:false;}else {if($(window).width() >= 768)toPopover = true;}}}return toPopover;}function inPopover(){if(p.opened && p.container && p.container.length > 0 && p.container.parents('.popover').length > 0)return true;else return false;} // Value
	p.setValue = function(arrValues,transition){var valueIndex=0;for(var i=0;i < p.cols.length;i++) {if(p.cols[i] && !p.cols[i].divider){p.cols[i].setValue(arrValues[valueIndex],transition);valueIndex++;}}};p.updateValue = function(){var newValue=[];var newDisplayValue=[];for(var i=0;i < p.cols.length;i++) {if(!p.cols[i].divider){newValue.push(p.cols[i].value);newDisplayValue.push(p.cols[i].displayValue);}}if(newValue.indexOf(undefined) >= 0){return;}p.value = newValue;p.displayValue = newDisplayValue;if(p.params.onChange){p.params.onChange(p,p.value,p.displayValue);}if(p.input && p.input.length > 0){$(p.input).val(p.params.formatValue?p.params.formatValue(p,p.value,p.displayValue):p.value.join(' '));$(p.input).trigger('change');}}; // Columns Handlers
	p.initPickerCol = function(colElement,updateItems){var colContainer=$(colElement);var colIndex=colContainer.index();var col=p.cols[colIndex];if(col.divider)return;col.container = colContainer;col.wrapper = col.container.find('.picker-items-col-wrapper');col.items = col.wrapper.find('.picker-item');var i,j;var wrapperHeight,itemHeight,itemsHeight,minTranslate,maxTranslate;col.replaceValues = function(values,displayValues){col.destroyEvents();col.values = values;col.displayValues = displayValues;var newItemsHTML=p.columnHTML(col,true);col.wrapper.html(newItemsHTML);col.items = col.wrapper.find('.picker-item');col.calcSize();col.setValue(col.values[0],0,true);col.initEvents();};col.calcSize = function(){if(p.params.rotateEffect){col.container.removeClass('picker-items-col-absolute');if(!col.width)col.container.css({width:''});}var colWidth,colHeight;colWidth = 0;colHeight = col.container[0].offsetHeight;wrapperHeight = col.wrapper[0].offsetHeight;itemHeight = col.items[0].offsetHeight;itemsHeight = itemHeight * col.items.length;minTranslate = colHeight / 2 - itemsHeight + itemHeight / 2;maxTranslate = colHeight / 2 - itemHeight / 2;if(col.width){colWidth = col.width;if(parseInt(colWidth,10) === colWidth)colWidth = colWidth + 'px';col.container.css({width:colWidth});}if(p.params.rotateEffect){if(!col.width){col.items.each(function(){var item=$(this);item.css({width:'auto'});colWidth = Math.max(colWidth,item[0].offsetWidth);item.css({width:''});});col.container.css({width:colWidth + 2 + 'px'});}col.container.addClass('picker-items-col-absolute');}};col.calcSize();col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)').transition(0);var activeIndex=0;var animationFrameId; // Set Value Function
	col.setValue = function(newValue,transition,valueCallbacks){if(typeof transition === 'undefined')transition = '';var newActiveIndex=col.wrapper.find('.picker-item[data-picker-value="' + newValue + '"]').index();if(typeof newActiveIndex === 'undefined' || newActiveIndex === -1){return;}var newTranslate=-newActiveIndex * itemHeight + maxTranslate; // Update wrapper
	col.wrapper.transition(transition);col.wrapper.transform('translate3d(0,' + newTranslate + 'px,0)'); // Watch items
	if(p.params.updateValuesOnMomentum && col.activeIndex && col.activeIndex !== newActiveIndex){$.cancelAnimationFrame(animationFrameId);col.wrapper.transitionEnd(function(){$.cancelAnimationFrame(animationFrameId);});updateDuringScroll();} // Update items
	col.updateItems(newActiveIndex,newTranslate,transition,valueCallbacks);};col.updateItems = function(activeIndex,translate,transition,valueCallbacks){if(typeof translate === 'undefined'){translate = $.getTranslate(col.wrapper[0],'y');}if(typeof activeIndex === 'undefined')activeIndex = -Math.round((translate - maxTranslate) / itemHeight);if(activeIndex < 0)activeIndex = 0;if(activeIndex >= col.items.length)activeIndex = col.items.length - 1;var previousActiveIndex=col.activeIndex;col.activeIndex = activeIndex; /*
	              col.wrapper.find('.picker-selected, .picker-after-selected, .picker-before-selected').removeClass('picker-selected picker-after-selected picker-before-selected');
	
	              col.items.transition(transition);
	              var selectedItem = col.items.eq(activeIndex).addClass('picker-selected').transform('');
	              var prevItems = selectedItem.prevAll().addClass('picker-before-selected');
	              var nextItems = selectedItem.nextAll().addClass('picker-after-selected');
	              */ //去掉 .picker-after-selected, .picker-before-selected 以提高性能
	col.wrapper.find('.picker-selected').removeClass('picker-selected');if(p.params.rotateEffect){col.items.transition(transition);}var selectedItem=col.items.eq(activeIndex).addClass('picker-selected').transform('');if(valueCallbacks || typeof valueCallbacks === 'undefined'){ // Update values
	col.value = selectedItem.attr('data-picker-value');col.displayValue = col.displayValues?col.displayValues[activeIndex]:col.value; // On change callback
	if(previousActiveIndex !== activeIndex){if(col.onChange){col.onChange(p,col.value,col.displayValue);}p.updateValue();}} // Set 3D rotate effect
	if(!p.params.rotateEffect){return;}var percentage=(translate - (Math.floor((translate - maxTranslate) / itemHeight) * itemHeight + maxTranslate)) / itemHeight;col.items.each(function(){var item=$(this);var itemOffsetTop=item.index() * itemHeight;var translateOffset=maxTranslate - translate;var itemOffset=itemOffsetTop - translateOffset;var percentage=itemOffset / itemHeight;var itemsFit=Math.ceil(col.height / itemHeight / 2) + 1;var angle=-18 * percentage;if(angle > 180)angle = 180;if(angle < -180)angle = -180; // Far class
	if(Math.abs(percentage) > itemsFit)item.addClass('picker-item-far');else item.removeClass('picker-item-far'); // Set transform
	item.transform('translate3d(0, ' + (-translate + maxTranslate) + 'px, ' + (originBug?-110:0) + 'px) rotateX(' + angle + 'deg)');});};function updateDuringScroll(){animationFrameId = $.requestAnimationFrame(function(){col.updateItems(undefined,undefined,0);updateDuringScroll();});} // Update items on init
	if(updateItems)col.updateItems(0,maxTranslate,0);var allowItemClick=true;var isTouched,isMoved,touchStartY,touchCurrentY,touchStartTime,touchEndTime,startTranslate,returnTo,currentTranslate,prevTranslate,velocityTranslate,velocityTime;function handleTouchStart(e){if(isMoved || isTouched)return;e.preventDefault();isTouched = true;touchStartY = touchCurrentY = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;touchStartTime = new Date().getTime();allowItemClick = true;startTranslate = currentTranslate = $.getTranslate(col.wrapper[0],'y');}function handleTouchMove(e){if(!isTouched)return;e.preventDefault();allowItemClick = false;touchCurrentY = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(!isMoved){ // First move
	$.cancelAnimationFrame(animationFrameId);isMoved = true;startTranslate = currentTranslate = $.getTranslate(col.wrapper[0],'y');col.wrapper.transition(0);}e.preventDefault();var diff=touchCurrentY - touchStartY;currentTranslate = startTranslate + diff;returnTo = undefined; // Normalize translate
	if(currentTranslate < minTranslate){currentTranslate = minTranslate - Math.pow(minTranslate - currentTranslate,0.8);returnTo = 'min';}if(currentTranslate > maxTranslate){currentTranslate = maxTranslate + Math.pow(currentTranslate - maxTranslate,0.8);returnTo = 'max';} // Transform wrapper
	col.wrapper.transform('translate3d(0,' + currentTranslate + 'px,0)'); // Update items
	col.updateItems(undefined,currentTranslate,0,p.params.updateValuesOnTouchmove); // Calc velocity
	velocityTranslate = currentTranslate - prevTranslate || currentTranslate;velocityTime = new Date().getTime();prevTranslate = currentTranslate;}function handleTouchEnd(e){if(!isTouched || !isMoved){isTouched = isMoved = false;return;}isTouched = isMoved = false;col.wrapper.transition('');if(returnTo){if(returnTo === 'min'){col.wrapper.transform('translate3d(0,' + minTranslate + 'px,0)');}else col.wrapper.transform('translate3d(0,' + maxTranslate + 'px,0)');}touchEndTime = new Date().getTime();var velocity,newTranslate;if(touchEndTime - touchStartTime > 300){newTranslate = currentTranslate;}else {velocity = Math.abs(velocityTranslate / (touchEndTime - velocityTime));newTranslate = currentTranslate + velocityTranslate * p.params.momentumRatio;}newTranslate = Math.max(Math.min(newTranslate,maxTranslate),minTranslate); // Active Index
	var activeIndex=-Math.floor((newTranslate - maxTranslate) / itemHeight); // Normalize translate
	if(!p.params.freeMode)newTranslate = -activeIndex * itemHeight + maxTranslate; // Transform wrapper
	col.wrapper.transform('translate3d(0,' + parseInt(newTranslate,10) + 'px,0)'); // Update items
	col.updateItems(activeIndex,newTranslate,'',true); // Watch items
	if(p.params.updateValuesOnMomentum){updateDuringScroll();col.wrapper.transitionEnd(function(){$.cancelAnimationFrame(animationFrameId);});} // Allow click
	setTimeout(function(){allowItemClick = true;},100);}function handleClick(e){if(!allowItemClick)return;$.cancelAnimationFrame(animationFrameId); /*jshint validthis:true */var value=$(this).attr('data-picker-value');col.setValue(value);}col.initEvents = function(detach){var method=detach?'off':'on';col.container[method]($.touchEvents.start,handleTouchStart);col.container[method]($.touchEvents.move,handleTouchMove);col.container[method]($.touchEvents.end,handleTouchEnd);col.items[method]('click',handleClick);};col.destroyEvents = function(){col.initEvents(true);};col.container[0].f7DestroyPickerCol = function(){col.destroyEvents();};col.initEvents();};p.destroyPickerCol = function(colContainer){colContainer = $(colContainer);if('f7DestroyPickerCol' in colContainer[0])colContainer[0].f7DestroyPickerCol();}; // Resize cols
	function resizeCols(){if(!p.opened)return;for(var i=0;i < p.cols.length;i++) {if(!p.cols[i].divider){p.cols[i].calcSize();p.cols[i].setValue(p.cols[i].value,0,false);}}}$(window).on('resize',resizeCols); // HTML Layout
	p.columnHTML = function(col,onlyItems){var columnItemsHTML='';var columnHTML='';if(col.divider){columnHTML += '<div class="picker-items-col picker-items-col-divider ' + (col.textAlign?'picker-items-col-' + col.textAlign:'') + ' ' + (col.cssClass || '') + '">' + col.content + '</div>';}else {for(var j=0;j < col.values.length;j++) {columnItemsHTML += '<div class="picker-item" data-picker-value="' + col.values[j] + '">' + (col.displayValues?col.displayValues[j]:col.values[j]) + '</div>';}columnHTML += '<div class="picker-items-col ' + (col.textAlign?'picker-items-col-' + col.textAlign:'') + ' ' + (col.cssClass || '') + '"><div class="picker-items-col-wrapper">' + columnItemsHTML + '</div></div>';}return onlyItems?columnItemsHTML:columnHTML;};p.layout = function(){var pickerHTML='';var pickerClass='';var i;p.cols = [];var colsHTML='';for(i = 0;i < p.params.cols.length;i++) {var col=p.params.cols[i];colsHTML += p.columnHTML(p.params.cols[i]);p.cols.push(col);}pickerClass = 'picker-modal picker-columns ' + (p.params.cssClass || '') + (p.params.rotateEffect?' picker-3d':'');pickerHTML = '<div class="' + pickerClass + '">' + (p.params.toolbar?p.params.toolbarTemplate.replace(/{{closeText}}/g,p.params.toolbarCloseText):'') + '<div class="picker-modal-inner picker-items">' + colsHTML + '<div class="picker-center-highlight"></div>' + '</div>' + '</div>';p.pickerHTML = pickerHTML;}; // Input Events
	function openOnInput(e){e.preventDefault();if(p.opened)return;p.open();if(p.params.scrollToInput && !isPopover()){var pageContent=p.input.parents('.page-content');if(pageContent.length === 0)return;var paddingTop=parseInt(pageContent.css('padding-top'),10),paddingBottom=parseInt(pageContent.css('padding-bottom'),10),pageHeight=pageContent[0].offsetHeight - paddingTop - p.container.height(),pageScrollHeight=pageContent[0].scrollHeight - paddingTop - p.container.height(),newPaddingBottom;var inputTop=p.input.offset().top - paddingTop + p.input[0].offsetHeight;if(inputTop > pageHeight){var scrollTop=pageContent.scrollTop() + inputTop - pageHeight;if(scrollTop + pageHeight > pageScrollHeight){newPaddingBottom = scrollTop + pageHeight - pageScrollHeight + paddingBottom;if(pageHeight === pageScrollHeight){newPaddingBottom = p.container.height();}pageContent.css({'padding-bottom':newPaddingBottom + 'px'});}pageContent.scrollTop(scrollTop,300);}}}function closeOnHTMLClick(e){if(inPopover())return;if(p.input && p.input.length > 0){if(e.target !== p.input[0] && $(e.target).parents('.picker-modal').length === 0)p.close();}else {if($(e.target).parents('.picker-modal').length === 0)p.close();}}if(p.params.input){p.input = $(p.params.input);if(p.input.length > 0){if(p.params.inputReadOnly)p.input.prop('readOnly',true);if(!p.inline){p.input.on('click',openOnInput);}if(p.params.inputReadOnly){p.input.on('focus mousedown',function(e){e.preventDefault();});}}}if(!p.inline)$('html').on('click',closeOnHTMLClick); // Open
	function onPickerClose(){p.opened = false;if(p.input && p.input.length > 0)p.input.parents('.page-content').css({'padding-bottom':''});if(p.params.onClose)p.params.onClose(p); // Destroy events
	p.container.find('.picker-items-col').each(function(){p.destroyPickerCol(this);});}p.opened = false;p.open = function(){var toPopover=isPopover();if(!p.opened){ // Layout
	p.layout(); // Append
	if(toPopover){p.pickerHTML = '<div class="popover popover-picker-columns"><div class="popover-inner">' + p.pickerHTML + '</div></div>';p.popover = $.popover(p.pickerHTML,p.params.input,true);p.container = $(p.popover).find('.picker-modal');$(p.popover).on('close',function(){onPickerClose();});}else if(p.inline){p.container = $(p.pickerHTML);p.container.addClass('picker-modal-inline');$(p.params.container).append(p.container);}else {p.container = $($.pickerModal(p.pickerHTML));$(p.container).on('close',function(){onPickerClose();});} // Store picker instance
	p.container[0].f7Picker = p; // Init Events
	p.container.find('.picker-items-col').each(function(){var updateItems=true;if(!p.initialized && p.params.value || p.initialized && p.value)updateItems = false;p.initPickerCol(this,updateItems);}); // Set value
	if(!p.initialized){if(p.params.value){p.setValue(p.params.value,0);}}else {if(p.value)p.setValue(p.value,0);}} // Set flag
	p.opened = true;p.initialized = true;if(p.params.onOpen)p.params.onOpen(p);}; // Close
	p.close = function(){if(!p.opened || p.inline)return;if(inPopover()){$.closeModal(p.popover);return;}else {$.closeModal(p.container);return;}}; // Destroy
	p.destroy = function(){p.close();if(p.params.input && p.input.length > 0){p.input.off('click focus',openOnInput);}$('html').off('click',closeOnHTMLClick);$(window).off('resize',resizeCols);};if(p.inline){p.open();}return p;};$(document).on("click",".close-picker",function(){var pickerToClose=$('.picker-modal.modal-in');if(pickerToClose.length > 0){$.closeModal(pickerToClose);}else {pickerToClose = $('.popover.modal-in .picker-modal');if(pickerToClose.length > 0){$.closeModal(pickerToClose.parents('.popover'));}}});$.fn.picker = function(params){var args=arguments;return this.each(function(){if(!this)return;var $this=$(this);var picker=$this.data("picker");if(!picker){var p=$.extend({input:this},params);picker = new Picker(p);$this.data("picker",picker);}if(typeof params === typeof "a"){picker[params].apply(picker,Array.prototype.slice.call(args,1));}});};})(Zepto); /* global Zepto:true */ /* jshint unused:false*/+(function($){"use strict";var today=new Date();var getDays=function getDays(max){var days=[];for(var i=1;i <= (max || 31);i++) {days.push(i < 10?"0" + i:i);}return days;};var getDaysByMonthAndYear=function getDaysByMonthAndYear(month,year){var int_d=new Date(year,parseInt(month) + 1 - 1,1);var d=new Date(int_d - 1);return getDays(d.getDate());};var formatNumber=function formatNumber(n){return n < 10?"0" + n:n;};var initMonthes='01 02 03 04 05 06 07 08 09 10 11 12'.split(' ');var initYears=(function(){var arr=[];for(var i=1950;i <= 2030;i++) {arr.push(i);}return arr;})();var defaults={rotateEffect:false, //为了性能
	value:[today.getFullYear(),formatNumber(today.getMonth() + 1),today.getDate(),today.getHours(),formatNumber(today.getMinutes())],onChange:function onChange(picker,values,displayValues){var days=getDaysByMonthAndYear(picker.cols[1].value,picker.cols[0].value);var currentValue=picker.cols[2].value;if(currentValue > days.length)currentValue = days.length;picker.cols[2].setValue(currentValue);},formatValue:function formatValue(p,values,displayValues){return displayValues[0] + '-' + values[1] + '-' + values[2] + ' ' + values[3] + ':' + values[4];},cols:[ // Years
	{values:initYears}, // Months
	{values:initMonthes}, // Days
	{values:getDays()}, // Space divider
	{divider:true,content:'  '}, // Hours
	{values:(function(){var arr=[];for(var i=0;i <= 23;i++) {arr.push(i);}return arr;})()}, // Divider
	{divider:true,content:':'}, // Minutes
	{values:(function(){var arr=[];for(var i=0;i <= 59;i++) {arr.push(i < 10?'0' + i:i);}return arr;})()}]};$.fn.datetimePicker = function(params){return this.each(function(){if(!this)return;var p=$.extend(defaults,params);$(this).picker(p);});};})(Zepto);+(function(window){"use strict";var rAF=window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback){window.setTimeout(callback,1000 / 60);}; /*var cRAF = window.cancelRequestAnimationFrame ||
	        window.webkitCancelRequestAnimationFrame ||
	        window.mozCancelRequestAnimationFrame ||
	        window.oCancelRequestAnimationFrame ||
	        window.msCancelRequestAnimationFrame;*/var utils=(function(){var me={};var _elementStyle=document.createElement('div').style;var _vendor=(function(){var vendors=['t','webkitT','MozT','msT','OT'],transform,i=0,l=vendors.length;for(;i < l;i++) {transform = vendors[i] + 'ransform';if(transform in _elementStyle)return vendors[i].substr(0,vendors[i].length - 1);}return false;})();function _prefixStyle(style){if(_vendor === false)return false;if(_vendor === '')return style;return _vendor + style.charAt(0).toUpperCase() + style.substr(1);}me.getTime = Date.now || function getTime(){return new Date().getTime();};me.extend = function(target,obj){for(var i in obj) { // jshint ignore:line
	target[i] = obj[i];}};me.addEvent = function(el,type,fn,capture){el.addEventListener(type,fn,!!capture);};me.removeEvent = function(el,type,fn,capture){el.removeEventListener(type,fn,!!capture);};me.prefixPointerEvent = function(pointerEvent){return window.MSPointerEvent?'MSPointer' + pointerEvent.charAt(9).toUpperCase() + pointerEvent.substr(10):pointerEvent;};me.momentum = function(current,start,time,lowerMargin,wrapperSize,deceleration,self){var distance=current - start,speed=Math.abs(distance) / time,destination,duration; // var absDistance = Math.abs(distance);
	speed = speed / 2; //slowdown
	speed = speed > 1.5?1.5:speed; //set max speed to 1
	deceleration = deceleration === undefined?0.0006:deceleration;destination = current + speed * speed / (2 * deceleration) * (distance < 0?-1:1);duration = speed / deceleration;if(destination < lowerMargin){destination = wrapperSize?lowerMargin - wrapperSize / 2.5 * (speed / 8):lowerMargin;distance = Math.abs(destination - current);duration = distance / speed;}else if(destination > 0){destination = wrapperSize?wrapperSize / 2.5 * (speed / 8):0;distance = Math.abs(current) + destination;duration = distance / speed;} //simple trigger, every 50ms
	var t=+new Date();var l=t;function eventTrigger(){if(+new Date() - l > 50){self._execEvent('scroll');l = +new Date();}if(+new Date() - t < duration){rAF(eventTrigger);}}rAF(eventTrigger);return {destination:Math.round(destination),duration:duration};};var _transform=_prefixStyle('transform');me.extend(me,{hasTransform:_transform !== false,hasPerspective:_prefixStyle('perspective') in _elementStyle,hasTouch:'ontouchstart' in window,hasPointer:window.PointerEvent || window.MSPointerEvent, // IE10 is prefixed
	hasTransition:_prefixStyle('transition') in _elementStyle}); // This should find all Android browsers lower than build 535.19 (both stock browser and webview)
	me.isBadAndroid = /Android /.test(window.navigator.appVersion) && !/Chrome\/\d/.test(window.navigator.appVersion) && false; //this will cause many android device scroll flash; so set it to false!
	me.extend(me.style = {},{transform:_transform,transitionTimingFunction:_prefixStyle('transitionTimingFunction'),transitionDuration:_prefixStyle('transitionDuration'),transitionDelay:_prefixStyle('transitionDelay'),transformOrigin:_prefixStyle('transformOrigin')});me.hasClass = function(e,c){var re=new RegExp('(^|\\s)' + c + '(\\s|$)');return re.test(e.className);};me.addClass = function(e,c){if(me.hasClass(e,c)){return;}var newclass=e.className.split(' ');newclass.push(c);e.className = newclass.join(' ');};me.removeClass = function(e,c){if(!me.hasClass(e,c)){return;}var re=new RegExp('(^|\\s)' + c + '(\\s|$)','g');e.className = e.className.replace(re,' ');};me.offset = function(el){var left=-el.offsetLeft,top=-el.offsetTop; // jshint -W084
	while(el = el.offsetParent) {left -= el.offsetLeft;top -= el.offsetTop;} // jshint +W084
	return {left:left,top:top};};me.preventDefaultException = function(el,exceptions){for(var i in exceptions) {if(exceptions[i].test(el[i])){return true;}}return false;};me.extend(me.eventType = {},{touchstart:1,touchmove:1,touchend:1,mousedown:2,mousemove:2,mouseup:2,pointerdown:3,pointermove:3,pointerup:3,MSPointerDown:3,MSPointerMove:3,MSPointerUp:3});me.extend(me.ease = {},{quadratic:{style:'cubic-bezier(0.25, 0.46, 0.45, 0.94)',fn:function fn(k){return k * (2 - k);}},circular:{style:'cubic-bezier(0.1, 0.57, 0.1, 1)', // Not properly 'circular' but this looks better, it should be (0.075, 0.82, 0.165, 1)
	fn:function fn(k){return Math.sqrt(1 - --k * k);}},back:{style:'cubic-bezier(0.175, 0.885, 0.32, 1.275)',fn:function fn(k){var b=4;return (k = k - 1) * k * ((b + 1) * k + b) + 1;}},bounce:{style:'',fn:function fn(k){if((k /= 1) < 1 / 2.75){return 7.5625 * k * k;}else if(k < 2 / 2.75){return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;}else if(k < 2.5 / 2.75){return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;}else {return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;}}},elastic:{style:'',fn:function fn(k){var f=0.22,e=0.4;if(k === 0){return 0;}if(k === 1){return 1;}return e * Math.pow(2,-10 * k) * Math.sin((k - f / 4) * (2 * Math.PI) / f) + 1;}}});me.tap = function(e,eventName){var ev=document.createEvent('Event');ev.initEvent(eventName,true,true);ev.pageX = e.pageX;ev.pageY = e.pageY;e.target.dispatchEvent(ev);};me.click = function(e){var target=e.target,ev;if(!/(SELECT|INPUT|TEXTAREA)/i.test(target.tagName)){ev = document.createEvent('MouseEvents');ev.initMouseEvent('click',true,true,e.view,1,target.screenX,target.screenY,target.clientX,target.clientY,e.ctrlKey,e.altKey,e.shiftKey,e.metaKey,0,null);ev._constructed = true;target.dispatchEvent(ev);}};return me;})();function IScroll(el,options){this.wrapper = typeof el === 'string'?document.querySelector(el):el;this.scroller = $(this.wrapper).find('.content-inner')[0]; // jshint ignore:line
	this.scrollerStyle = this.scroller && this.scroller.style; // cache style for better performance
	this.options = {resizeScrollbars:true,mouseWheelSpeed:20,snapThreshold:0.334, // INSERT POINT: OPTIONS 
	startX:0,startY:0,scrollY:true,directionLockThreshold:5,momentum:true,bounce:true,bounceTime:600,bounceEasing:'',preventDefault:true,preventDefaultException:{tagName:/^(INPUT|TEXTAREA|BUTTON|SELECT)$/},HWCompositing:true,useTransition:true,useTransform:true, //other options
	eventPassthrough:undefined}; //if you  want to use native scroll, you can set to: true or horizontal
	for(var i in options) {this.options[i] = options[i];} // Normalize options
	this.translateZ = this.options.HWCompositing && utils.hasPerspective?' translateZ(0)':'';this.options.useTransition = utils.hasTransition && this.options.useTransition;this.options.useTransform = utils.hasTransform && this.options.useTransform;this.options.eventPassthrough = this.options.eventPassthrough === true?'vertical':this.options.eventPassthrough;this.options.preventDefault = !this.options.eventPassthrough && this.options.preventDefault; // If you want eventPassthrough I have to lock one of the axes
	this.options.scrollY = this.options.eventPassthrough === 'vertical'?false:this.options.scrollY;this.options.scrollX = this.options.eventPassthrough === 'horizontal'?false:this.options.scrollX; // With eventPassthrough we also need lockDirection mechanism
	this.options.freeScroll = this.options.freeScroll && !this.options.eventPassthrough;this.options.directionLockThreshold = this.options.eventPassthrough?0:this.options.directionLockThreshold;this.options.bounceEasing = typeof this.options.bounceEasing === 'string'?utils.ease[this.options.bounceEasing] || utils.ease.circular:this.options.bounceEasing;this.options.resizePolling = this.options.resizePolling === undefined?60:this.options.resizePolling;if(this.options.tap === true){this.options.tap = 'tap';}if(this.options.shrinkScrollbars === 'scale'){this.options.useTransition = false;}this.options.invertWheelDirection = this.options.invertWheelDirection?-1:1;if(this.options.probeType === 3){this.options.useTransition = false;} // INSERT POINT: NORMALIZATION
	// Some defaults    
	this.x = 0;this.y = 0;this.directionX = 0;this.directionY = 0;this._events = {}; // INSERT POINT: DEFAULTS
	this._init();this.refresh();this.scrollTo(this.options.startX,this.options.startY);this.enable();}IScroll.prototype = {version:'5.1.3',_init:function _init(){this._initEvents();if(this.options.scrollbars || this.options.indicators){this._initIndicators();}if(this.options.mouseWheel){this._initWheel();}if(this.options.snap){this._initSnap();}if(this.options.keyBindings){this._initKeys();} // INSERT POINT: _init
	},destroy:function destroy(){this._initEvents(true);this._execEvent('destroy');},_transitionEnd:function _transitionEnd(e){if(e.target !== this.scroller || !this.isInTransition){return;}this._transitionTime();if(!this.resetPosition(this.options.bounceTime)){this.isInTransition = false;this._execEvent('scrollEnd');}},_start:function _start(e){ // React to left mouse button only
	if(utils.eventType[e.type] !== 1){if(e.button !== 0){return;}}if(!this.enabled || this.initiated && utils.eventType[e.type] !== this.initiated){return;}if(this.options.preventDefault && !utils.isBadAndroid && !utils.preventDefaultException(e.target,this.options.preventDefaultException)){e.preventDefault();}var point=e.touches?e.touches[0]:e,pos;this.initiated = utils.eventType[e.type];this.moved = false;this.distX = 0;this.distY = 0;this.directionX = 0;this.directionY = 0;this.directionLocked = 0;this._transitionTime();this.startTime = utils.getTime();if(this.options.useTransition && this.isInTransition){this.isInTransition = false;pos = this.getComputedPosition();this._translate(Math.round(pos.x),Math.round(pos.y));this._execEvent('scrollEnd');}else if(!this.options.useTransition && this.isAnimating){this.isAnimating = false;this._execEvent('scrollEnd');}this.startX = this.x;this.startY = this.y;this.absStartX = this.x;this.absStartY = this.y;this.pointX = point.pageX;this.pointY = point.pageY;this._execEvent('beforeScrollStart');},_move:function _move(e){if(!this.enabled || utils.eventType[e.type] !== this.initiated){return;}if(this.options.preventDefault){ // increases performance on Android? TODO: check!
	e.preventDefault();}var point=e.touches?e.touches[0]:e,deltaX=point.pageX - this.pointX,deltaY=point.pageY - this.pointY,timestamp=utils.getTime(),newX,newY,absDistX,absDistY;this.pointX = point.pageX;this.pointY = point.pageY;this.distX += deltaX;this.distY += deltaY;absDistX = Math.abs(this.distX);absDistY = Math.abs(this.distY); // We need to move at least 10 pixels for the scrolling to initiate
	if(timestamp - this.endTime > 300 && (absDistX < 10 && absDistY < 10)){return;} // If you are scrolling in one direction lock the other
	if(!this.directionLocked && !this.options.freeScroll){if(absDistX > absDistY + this.options.directionLockThreshold){this.directionLocked = 'h'; // lock horizontally
	}else if(absDistY >= absDistX + this.options.directionLockThreshold){this.directionLocked = 'v'; // lock vertically
	}else {this.directionLocked = 'n'; // no lock
	}}if(this.directionLocked === 'h'){if(this.options.eventPassthrough === 'vertical'){e.preventDefault();}else if(this.options.eventPassthrough === 'horizontal'){this.initiated = false;return;}deltaY = 0;}else if(this.directionLocked === 'v'){if(this.options.eventPassthrough === 'horizontal'){e.preventDefault();}else if(this.options.eventPassthrough === 'vertical'){this.initiated = false;return;}deltaX = 0;}deltaX = this.hasHorizontalScroll?deltaX:0;deltaY = this.hasVerticalScroll?deltaY:0;newX = this.x + deltaX;newY = this.y + deltaY; // Slow down if outside of the boundaries
	if(newX > 0 || newX < this.maxScrollX){newX = this.options.bounce?this.x + deltaX / 3:newX > 0?0:this.maxScrollX;}if(newY > 0 || newY < this.maxScrollY){newY = this.options.bounce?this.y + deltaY / 3:newY > 0?0:this.maxScrollY;}this.directionX = deltaX > 0?-1:deltaX < 0?1:0;this.directionY = deltaY > 0?-1:deltaY < 0?1:0;if(!this.moved){this._execEvent('scrollStart');}this.moved = true;this._translate(newX,newY); /* REPLACE START: _move */if(timestamp - this.startTime > 300){this.startTime = timestamp;this.startX = this.x;this.startY = this.y;if(this.options.probeType === 1){this._execEvent('scroll');}}if(this.options.probeType > 1){this._execEvent('scroll');} /* REPLACE END: _move */},_end:function _end(e){if(!this.enabled || utils.eventType[e.type] !== this.initiated){return;}if(this.options.preventDefault && !utils.preventDefaultException(e.target,this.options.preventDefaultException)){e.preventDefault();}var  /*point = e.changedTouches ? e.changedTouches[0] : e,*/momentumX,momentumY,duration=utils.getTime() - this.startTime,newX=Math.round(this.x),newY=Math.round(this.y),distanceX=Math.abs(newX - this.startX),distanceY=Math.abs(newY - this.startY),time=0,easing='';this.isInTransition = 0;this.initiated = 0;this.endTime = utils.getTime(); // reset if we are outside of the boundaries
	if(this.resetPosition(this.options.bounceTime)){return;}this.scrollTo(newX,newY); // ensures that the last position is rounded
	// we scrolled less than 10 pixels
	if(!this.moved){if(this.options.tap){utils.tap(e,this.options.tap);}if(this.options.click){utils.click(e);}this._execEvent('scrollCancel');return;}if(this._events.flick && duration < 200 && distanceX < 100 && distanceY < 100){this._execEvent('flick');return;} // start momentum animation if needed
	if(this.options.momentum && duration < 300){momentumX = this.hasHorizontalScroll?utils.momentum(this.x,this.startX,duration,this.maxScrollX,this.options.bounce?this.wrapperWidth:0,this.options.deceleration,this):{destination:newX,duration:0};momentumY = this.hasVerticalScroll?utils.momentum(this.y,this.startY,duration,this.maxScrollY,this.options.bounce?this.wrapperHeight:0,this.options.deceleration,this):{destination:newY,duration:0};newX = momentumX.destination;newY = momentumY.destination;time = Math.max(momentumX.duration,momentumY.duration);this.isInTransition = 1;}if(this.options.snap){var snap=this._nearestSnap(newX,newY);this.currentPage = snap;time = this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(newX - snap.x),1000),Math.min(Math.abs(newY - snap.y),1000)),300);newX = snap.x;newY = snap.y;this.directionX = 0;this.directionY = 0;easing = this.options.bounceEasing;} // INSERT POINT: _end
	if(newX !== this.x || newY !== this.y){ // change easing function when scroller goes out of the boundaries
	if(newX > 0 || newX < this.maxScrollX || newY > 0 || newY < this.maxScrollY){easing = utils.ease.quadratic;}this.scrollTo(newX,newY,time,easing);return;}this._execEvent('scrollEnd');},_resize:function _resize(){var that=this;clearTimeout(this.resizeTimeout);this.resizeTimeout = setTimeout(function(){that.refresh();},this.options.resizePolling);},resetPosition:function resetPosition(time){var x=this.x,y=this.y;time = time || 0;if(!this.hasHorizontalScroll || this.x > 0){x = 0;}else if(this.x < this.maxScrollX){x = this.maxScrollX;}if(!this.hasVerticalScroll || this.y > 0){y = 0;}else if(this.y < this.maxScrollY){y = this.maxScrollY;}if(x === this.x && y === this.y){return false;}if(this.options.ptr && this.y > 44 && this.startY * -1 < $(window).height() && !this.ptrLock){ // jshint ignore:line
	// not trigger ptr when user want to scroll to top
	y = this.options.ptrOffset || 44;this._execEvent('ptr'); // 防止返回的过程中再次触发了 ptr ，导致被定位到 44px（因为可能done事件触发很快，在返回到44px以前就触发done
	this.ptrLock = true;var self=this;setTimeout(function(){self.ptrLock = false;},500);}this.scrollTo(x,y,time,this.options.bounceEasing);return true;},disable:function disable(){this.enabled = false;},enable:function enable(){this.enabled = true;},refresh:function refresh(){ // var rf = this.wrapper.offsetHeight; // Force reflow
	this.wrapperWidth = this.wrapper.clientWidth;this.wrapperHeight = this.wrapper.clientHeight; /* REPLACE START: refresh */this.scrollerWidth = this.scroller.offsetWidth;this.scrollerHeight = this.scroller.offsetHeight;this.maxScrollX = this.wrapperWidth - this.scrollerWidth;this.maxScrollY = this.wrapperHeight - this.scrollerHeight; /* REPLACE END: refresh */this.hasHorizontalScroll = this.options.scrollX && this.maxScrollX < 0;this.hasVerticalScroll = this.options.scrollY && this.maxScrollY < 0;if(!this.hasHorizontalScroll){this.maxScrollX = 0;this.scrollerWidth = this.wrapperWidth;}if(!this.hasVerticalScroll){this.maxScrollY = 0;this.scrollerHeight = this.wrapperHeight;}this.endTime = 0;this.directionX = 0;this.directionY = 0;this.wrapperOffset = utils.offset(this.wrapper);this._execEvent('refresh');this.resetPosition(); // INSERT POINT: _refresh
	},on:function on(type,fn){if(!this._events[type]){this._events[type] = [];}this._events[type].push(fn);},off:function off(type,fn){if(!this._events[type]){return;}var index=this._events[type].indexOf(fn);if(index > -1){this._events[type].splice(index,1);}},_execEvent:function _execEvent(type){if(!this._events[type]){return;}var i=0,l=this._events[type].length;if(!l){return;}for(;i < l;i++) {this._events[type][i].apply(this,[].slice.call(arguments,1));}},scrollBy:function scrollBy(x,y,time,easing){x = this.x + x;y = this.y + y;time = time || 0;this.scrollTo(x,y,time,easing);},scrollTo:function scrollTo(x,y,time,easing){easing = easing || utils.ease.circular;this.isInTransition = this.options.useTransition && time > 0;if(!time || this.options.useTransition && easing.style){this._transitionTimingFunction(easing.style);this._transitionTime(time);this._translate(x,y);}else {this._animate(x,y,time,easing.fn);}},scrollToElement:function scrollToElement(el,time,offsetX,offsetY,easing){el = el.nodeType?el:this.scroller.querySelector(el);if(!el){return;}var pos=utils.offset(el);pos.left -= this.wrapperOffset.left;pos.top -= this.wrapperOffset.top; // if offsetX/Y are true we center the element to the screen
	if(offsetX === true){offsetX = Math.round(el.offsetWidth / 2 - this.wrapper.offsetWidth / 2);}if(offsetY === true){offsetY = Math.round(el.offsetHeight / 2 - this.wrapper.offsetHeight / 2);}pos.left -= offsetX || 0;pos.top -= offsetY || 0;pos.left = pos.left > 0?0:pos.left < this.maxScrollX?this.maxScrollX:pos.left;pos.top = pos.top > 0?0:pos.top < this.maxScrollY?this.maxScrollY:pos.top;time = time === undefined || time === null || time === 'auto'?Math.max(Math.abs(this.x - pos.left),Math.abs(this.y - pos.top)):time;this.scrollTo(pos.left,pos.top,time,easing);},_transitionTime:function _transitionTime(time){time = time || 0;this.scrollerStyle[utils.style.transitionDuration] = time + 'ms';if(!time && utils.isBadAndroid){this.scrollerStyle[utils.style.transitionDuration] = '0.001s';}if(this.indicators){for(var i=this.indicators.length;i--;) {this.indicators[i].transitionTime(time);}} // INSERT POINT: _transitionTime
	},_transitionTimingFunction:function _transitionTimingFunction(easing){this.scrollerStyle[utils.style.transitionTimingFunction] = easing;if(this.indicators){for(var i=this.indicators.length;i--;) {this.indicators[i].transitionTimingFunction(easing);}} // INSERT POINT: _transitionTimingFunction
	},_translate:function _translate(x,y){if(this.options.useTransform){ /* REPLACE START: _translate */this.scrollerStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.translateZ; /* REPLACE END: _translate */}else {x = Math.round(x);y = Math.round(y);this.scrollerStyle.left = x + 'px';this.scrollerStyle.top = y + 'px';}this.x = x;this.y = y;if(this.indicators){for(var i=this.indicators.length;i--;) {this.indicators[i].updatePosition();}} // INSERT POINT: _translate
	},_initEvents:function _initEvents(remove){var eventType=remove?utils.removeEvent:utils.addEvent,target=this.options.bindToWrapper?this.wrapper:window;eventType(window,'orientationchange',this);eventType(window,'resize',this);if(this.options.click){eventType(this.wrapper,'click',this,true);}if(!this.options.disableMouse){eventType(this.wrapper,'mousedown',this);eventType(target,'mousemove',this);eventType(target,'mousecancel',this);eventType(target,'mouseup',this);}if(utils.hasPointer && !this.options.disablePointer){eventType(this.wrapper,utils.prefixPointerEvent('pointerdown'),this);eventType(target,utils.prefixPointerEvent('pointermove'),this);eventType(target,utils.prefixPointerEvent('pointercancel'),this);eventType(target,utils.prefixPointerEvent('pointerup'),this);}if(utils.hasTouch && !this.options.disableTouch){eventType(this.wrapper,'touchstart',this);eventType(target,'touchmove',this);eventType(target,'touchcancel',this);eventType(target,'touchend',this);}eventType(this.scroller,'transitionend',this);eventType(this.scroller,'webkitTransitionEnd',this);eventType(this.scroller,'oTransitionEnd',this);eventType(this.scroller,'MSTransitionEnd',this);},getComputedPosition:function getComputedPosition(){var matrix=window.getComputedStyle(this.scroller,null),x,y;if(this.options.useTransform){matrix = matrix[utils.style.transform].split(')')[0].split(', ');x = +(matrix[12] || matrix[4]);y = +(matrix[13] || matrix[5]);}else {x = +matrix.left.replace(/[^-\d.]/g,'');y = +matrix.top.replace(/[^-\d.]/g,'');}return {x:x,y:y};},_initIndicators:function _initIndicators(){var interactive=this.options.interactiveScrollbars,customStyle=typeof this.options.scrollbars !== 'string',indicators=[],indicator;var that=this;this.indicators = [];if(this.options.scrollbars){ // Vertical scrollbar
	if(this.options.scrollY){indicator = {el:createDefaultScrollbar('v',interactive,this.options.scrollbars),interactive:interactive,defaultScrollbars:true,customStyle:customStyle,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenX:false};this.wrapper.appendChild(indicator.el);indicators.push(indicator);} // Horizontal scrollbar
	if(this.options.scrollX){indicator = {el:createDefaultScrollbar('h',interactive,this.options.scrollbars),interactive:interactive,defaultScrollbars:true,customStyle:customStyle,resize:this.options.resizeScrollbars,shrink:this.options.shrinkScrollbars,fade:this.options.fadeScrollbars,listenY:false};this.wrapper.appendChild(indicator.el);indicators.push(indicator);}}if(this.options.indicators){ // TODO: check concat compatibility
	indicators = indicators.concat(this.options.indicators);}for(var i=indicators.length;i--;) {this.indicators.push(new Indicator(this,indicators[i]));} // TODO: check if we can use array.map (wide compatibility and performance issues)
	function _indicatorsMap(fn){for(var i=that.indicators.length;i--;) {fn.call(that.indicators[i]);}}if(this.options.fadeScrollbars){this.on('scrollEnd',function(){_indicatorsMap(function(){this.fade();});});this.on('scrollCancel',function(){_indicatorsMap(function(){this.fade();});});this.on('scrollStart',function(){_indicatorsMap(function(){this.fade(1);});});this.on('beforeScrollStart',function(){_indicatorsMap(function(){this.fade(1,true);});});}this.on('refresh',function(){_indicatorsMap(function(){this.refresh();});});this.on('destroy',function(){_indicatorsMap(function(){this.destroy();});delete this.indicators;});},_initWheel:function _initWheel(){utils.addEvent(this.wrapper,'wheel',this);utils.addEvent(this.wrapper,'mousewheel',this);utils.addEvent(this.wrapper,'DOMMouseScroll',this);this.on('destroy',function(){utils.removeEvent(this.wrapper,'wheel',this);utils.removeEvent(this.wrapper,'mousewheel',this);utils.removeEvent(this.wrapper,'DOMMouseScroll',this);});},_wheel:function _wheel(e){if(!this.enabled){return;}e.preventDefault();e.stopPropagation();var wheelDeltaX,wheelDeltaY,newX,newY,that=this;if(this.wheelTimeout === undefined){that._execEvent('scrollStart');} // Execute the scrollEnd event after 400ms the wheel stopped scrolling
	clearTimeout(this.wheelTimeout);this.wheelTimeout = setTimeout(function(){that._execEvent('scrollEnd');that.wheelTimeout = undefined;},400);if('deltaX' in e){if(e.deltaMode === 1){wheelDeltaX = -e.deltaX * this.options.mouseWheelSpeed;wheelDeltaY = -e.deltaY * this.options.mouseWheelSpeed;}else {wheelDeltaX = -e.deltaX;wheelDeltaY = -e.deltaY;}}else if('wheelDeltaX' in e){wheelDeltaX = e.wheelDeltaX / 120 * this.options.mouseWheelSpeed;wheelDeltaY = e.wheelDeltaY / 120 * this.options.mouseWheelSpeed;}else if('wheelDelta' in e){wheelDeltaX = wheelDeltaY = e.wheelDelta / 120 * this.options.mouseWheelSpeed;}else if('detail' in e){wheelDeltaX = wheelDeltaY = -e.detail / 3 * this.options.mouseWheelSpeed;}else {return;}wheelDeltaX *= this.options.invertWheelDirection;wheelDeltaY *= this.options.invertWheelDirection;if(!this.hasVerticalScroll){wheelDeltaX = wheelDeltaY;wheelDeltaY = 0;}if(this.options.snap){newX = this.currentPage.pageX;newY = this.currentPage.pageY;if(wheelDeltaX > 0){newX--;}else if(wheelDeltaX < 0){newX++;}if(wheelDeltaY > 0){newY--;}else if(wheelDeltaY < 0){newY++;}this.goToPage(newX,newY);return;}newX = this.x + Math.round(this.hasHorizontalScroll?wheelDeltaX:0);newY = this.y + Math.round(this.hasVerticalScroll?wheelDeltaY:0);if(newX > 0){newX = 0;}else if(newX < this.maxScrollX){newX = this.maxScrollX;}if(newY > 0){newY = 0;}else if(newY < this.maxScrollY){newY = this.maxScrollY;}this.scrollTo(newX,newY,0);this._execEvent('scroll'); // INSERT POINT: _wheel
	},_initSnap:function _initSnap(){this.currentPage = {};if(typeof this.options.snap === 'string'){this.options.snap = this.scroller.querySelectorAll(this.options.snap);}this.on('refresh',function(){var i=0,l,m=0,n,cx,cy,x=0,y,stepX=this.options.snapStepX || this.wrapperWidth,stepY=this.options.snapStepY || this.wrapperHeight,el;this.pages = [];if(!this.wrapperWidth || !this.wrapperHeight || !this.scrollerWidth || !this.scrollerHeight){return;}if(this.options.snap === true){cx = Math.round(stepX / 2);cy = Math.round(stepY / 2);while(x > -this.scrollerWidth) {this.pages[i] = [];l = 0;y = 0;while(y > -this.scrollerHeight) {this.pages[i][l] = {x:Math.max(x,this.maxScrollX),y:Math.max(y,this.maxScrollY),width:stepX,height:stepY,cx:x - cx,cy:y - cy};y -= stepY;l++;}x -= stepX;i++;}}else {el = this.options.snap;l = el.length;n = -1;for(;i < l;i++) {if(i === 0 || el[i].offsetLeft <= el[i - 1].offsetLeft){m = 0;n++;}if(!this.pages[m]){this.pages[m] = [];}x = Math.max(-el[i].offsetLeft,this.maxScrollX);y = Math.max(-el[i].offsetTop,this.maxScrollY);cx = x - Math.round(el[i].offsetWidth / 2);cy = y - Math.round(el[i].offsetHeight / 2);this.pages[m][n] = {x:x,y:y,width:el[i].offsetWidth,height:el[i].offsetHeight,cx:cx,cy:cy};if(x > this.maxScrollX){m++;}}}this.goToPage(this.currentPage.pageX || 0,this.currentPage.pageY || 0,0); // Update snap threshold if needed
	if(this.options.snapThreshold % 1 === 0){this.snapThresholdX = this.options.snapThreshold;this.snapThresholdY = this.options.snapThreshold;}else {this.snapThresholdX = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].width * this.options.snapThreshold);this.snapThresholdY = Math.round(this.pages[this.currentPage.pageX][this.currentPage.pageY].height * this.options.snapThreshold);}});this.on('flick',function(){var time=this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.x - this.startX),1000),Math.min(Math.abs(this.y - this.startY),1000)),300);this.goToPage(this.currentPage.pageX + this.directionX,this.currentPage.pageY + this.directionY,time);});},_nearestSnap:function _nearestSnap(x,y){if(!this.pages.length){return {x:0,y:0,pageX:0,pageY:0};}var i=0,l=this.pages.length,m=0; // Check if we exceeded the snap threshold
	if(Math.abs(x - this.absStartX) < this.snapThresholdX && Math.abs(y - this.absStartY) < this.snapThresholdY){return this.currentPage;}if(x > 0){x = 0;}else if(x < this.maxScrollX){x = this.maxScrollX;}if(y > 0){y = 0;}else if(y < this.maxScrollY){y = this.maxScrollY;}for(;i < l;i++) {if(x >= this.pages[i][0].cx){x = this.pages[i][0].x;break;}}l = this.pages[i].length;for(;m < l;m++) {if(y >= this.pages[0][m].cy){y = this.pages[0][m].y;break;}}if(i === this.currentPage.pageX){i += this.directionX;if(i < 0){i = 0;}else if(i >= this.pages.length){i = this.pages.length - 1;}x = this.pages[i][0].x;}if(m === this.currentPage.pageY){m += this.directionY;if(m < 0){m = 0;}else if(m >= this.pages[0].length){m = this.pages[0].length - 1;}y = this.pages[0][m].y;}return {x:x,y:y,pageX:i,pageY:m};},goToPage:function goToPage(x,y,time,easing){easing = easing || this.options.bounceEasing;if(x >= this.pages.length){x = this.pages.length - 1;}else if(x < 0){x = 0;}if(y >= this.pages[x].length){y = this.pages[x].length - 1;}else if(y < 0){y = 0;}var posX=this.pages[x][y].x,posY=this.pages[x][y].y;time = time === undefined?this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(posX - this.x),1000),Math.min(Math.abs(posY - this.y),1000)),300):time;this.currentPage = {x:posX,y:posY,pageX:x,pageY:y};this.scrollTo(posX,posY,time,easing);},next:function next(time,easing){var x=this.currentPage.pageX,y=this.currentPage.pageY;x++;if(x >= this.pages.length && this.hasVerticalScroll){x = 0;y++;}this.goToPage(x,y,time,easing);},prev:function prev(time,easing){var x=this.currentPage.pageX,y=this.currentPage.pageY;x--;if(x < 0 && this.hasVerticalScroll){x = 0;y--;}this.goToPage(x,y,time,easing);},_initKeys:function _initKeys(){ // default key bindings
	var keys={pageUp:33,pageDown:34,end:35,home:36,left:37,up:38,right:39,down:40};var i; // if you give me characters I give you keycode
	if(typeof this.options.keyBindings === 'object'){for(i in this.options.keyBindings) {if(typeof this.options.keyBindings[i] === 'string'){this.options.keyBindings[i] = this.options.keyBindings[i].toUpperCase().charCodeAt(0);}}}else {this.options.keyBindings = {};}for(i in keys) { // jshint ignore:line
	this.options.keyBindings[i] = this.options.keyBindings[i] || keys[i];}utils.addEvent(window,'keydown',this);this.on('destroy',function(){utils.removeEvent(window,'keydown',this);});},_key:function _key(e){if(!this.enabled){return;}var snap=this.options.snap, // we are using this alot, better to cache it
	newX=snap?this.currentPage.pageX:this.x,newY=snap?this.currentPage.pageY:this.y,now=utils.getTime(),prevTime=this.keyTime || 0,acceleration=0.250,pos;if(this.options.useTransition && this.isInTransition){pos = this.getComputedPosition();this._translate(Math.round(pos.x),Math.round(pos.y));this.isInTransition = false;}this.keyAcceleration = now - prevTime < 200?Math.min(this.keyAcceleration + acceleration,50):0;switch(e.keyCode){case this.options.keyBindings.pageUp:if(this.hasHorizontalScroll && !this.hasVerticalScroll){newX += snap?1:this.wrapperWidth;}else {newY += snap?1:this.wrapperHeight;}break;case this.options.keyBindings.pageDown:if(this.hasHorizontalScroll && !this.hasVerticalScroll){newX -= snap?1:this.wrapperWidth;}else {newY -= snap?1:this.wrapperHeight;}break;case this.options.keyBindings.end:newX = snap?this.pages.length - 1:this.maxScrollX;newY = snap?this.pages[0].length - 1:this.maxScrollY;break;case this.options.keyBindings.home:newX = 0;newY = 0;break;case this.options.keyBindings.left:newX += snap?-1:5 + this.keyAcceleration >> 0; // jshint ignore:line
	break;case this.options.keyBindings.up:newY += snap?1:5 + this.keyAcceleration >> 0; // jshint ignore:line
	break;case this.options.keyBindings.right:newX -= snap?-1:5 + this.keyAcceleration >> 0; // jshint ignore:line
	break;case this.options.keyBindings.down:newY -= snap?1:5 + this.keyAcceleration >> 0; // jshint ignore:line
	break;default:return;}if(snap){this.goToPage(newX,newY);return;}if(newX > 0){newX = 0;this.keyAcceleration = 0;}else if(newX < this.maxScrollX){newX = this.maxScrollX;this.keyAcceleration = 0;}if(newY > 0){newY = 0;this.keyAcceleration = 0;}else if(newY < this.maxScrollY){newY = this.maxScrollY;this.keyAcceleration = 0;}this.scrollTo(newX,newY,0);this.keyTime = now;},_animate:function _animate(destX,destY,duration,easingFn){var that=this,startX=this.x,startY=this.y,startTime=utils.getTime(),destTime=startTime + duration;function step(){var now=utils.getTime(),newX,newY,easing;if(now >= destTime){that.isAnimating = false;that._translate(destX,destY);if(!that.resetPosition(that.options.bounceTime)){that._execEvent('scrollEnd');}return;}now = (now - startTime) / duration;easing = easingFn(now);newX = (destX - startX) * easing + startX;newY = (destY - startY) * easing + startY;that._translate(newX,newY);if(that.isAnimating){rAF(step);}if(that.options.probeType === 3){that._execEvent('scroll');}}this.isAnimating = true;step();},handleEvent:function handleEvent(e){switch(e.type){case 'touchstart':case 'pointerdown':case 'MSPointerDown':case 'mousedown':this._start(e);break;case 'touchmove':case 'pointermove':case 'MSPointerMove':case 'mousemove':this._move(e);break;case 'touchend':case 'pointerup':case 'MSPointerUp':case 'mouseup':case 'touchcancel':case 'pointercancel':case 'MSPointerCancel':case 'mousecancel':this._end(e);break;case 'orientationchange':case 'resize':this._resize();break;case 'transitionend':case 'webkitTransitionEnd':case 'oTransitionEnd':case 'MSTransitionEnd':this._transitionEnd(e);break;case 'wheel':case 'DOMMouseScroll':case 'mousewheel':this._wheel(e);break;case 'keydown':this._key(e);break;case 'click':if(!e._constructed){e.preventDefault();e.stopPropagation();}break;}}};function createDefaultScrollbar(direction,interactive,type){var scrollbar=document.createElement('div'),indicator=document.createElement('div');if(type === true){scrollbar.style.cssText = 'position:absolute;z-index:9999';indicator.style.cssText = '-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;background:rgba(0,0,0,0.5);border:1px solid rgba(255,255,255,0.9);border-radius:3px';}indicator.className = 'iScrollIndicator';if(direction === 'h'){if(type === true){scrollbar.style.cssText += ';height:5px;left:2px;right:2px;bottom:0';indicator.style.height = '100%';}scrollbar.className = 'iScrollHorizontalScrollbar';}else {if(type === true){scrollbar.style.cssText += ';width:5px;bottom:2px;top:2px;right:1px';indicator.style.width = '100%';}scrollbar.className = 'iScrollVerticalScrollbar';}scrollbar.style.cssText += ';overflow:hidden';if(!interactive){scrollbar.style.pointerEvents = 'none';}scrollbar.appendChild(indicator);return scrollbar;}function Indicator(scroller,options){this.wrapper = typeof options.el === 'string'?document.querySelector(options.el):options.el;this.wrapperStyle = this.wrapper.style;this.indicator = this.wrapper.children[0];this.indicatorStyle = this.indicator.style;this.scroller = scroller;this.options = {listenX:true,listenY:true,interactive:false,resize:true,defaultScrollbars:false,shrink:false,fade:false,speedRatioX:0,speedRatioY:0};for(var i in options) { // jshint ignore:line
	this.options[i] = options[i];}this.sizeRatioX = 1;this.sizeRatioY = 1;this.maxPosX = 0;this.maxPosY = 0;if(this.options.interactive){if(!this.options.disableTouch){utils.addEvent(this.indicator,'touchstart',this);utils.addEvent(window,'touchend',this);}if(!this.options.disablePointer){utils.addEvent(this.indicator,utils.prefixPointerEvent('pointerdown'),this);utils.addEvent(window,utils.prefixPointerEvent('pointerup'),this);}if(!this.options.disableMouse){utils.addEvent(this.indicator,'mousedown',this);utils.addEvent(window,'mouseup',this);}}if(this.options.fade){this.wrapperStyle[utils.style.transform] = this.scroller.translateZ;this.wrapperStyle[utils.style.transitionDuration] = utils.isBadAndroid?'0.001s':'0ms';this.wrapperStyle.opacity = '0';}}Indicator.prototype = {handleEvent:function handleEvent(e){switch(e.type){case 'touchstart':case 'pointerdown':case 'MSPointerDown':case 'mousedown':this._start(e);break;case 'touchmove':case 'pointermove':case 'MSPointerMove':case 'mousemove':this._move(e);break;case 'touchend':case 'pointerup':case 'MSPointerUp':case 'mouseup':case 'touchcancel':case 'pointercancel':case 'MSPointerCancel':case 'mousecancel':this._end(e);break;}},destroy:function destroy(){if(this.options.interactive){utils.removeEvent(this.indicator,'touchstart',this);utils.removeEvent(this.indicator,utils.prefixPointerEvent('pointerdown'),this);utils.removeEvent(this.indicator,'mousedown',this);utils.removeEvent(window,'touchmove',this);utils.removeEvent(window,utils.prefixPointerEvent('pointermove'),this);utils.removeEvent(window,'mousemove',this);utils.removeEvent(window,'touchend',this);utils.removeEvent(window,utils.prefixPointerEvent('pointerup'),this);utils.removeEvent(window,'mouseup',this);}if(this.options.defaultScrollbars){this.wrapper.parentNode.removeChild(this.wrapper);}},_start:function _start(e){var point=e.touches?e.touches[0]:e;e.preventDefault();e.stopPropagation();this.transitionTime();this.initiated = true;this.moved = false;this.lastPointX = point.pageX;this.lastPointY = point.pageY;this.startTime = utils.getTime();if(!this.options.disableTouch){utils.addEvent(window,'touchmove',this);}if(!this.options.disablePointer){utils.addEvent(window,utils.prefixPointerEvent('pointermove'),this);}if(!this.options.disableMouse){utils.addEvent(window,'mousemove',this);}this.scroller._execEvent('beforeScrollStart');},_move:function _move(e){var point=e.touches?e.touches[0]:e,deltaX,deltaY,newX,newY,timestamp=utils.getTime();if(!this.moved){this.scroller._execEvent('scrollStart');}this.moved = true;deltaX = point.pageX - this.lastPointX;this.lastPointX = point.pageX;deltaY = point.pageY - this.lastPointY;this.lastPointY = point.pageY;newX = this.x + deltaX;newY = this.y + deltaY;this._pos(newX,newY);if(this.scroller.options.probeType === 1 && timestamp - this.startTime > 300){this.startTime = timestamp;this.scroller._execEvent('scroll');}else if(this.scroller.options.probeType > 1){this.scroller._execEvent('scroll');} // INSERT POINT: indicator._move
	e.preventDefault();e.stopPropagation();},_end:function _end(e){if(!this.initiated){return;}this.initiated = false;e.preventDefault();e.stopPropagation();utils.removeEvent(window,'touchmove',this);utils.removeEvent(window,utils.prefixPointerEvent('pointermove'),this);utils.removeEvent(window,'mousemove',this);if(this.scroller.options.snap){var snap=this.scroller._nearestSnap(this.scroller.x,this.scroller.y);var time=this.options.snapSpeed || Math.max(Math.max(Math.min(Math.abs(this.scroller.x - snap.x),1000),Math.min(Math.abs(this.scroller.y - snap.y),1000)),300);if(this.scroller.x !== snap.x || this.scroller.y !== snap.y){this.scroller.directionX = 0;this.scroller.directionY = 0;this.scroller.currentPage = snap;this.scroller.scrollTo(snap.x,snap.y,time,this.scroller.options.bounceEasing);}}if(this.moved){this.scroller._execEvent('scrollEnd');}},transitionTime:function transitionTime(time){time = time || 0;this.indicatorStyle[utils.style.transitionDuration] = time + 'ms';if(!time && utils.isBadAndroid){this.indicatorStyle[utils.style.transitionDuration] = '0.001s';}},transitionTimingFunction:function transitionTimingFunction(easing){this.indicatorStyle[utils.style.transitionTimingFunction] = easing;},refresh:function refresh(){this.transitionTime();if(this.options.listenX && !this.options.listenY){this.indicatorStyle.display = this.scroller.hasHorizontalScroll?'block':'none';}else if(this.options.listenY && !this.options.listenX){this.indicatorStyle.display = this.scroller.hasVerticalScroll?'block':'none';}else {this.indicatorStyle.display = this.scroller.hasHorizontalScroll || this.scroller.hasVerticalScroll?'block':'none';}if(this.scroller.hasHorizontalScroll && this.scroller.hasVerticalScroll){utils.addClass(this.wrapper,'iScrollBothScrollbars');utils.removeClass(this.wrapper,'iScrollLoneScrollbar');if(this.options.defaultScrollbars && this.options.customStyle){if(this.options.listenX){this.wrapper.style.right = '8px';}else {this.wrapper.style.bottom = '8px';}}}else {utils.removeClass(this.wrapper,'iScrollBothScrollbars');utils.addClass(this.wrapper,'iScrollLoneScrollbar');if(this.options.defaultScrollbars && this.options.customStyle){if(this.options.listenX){this.wrapper.style.right = '2px';}else {this.wrapper.style.bottom = '2px';}}} // var r = this.wrapper.offsetHeight; // force refresh
	if(this.options.listenX){this.wrapperWidth = this.wrapper.clientWidth;if(this.options.resize){this.indicatorWidth = Math.max(Math.round(this.wrapperWidth * this.wrapperWidth / (this.scroller.scrollerWidth || this.wrapperWidth || 1)),8);this.indicatorStyle.width = this.indicatorWidth + 'px';}else {this.indicatorWidth = this.indicator.clientWidth;}this.maxPosX = this.wrapperWidth - this.indicatorWidth;if(this.options.shrink === 'clip'){this.minBoundaryX = -this.indicatorWidth + 8;this.maxBoundaryX = this.wrapperWidth - 8;}else {this.minBoundaryX = 0;this.maxBoundaryX = this.maxPosX;}this.sizeRatioX = this.options.speedRatioX || this.scroller.maxScrollX && this.maxPosX / this.scroller.maxScrollX;}if(this.options.listenY){this.wrapperHeight = this.wrapper.clientHeight;if(this.options.resize){this.indicatorHeight = Math.max(Math.round(this.wrapperHeight * this.wrapperHeight / (this.scroller.scrollerHeight || this.wrapperHeight || 1)),8);this.indicatorStyle.height = this.indicatorHeight + 'px';}else {this.indicatorHeight = this.indicator.clientHeight;}this.maxPosY = this.wrapperHeight - this.indicatorHeight;if(this.options.shrink === 'clip'){this.minBoundaryY = -this.indicatorHeight + 8;this.maxBoundaryY = this.wrapperHeight - 8;}else {this.minBoundaryY = 0;this.maxBoundaryY = this.maxPosY;}this.maxPosY = this.wrapperHeight - this.indicatorHeight;this.sizeRatioY = this.options.speedRatioY || this.scroller.maxScrollY && this.maxPosY / this.scroller.maxScrollY;}this.updatePosition();},updatePosition:function updatePosition(){var x=this.options.listenX && Math.round(this.sizeRatioX * this.scroller.x) || 0,y=this.options.listenY && Math.round(this.sizeRatioY * this.scroller.y) || 0;if(!this.options.ignoreBoundaries){if(x < this.minBoundaryX){if(this.options.shrink === 'scale'){this.width = Math.max(this.indicatorWidth + x,8);this.indicatorStyle.width = this.width + 'px';}x = this.minBoundaryX;}else if(x > this.maxBoundaryX){if(this.options.shrink === 'scale'){this.width = Math.max(this.indicatorWidth - (x - this.maxPosX),8);this.indicatorStyle.width = this.width + 'px';x = this.maxPosX + this.indicatorWidth - this.width;}else {x = this.maxBoundaryX;}}else if(this.options.shrink === 'scale' && this.width !== this.indicatorWidth){this.width = this.indicatorWidth;this.indicatorStyle.width = this.width + 'px';}if(y < this.minBoundaryY){if(this.options.shrink === 'scale'){this.height = Math.max(this.indicatorHeight + y * 3,8);this.indicatorStyle.height = this.height + 'px';}y = this.minBoundaryY;}else if(y > this.maxBoundaryY){if(this.options.shrink === 'scale'){this.height = Math.max(this.indicatorHeight - (y - this.maxPosY) * 3,8);this.indicatorStyle.height = this.height + 'px';y = this.maxPosY + this.indicatorHeight - this.height;}else {y = this.maxBoundaryY;}}else if(this.options.shrink === 'scale' && this.height !== this.indicatorHeight){this.height = this.indicatorHeight;this.indicatorStyle.height = this.height + 'px';}}this.x = x;this.y = y;if(this.scroller.options.useTransform){this.indicatorStyle[utils.style.transform] = 'translate(' + x + 'px,' + y + 'px)' + this.scroller.translateZ;}else {this.indicatorStyle.left = x + 'px';this.indicatorStyle.top = y + 'px';}},_pos:function _pos(x,y){if(x < 0){x = 0;}else if(x > this.maxPosX){x = this.maxPosX;}if(y < 0){y = 0;}else if(y > this.maxPosY){y = this.maxPosY;}x = this.options.listenX?Math.round(x / this.sizeRatioX):this.scroller.x;y = this.options.listenY?Math.round(y / this.sizeRatioY):this.scroller.y;this.scroller.scrollTo(x,y);},fade:function fade(val,hold){if(hold && !this.visible){return;}clearTimeout(this.fadeTimeout);this.fadeTimeout = null;var time=val?250:500,delay=val?0:300;val = val?'1':'0';this.wrapperStyle[utils.style.transitionDuration] = time + 'ms';this.fadeTimeout = setTimeout((function(val){this.wrapperStyle.opacity = val;this.visible = +val;}).bind(this,val),delay);}};IScroll.utils = utils;window.IScroll = IScroll;})(window); /* ===============================================================================
	************   scroller   ************
	=============================================================================== */ /* global Zepto:true */+(function($){"use strict"; //比较一个字符串版本号
	//a > b === 1
	//a = b === 0
	//a < b === -1
	var compareVersion=function compareVersion(a,b){var as=a.split('.');var bs=b.split('.');if(a === b)return 0;for(var i=0;i < as.length;i++) {var x=parseInt(as[i]);if(!bs[i])return 1;var y=parseInt(bs[i]);if(x < y)return -1;if(x > y)return 1;}return 1;}; //重置zepto自带的滚动条
	var _zeptoMethodCache={"scrollTop":$.fn.scrollTop,"scrollLeft":$.fn.scrollLeft}; //重置scrollLeft和scrollRight
	(function(){$.extend($.fn,{scrollTop:function scrollTop(top,dur){if(!this.length)return;var scroller=this.data('scroller');if(scroller && scroller.scroller){ //js滚动
	return scroller.scrollTop(top,dur);}else {return _zeptoMethodCache.scrollTop.apply(this,arguments);}}});$.extend($.fn,{scrollLeft:function scrollLeft(left,dur){if(!this.length)return;var scroller=this.data('scroller');if(scroller && scroller.scroller){ //js滚动
	return scroller.scrollLeft(left,dur);}else {return _zeptoMethodCache.scrollLeft.apply(this,arguments);}}});})(); //自定义的滚动条
	var Scroller=function Scroller(pageContent,_options){var $pageContent=this.$pageContent = $(pageContent);this.options = $.extend({},this._defaults,_options);var type=this.options.type; //auto的type,系统版本的小于4.4.0的安卓设备和系统版本小于6.0.0的ios设备，启用js版的iscoll
	var useJSScroller=type === 'js' || (type === 'auto' && ($.os.android && compareVersion('4.4.0',$.os.version) > -1) || $.os.ios && compareVersion('6.0.0',$.os.version) > -1);if(useJSScroller){var $pageContentInner=$pageContent.find('.content-inner'); //如果滚动内容没有被包裹，自动添加wrap
	if(!$pageContentInner[0]){ // $pageContent.html('<div class="content-inner">' + $pageContent.html() + '</div>');
	var children=$pageContent.children();if(children.length < 1){$pageContent.children().wrapAll('<div class="content-inner"></div>');}else {$pageContent.html('<div class="content-inner">' + $pageContent.html() + '</div>');}}if($pageContent.hasClass('pull-to-refresh-content')){ //因为iscroll 当页面高度不足 100% 时无法滑动，所以无法触发下拉动作，这里改动一下高度
	$pageContent.find('.content-inner').css('min-height',$(window).height() + 20 + 'px');}var ptr=$(pageContent).hasClass('pull-to-refresh-content');var options={probeType:1,mouseWheel:true};if(ptr){options.ptr = true;options.ptrOffset = 44;}this.scroller = new IScroll(pageContent,options); // jshint ignore:line
	//和native滚动统一起来
	this._bindEventToDomWhenJs();$.initPullToRefresh = $._pullToRefreshJSScroll.initPullToRefresh;$.pullToRefreshDone = $._pullToRefreshJSScroll.pullToRefreshDone;$.pullToRefreshTrigger = $._pullToRefreshJSScroll.pullToRefreshTrigger;$.destroyToRefresh = $._pullToRefreshJSScroll.destroyToRefresh;$pageContent.addClass('javascript-scroll'); //如果页面本身已经进行了原生滚动，那么把这个滚动换成JS的滚动
	var nativeScrollTop=this.$pageContent[0].scrollTop;if(nativeScrollTop){this.$pageContent[0].scrollTop = 0;this.scrollTop(nativeScrollTop);}}else {$pageContent.addClass('native-scroll');}};Scroller.prototype = {_defaults:{type:'native'},_bindEventToDomWhenJs:function _bindEventToDomWhenJs(){ //"scrollStart", //the scroll started.
	//"scroll", //the content is scrolling. Available only in scroll-probe.js edition. See onScroll event.
	//"scrollEnd", //content stopped scrolling.
	if(this.scroller){var self=this;this.scroller.on('scrollStart',function(){self.$pageContent.trigger('scrollstart');});this.scroller.on('scroll',function(){self.$pageContent.trigger('scroll');});this.scroller.on('scrollEnd',function(){self.$pageContent.trigger('scrollend');});}else { //TODO: 实现native的scrollStart和scrollEnd
	}},scrollTop:function scrollTop(top,dur){if(this.scroller){if(top !== undefined){this.scroller.scrollTo(0,-1 * top,dur);}else {return this.scroller.getComputedPosition().y * -1;}}else {return this.$pageContent.scrollTop(top,dur);}return this;},scrollLeft:function scrollLeft(left,dur){if(this.scroller){if(left !== undefined){this.scroller.scrollTo(-1 * left,0);}else {return this.scroller.getComputedPosition().x * -1;}}else {return this.$pageContent.scrollTop(left,dur);}return this;},on:function on(event,callback){if(this.scroller){this.scroller.on(event,function(){callback.call(this.wrapper);});}else {this.$pageContent.on(event,callback);}return this;},off:function off(event,callback){if(this.scroller){this.scroller.off(event,callback);}else {this.$pageContent.off(event,callback);}return this;},refresh:function refresh(){if(this.scroller)this.scroller.refresh();return this;},scrollHeight:function scrollHeight(){if(this.scroller){return this.scroller.scrollerHeight;}else {return this.$pageContent[0].scrollHeight;}}}; //Scroller PLUGIN DEFINITION
	// =======================
	function Plugin(option){var args=Array.apply(null,arguments);args.shift();var internal_return;this.each(function(){var $this=$(this);var options=$.extend({},$this.dataset(),typeof option === 'object' && option);var data=$this.data('scroller'); //如果 scroller 没有被初始化，对scroller 进行初始化r
	if(!data){ //获取data-api的
	$this.data('scroller',data = new Scroller(this,options));}if(typeof option === 'string' && typeof data[option] === 'function'){internal_return = data[option].apply(data,args);if(internal_return !== undefined)return false;}});if(internal_return !== undefined)return internal_return;else return this;}var old=$.fn.scroller;$.fn.scroller = Plugin;$.fn.scroller.Constructor = Scroller; // Scroll NO CONFLICT
	// =================
	$.fn.scroller.noConflict = function(){$.fn.scroller = old;return this;}; //添加data-api
	$(function(){$('[data-toggle="scroller"]').scroller();}); //统一的接口,带有 .javascript-scroll 的content 进行刷新
	$.refreshScroller = function(content){if(content){$(content).scroller('refresh');}else {$('.javascript-scroll').each(function(){$(this).scroller('refresh');});}}; //全局初始化方法，会对页面上的 [data-toggle="scroller"]，.content. 进行滚动条初始化
	$.initScroller = function(option){this.options = $.extend({},typeof option === 'object' && option);$('[data-toggle="scroller"],.content').scroller(option);}; //获取scroller对象
	$.getScroller = function(content){if(content){return $(content).data('scroller');}else {return $('.content.javascript-scroll').data('scroller');}}; //检测滚动类型,
	//‘js’: javascript 滚动条
	//‘native’: 原生滚动条
	$.detectScrollerType = function(content){if(content){if($(content).data('scroller') && $(content).data('scroller').scroller){return 'js';}else {return 'native';}}};})(Zepto);+(function($){"use strict"; //这里实在js滚动时使用的下拉刷新代码。
	var refreshTime=0;var initPullToRefreshJS=function initPullToRefreshJS(pageContainer){var eventsTarget=$(pageContainer);if(!eventsTarget.hasClass('pull-to-refresh-content')){eventsTarget = eventsTarget.find('.pull-to-refresh-content');}if(!eventsTarget || eventsTarget.length === 0)return;var page=eventsTarget.hasClass('content')?eventsTarget:eventsTarget.parents('.content');var scroller=$.getScroller(page[0]);if(!scroller)return;var container=eventsTarget;function handleScroll(){if(container.hasClass('refreshing'))return;if(scroller.scrollTop() * -1 >= 44){container.removeClass('pull-down').addClass('pull-up');}else {container.removeClass('pull-up').addClass('pull-down');}}function handleRefresh(){if(container.hasClass('refreshing'))return;container.removeClass('pull-down pull-up');container.addClass('refreshing transitioning');container.trigger('refresh',{done:function done(){$.pullToRefreshDone(container);}});refreshTime = +new Date();}scroller.on('scroll',handleScroll);scroller.scroller.on('ptr',handleRefresh); // Detach Events on page remove
	function destroyPullToRefresh(){scroller.off('scroll',handleScroll);scroller.scroller.off('ptr',handleRefresh);}eventsTarget[0].destroyPullToRefresh = destroyPullToRefresh;};var pullToRefreshDoneJS=function pullToRefreshDoneJS(container){container = $(container);if(container.length === 0)container = $('.pull-to-refresh-content.refreshing');if(container.length === 0)return;var interval=+new Date() - refreshTime;var timeOut=interval > 1000?0:1000 - interval; //long than bounce time
	var scroller=$.getScroller(container);setTimeout(function(){scroller.refresh();container.removeClass('refreshing');container.transitionEnd(function(){container.removeClass("transitioning");});},timeOut);};var pullToRefreshTriggerJS=function pullToRefreshTriggerJS(container){container = $(container);if(container.length === 0)container = $('.pull-to-refresh-content');if(container.hasClass('refreshing'))return;container.addClass('refreshing');var scroller=$.getScroller(container);scroller.scrollTop(44 + 1,200);container.trigger('refresh',{done:function done(){$.pullToRefreshDone(container);}});};var destroyPullToRefreshJS=function destroyPullToRefreshJS(pageContainer){pageContainer = $(pageContainer);var pullToRefreshContent=pageContainer.hasClass('pull-to-refresh-content')?pageContainer:pageContainer.find('.pull-to-refresh-content');if(pullToRefreshContent.length === 0)return;if(pullToRefreshContent[0].destroyPullToRefresh)pullToRefreshContent[0].destroyPullToRefresh();};$._pullToRefreshJSScroll = {"initPullToRefresh":initPullToRefreshJS,"pullToRefreshDone":pullToRefreshDoneJS,"pullToRefreshTrigger":pullToRefreshTriggerJS,"destroyPullToRefresh":destroyPullToRefreshJS};})(Zepto); // jshint ignore:line
	+(function($){'use strict';$.initPullToRefresh = function(pageContainer){var eventsTarget=$(pageContainer);if(!eventsTarget.hasClass('pull-to-refresh-content')){eventsTarget = eventsTarget.find('.pull-to-refresh-content');}if(!eventsTarget || eventsTarget.length === 0)return;var isTouched,isMoved,touchesStart={},isScrolling,touchesDiff,touchStartTime,container,refresh=false,useTranslate=false,startTranslate=0,translate,scrollTop,wasScrolled,triggerDistance,dynamicTriggerDistance;container = eventsTarget; // Define trigger distance
	if(container.attr('data-ptr-distance')){dynamicTriggerDistance = true;}else {triggerDistance = 44;}function handleTouchStart(e){if(isTouched){if($.os.android){if('targetTouches' in e && e.targetTouches.length > 1)return;}else return;}isMoved = false;isTouched = true;isScrolling = undefined;wasScrolled = undefined;touchesStart.x = e.type === 'touchstart'?e.targetTouches[0].pageX:e.pageX;touchesStart.y = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;touchStartTime = new Date().getTime(); /*jshint validthis:true */container = $(this);}function handleTouchMove(e){if(!isTouched)return;var pageX=e.type === 'touchmove'?e.targetTouches[0].pageX:e.pageX;var pageY=e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(typeof isScrolling === 'undefined'){isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));}if(!isScrolling){isTouched = false;return;}scrollTop = container[0].scrollTop;if(typeof wasScrolled === 'undefined' && scrollTop !== 0)wasScrolled = true;if(!isMoved){ /*jshint validthis:true */container.removeClass('transitioning');if(scrollTop > container[0].offsetHeight){isTouched = false;return;}if(dynamicTriggerDistance){triggerDistance = container.attr('data-ptr-distance');if(triggerDistance.indexOf('%') >= 0)triggerDistance = container[0].offsetHeight * parseInt(triggerDistance,10) / 100;}startTranslate = container.hasClass('refreshing')?triggerDistance:0;if(container[0].scrollHeight === container[0].offsetHeight || !$.os.ios){useTranslate = true;}else {useTranslate = false;}useTranslate = true;}isMoved = true;touchesDiff = pageY - touchesStart.y;if(touchesDiff > 0 && scrollTop <= 0 || scrollTop < 0){ // iOS 8 fix
	if($.os.ios && parseInt($.os.version.split('.')[0],10) > 7 && scrollTop === 0 && !wasScrolled)useTranslate = true;if(useTranslate){e.preventDefault();translate = Math.pow(touchesDiff,0.85) + startTranslate;container.transform('translate3d(0,' + translate + 'px,0)');}else {}if(useTranslate && Math.pow(touchesDiff,0.85) > triggerDistance || !useTranslate && touchesDiff >= triggerDistance * 2){refresh = true;container.addClass('pull-up').removeClass('pull-down');}else {refresh = false;container.removeClass('pull-up').addClass('pull-down');}}else {container.removeClass('pull-up pull-down');refresh = false;return;}}function handleTouchEnd(){if(!isTouched || !isMoved){isTouched = false;isMoved = false;return;}if(translate){container.addClass('transitioning');translate = 0;}container.transform('');if(refresh){container.addClass('refreshing');container.trigger('refresh',{done:function done(){$.pullToRefreshDone(container);}});}else {container.removeClass('pull-down');}isTouched = false;isMoved = false;} // Attach Events
	eventsTarget.on($.touchEvents.start,handleTouchStart);eventsTarget.on($.touchEvents.move,handleTouchMove);eventsTarget.on($.touchEvents.end,handleTouchEnd);function destroyPullToRefresh(){eventsTarget.off($.touchEvents.start,handleTouchStart);eventsTarget.off($.touchEvents.move,handleTouchMove);eventsTarget.off($.touchEvents.end,handleTouchEnd);}eventsTarget[0].destroyPullToRefresh = destroyPullToRefresh;};$.pullToRefreshDone = function(container){container = $(container);if(container.length === 0)container = $('.pull-to-refresh-content.refreshing');container.removeClass('refreshing').addClass('transitioning');container.transitionEnd(function(){container.removeClass('transitioning pull-up pull-down');});};$.pullToRefreshTrigger = function(container){container = $(container);if(container.length === 0)container = $('.pull-to-refresh-content');if(container.hasClass('refreshing'))return;container.addClass('transitioning refreshing');container.trigger('refresh',{done:function done(){$.pullToRefreshDone(container);}});};$.destroyPullToRefresh = function(pageContainer){pageContainer = $(pageContainer);var pullToRefreshContent=pageContainer.hasClass('pull-to-refresh-content')?pageContainer:pageContainer.find('.pull-to-refresh-content');if(pullToRefreshContent.length === 0)return;if(pullToRefreshContent[0].destroyPullToRefresh)pullToRefreshContent[0].destroyPullToRefresh();}; //这里是否需要写到 scroller 中去？
	/*    $.initPullToRefresh = function(pageContainer) {
	        var $pageContainer = $(pageContainer);
	        $pageContainer.each(function(index, item) {
	            if ($.detectScrollerType(item) === 'js') {
	                $._pullToRefreshJSScroll.initPullToRefresh(item);
	            } else {
	                initPullToRefresh(item);
	            }
	        });
	    };
	
	
	    $.pullToRefreshDone = function(pageContainer) {
	        var $pageContainer = $(pageContainer);
	        $pageContainer.each(function(index, item) {
	            if ($.detectScrollerType(item) === 'js') {
	                $._pullToRefreshJSScroll.pullToRefreshDone(item);
	            } else {
	                pullToRefreshDone(item);
	            }
	        });
	    };
	
	
	    $.pullToRefreshTrigger = function(pageContainer) {
	       var $pageContainer = $(pageContainer);
	        $pageContainer.each(function(index, item) {
	            if ($.detectScrollerType(item) === 'js') {
	                $._pullToRefreshJSScroll.pullToRefreshTrigger(item);
	            } else {
	                pullToRefreshTrigger(item);
	            }
	        });
	    };
	
	    $.destroyPullToRefresh = function(pageContainer) {
	        var $pageContainer = $(pageContainer);
	        $pageContainer.each(function(index, item) {
	            if ($.detectScrollerType(item) === 'js') {
	                $._pullToRefreshJSScroll.destroyPullToRefresh(item);
	            } else {
	                destroyPullToRefresh(item);
	            }
	        });
	    };
	*/})(Zepto); //jshint ignore:line
	+(function($){'use strict'; /* global Zepto:true */function handleInfiniteScroll(){ /*jshint validthis:true */var inf=$(this);var scroller=$.getScroller(inf);var scrollTop=scroller.scrollTop();var scrollHeight=scroller.scrollHeight();var height=inf[0].offsetHeight;var distance=inf[0].getAttribute('data-distance');var virtualListContainer=inf.find('.virtual-list');var virtualList;var onTop=inf.hasClass('infinite-scroll-top');if(!distance)distance = 50;if(typeof distance === 'string' && distance.indexOf('%') >= 0){distance = parseInt(distance,10) / 100 * height;}if(distance > height)distance = height;if(onTop){if(scrollTop < distance){inf.trigger('infinite');}}else {if(scrollTop + height >= scrollHeight - distance){if(virtualListContainer.length > 0){virtualList = virtualListContainer[0].f7VirtualList;if(virtualList && !virtualList.reachEnd)return;}inf.trigger('infinite');}}}$.attachInfiniteScroll = function(infiniteContent){$.getScroller(infiniteContent).on('scroll',handleInfiniteScroll);};$.detachInfiniteScroll = function(infiniteContent){$.getScroller(infiniteContent).off('scroll',handleInfiniteScroll);};$.initInfiniteScroll = function(pageContainer){pageContainer = $(pageContainer);var infiniteContent=pageContainer.hasClass('infinite-scroll')?pageContainer:pageContainer.find('.infinite-scroll');if(infiniteContent.length === 0)return;$.attachInfiniteScroll(infiniteContent);function detachEvents(){$.detachInfiniteScroll(infiniteContent);pageContainer.off('pageBeforeRemove',detachEvents);}pageContainer.on('pageBeforeRemove',detachEvents);};})(Zepto); /* global Zepto:true */+(function($){"use strict";$(function(){$(document).on("focus",".searchbar input",function(e){var $input=$(e.target);$input.parents(".searchbar").addClass("searchbar-active");});$(document).on("click",".searchbar-cancel",function(e){var $btn=$(e.target);$btn.parents(".searchbar").removeClass("searchbar-active");});$(document).on("blur",".searchbar input",function(e){var $input=$(e.target);$input.parents(".searchbar").removeClass("searchbar-active");});});})(Zepto); /*======================================================
	************   Panels   ************
	======================================================*/ /* global Zepto:true */ /*jshint unused: false*/+(function($){"use strict";$.allowPanelOpen = true;$.openPanel = function(panel){if(!$.allowPanelOpen)return false;if(panel === 'left' || panel === 'right')panel = ".panel-" + panel; //可以传入一个方向
	panel = panel?$(panel):$(".panel").eq(0);var direction=panel.hasClass("panel-right")?"right":"left";if(panel.length === 0 || panel.hasClass('active'))return false;$.closePanel(); // Close if some panel is opened
	$.allowPanelOpen = false;var effect=panel.hasClass('panel-reveal')?'reveal':'cover';panel.css({display:'block'}).addClass('active');panel.trigger('open'); // Trigger reLayout
	var clientLeft=panel[0].clientLeft; // Transition End;
	var transitionEndTarget=effect === 'reveal'?$($.getCurrentPage()):panel;var openedTriggered=false;function panelTransitionEnd(){transitionEndTarget.transitionEnd(function(e){if(e.target === transitionEndTarget[0]){if(panel.hasClass('active')){panel.trigger('opened');}else {panel.trigger('closed');}$.allowPanelOpen = true;}else panelTransitionEnd();});}panelTransitionEnd();$(document.body).addClass('with-panel-' + direction + '-' + effect);return true;};$.closePanel = function(){var activePanel=$('.panel.active');if(activePanel.length === 0)return false;var effect=activePanel.hasClass('panel-reveal')?'reveal':'cover';var panelPosition=activePanel.hasClass('panel-left')?'left':'right';activePanel.removeClass('active');var transitionEndTarget=effect === 'reveal'?$('.page'):activePanel;activePanel.trigger('close');$.allowPanelOpen = false;transitionEndTarget.transitionEnd(function(){if(activePanel.hasClass('active'))return;activePanel.css({display:''});activePanel.trigger('closed');$('body').removeClass('panel-closing');$.allowPanelOpen = true;});$('body').addClass('panel-closing').removeClass('with-panel-' + panelPosition + '-' + effect);};$(document).on("click",".open-panel",function(e){var panel=$(e.target).data(panel);$.openPanel(panel);});$(document).on("click",".close-panel, .panel-overlay",function(e){$.closePanel();}); /*======================================================
	  ************   Swipe panels   ************
	  ======================================================*/$.initSwipePanels = function(){var panel,side;var swipePanel=$.smConfig.swipePanel;var swipePanelOnlyClose=$.smConfig.swipePanelOnlyClose;var swipePanelCloseOpposite=true;var swipePanelActiveArea=false;var swipePanelThreshold=2;var swipePanelNoFollow=false;if(!(swipePanel || swipePanelOnlyClose))return;var panelOverlay=$('.panel-overlay');var isTouched,isMoved,isScrolling,touchesStart={},touchStartTime,touchesDiff,translate,opened,panelWidth,effect,direction;var views=$('.page');function handleTouchStart(e){if(!$.allowPanelOpen || !swipePanel && !swipePanelOnlyClose || isTouched)return;if($('.modal-in, .photo-browser-in').length > 0)return;if(!(swipePanelCloseOpposite || swipePanelOnlyClose)){if($('.panel.active').length > 0 && !panel.hasClass('active'))return;}touchesStart.x = e.type === 'touchstart'?e.targetTouches[0].pageX:e.pageX;touchesStart.y = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;if(swipePanelCloseOpposite || swipePanelOnlyClose){if($('.panel.active').length > 0){side = $('.panel.active').hasClass('panel-left')?'left':'right';}else {if(swipePanelOnlyClose)return;side = swipePanel;}if(!side)return;}panel = $('.panel.panel-' + side);if(!panel[0])return;opened = panel.hasClass('active');if(swipePanelActiveArea && !opened){if(side === 'left'){if(touchesStart.x > swipePanelActiveArea)return;}if(side === 'right'){if(touchesStart.x < window.innerWidth - swipePanelActiveArea)return;}}isMoved = false;isTouched = true;isScrolling = undefined;touchStartTime = new Date().getTime();direction = undefined;}function handleTouchMove(e){if(!isTouched)return;if(!panel[0])return;if(e.f7PreventPanelSwipe)return;var pageX=e.type === 'touchmove'?e.targetTouches[0].pageX:e.pageX;var pageY=e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(typeof isScrolling === 'undefined'){isScrolling = !!(isScrolling || Math.abs(pageY - touchesStart.y) > Math.abs(pageX - touchesStart.x));}if(isScrolling){isTouched = false;return;}if(!direction){if(pageX > touchesStart.x){direction = 'to-right';}else {direction = 'to-left';}if(side === 'left' && (direction === 'to-left' && !panel.hasClass('active')) || side === 'right' && (direction === 'to-right' && !panel.hasClass('active'))){isTouched = false;return;}}if(swipePanelNoFollow){var timeDiff=new Date().getTime() - touchStartTime;if(timeDiff < 300){if(direction === 'to-left'){if(side === 'right')$.openPanel(side);if(side === 'left' && panel.hasClass('active'))$.closePanel();}if(direction === 'to-right'){if(side === 'left')$.openPanel(side);if(side === 'right' && panel.hasClass('active'))$.closePanel();}}isTouched = false;console.log(3);isMoved = false;return;}if(!isMoved){effect = panel.hasClass('panel-cover')?'cover':'reveal';if(!opened){panel.show();panelOverlay.show();}panelWidth = panel[0].offsetWidth;panel.transition(0); /*
	              if (panel.find('.' + app.params.viewClass).length > 0) {
	                  if (app.sizeNavbars) app.sizeNavbars(panel.find('.' + app.params.viewClass)[0]);
	              }
	              */}isMoved = true;e.preventDefault();var threshold=opened?0:-swipePanelThreshold;if(side === 'right')threshold = -threshold;touchesDiff = pageX - touchesStart.x + threshold;if(side === 'right'){translate = touchesDiff - (opened?panelWidth:0);if(translate > 0)translate = 0;if(translate < -panelWidth){translate = -panelWidth;}}else {translate = touchesDiff + (opened?panelWidth:0);if(translate < 0)translate = 0;if(translate > panelWidth){translate = panelWidth;}}if(effect === 'reveal'){views.transform('translate3d(' + translate + 'px,0,0)').transition(0);panelOverlay.transform('translate3d(' + translate + 'px,0,0)'); //app.pluginHook('swipePanelSetTransform', views[0], panel[0], Math.abs(translate / panelWidth));
	}else {panel.transform('translate3d(' + translate + 'px,0,0)').transition(0); //app.pluginHook('swipePanelSetTransform', views[0], panel[0], Math.abs(translate / panelWidth));
	}}function handleTouchEnd(e){if(!isTouched || !isMoved){isTouched = false;isMoved = false;return;}isTouched = false;isMoved = false;var timeDiff=new Date().getTime() - touchStartTime;var action;var edge=translate === 0 || Math.abs(translate) === panelWidth;if(!opened){if(translate === 0){action = 'reset';}else if(timeDiff < 300 && Math.abs(translate) > 0 || timeDiff >= 300 && Math.abs(translate) >= panelWidth / 2){action = 'swap';}else {action = 'reset';}}else {if(translate === -panelWidth){action = 'reset';}else if(timeDiff < 300 && Math.abs(translate) >= 0 || timeDiff >= 300 && Math.abs(translate) <= panelWidth / 2){if(side === 'left' && translate === panelWidth)action = 'reset';else action = 'swap';}else {action = 'reset';}}if(action === 'swap'){$.allowPanelOpen = true;if(opened){$.closePanel();if(edge){panel.css({display:''});$('body').removeClass('panel-closing');}}else {$.openPanel(side);}if(edge)$.allowPanelOpen = true;}if(action === 'reset'){if(opened){$.allowPanelOpen = true;$.openPanel(side);}else {$.closePanel();if(edge){$.allowPanelOpen = true;panel.css({display:''});}else {var target=effect === 'reveal'?views:panel;$('body').addClass('panel-closing');target.transitionEnd(function(){$.allowPanelOpen = true;panel.css({display:''});$('body').removeClass('panel-closing');});}}}if(effect === 'reveal'){views.transition('');views.transform('');}panel.transition('').transform('');panelOverlay.css({display:''}).transform('');}$(document).on($.touchEvents.start,handleTouchStart);$(document).on($.touchEvents.move,handleTouchMove);$(document).on($.touchEvents.end,handleTouchEnd);};$.initSwipePanels();})(Zepto); // jshint ignore: start
	/*
	 * 路由器
	 */+(function($){"use strict";if(!window.CustomEvent){window.CustomEvent = function(type,config){var e=document.createEvent('CustomEvent');e.initCustomEvent(type,config.bubbles,config.cancelable,config.detail,config.id);return e;};}var Router=function Router(){this.state = sessionStorage;this.state.setItem("stateid",parseInt(this.state.getItem("stateid") || 1) + 1);this.state.setItem("currentStateID",this.state.getItem("stateid"));this.stack = sessionStorage;this.stack.setItem("back","[]"); //返回栈, {url, pageid, stateid}
	this.stack.setItem("forward","[]"); //前进栈, {url, pageid, stateid}
	this.init();this.xhr = null;};Router.prototype.defaults = {};Router.prototype.init = function(){var currentPage=this.getCurrentPage();if(!currentPage[0])currentPage = $(".page").eq(0).addClass("page-current");var hash=location.hash;if(currentPage[0] && !currentPage[0].id)currentPage[0].id = hash?hash.slice(1):this.genRandomID();if(!currentPage[0])throw new Error("can't find .page element");var newCurrentPage=$(hash);if(newCurrentPage[0] && (!currentPage[0] || hash.slice(1) !== currentPage[0].id)){currentPage.removeClass("page-current");newCurrentPage.addClass("page-current");currentPage = newCurrentPage;} //第一次打开的时候需要pushstate，不这么做，刷新之后第一次加载新页面会无法后退
	var state=history.state;if(!state){var id=this.genStateID();this.pushState(location.href,id);this.pushBack({url:location.href,pageid:currentPage[0].id,id:id});this.setCurrentStateID(id);}window.addEventListener('popstate',$.proxy(this.onpopstate,this));}; //加载一个页面,传入的参数是页面id或者url
	Router.prototype.loadPage = function(url){this.getPage(url,function(page){var pageid=this.getCurrentPage()[0].id;this.pushBack({url:url,pageid:"#" + pageid,id:this.getCurrentStateID()}); //删除全部forward
	var forward=JSON.parse(this.state.getItem("forward") || "[]");for(var i=0;i < forward.length;i++) {$(forward[i].pageid).each(function(){var $page=$(this);if($page.data("page-remote"))$page.remove();});;}this.state.setItem("forward","[]"); //clearforward
	page.insertAfter($(".page")[0]);this.animatePages(this.getCurrentPage(),page);var id=this.genStateID();this.setCurrentStateID(id);this.pushState(url,id);this.forwardStack = []; //clear forward stack
	});};Router.prototype.animatePages = function(leftPage,rightPage,leftToRight){var removeClasses='page-left page-right page-current page-from-center-to-left page-from-center-to-right page-from-right-to-center page-from-left-to-center';var self=this;if(!leftToRight){rightPage.trigger("pageAnimationStart",[rightPage[0].id,rightPage]);leftPage.removeClass(removeClasses).addClass('page-from-center-to-left');rightPage.removeClass(removeClasses).addClass('page-from-right-to-center');leftPage.animationEnd(function(){leftPage.removeClass(removeClasses);});rightPage.animationEnd(function(){rightPage.removeClass(removeClasses).addClass("page-current");rightPage.trigger("pageAnimationEnd",[rightPage[0].id,rightPage]);rightPage.trigger("pageInitInternal",[rightPage[0].id,rightPage]);});}else {leftPage.trigger("pageAnimationStart",[rightPage[0].id,rightPage]);leftPage.removeClass(removeClasses).addClass('page-from-left-to-center');rightPage.removeClass(removeClasses).addClass('page-from-center-to-right');leftPage.animationEnd(function(){leftPage.removeClass(removeClasses).addClass("page-current");leftPage.trigger("pageAnimationEnd",[leftPage[0].id,leftPage]);leftPage.trigger("pageReinit",[leftPage[0].id,leftPage]);});rightPage.animationEnd(function(){rightPage.removeClass(removeClasses);});}};Router.prototype.getCurrentPage = function(){return $(".page-current");}; //如果无法前进，则加载对应的url
	Router.prototype.forward = function(url){var stack=JSON.parse(this.stack.getItem("forward"));if(stack.length){history.forward();}else {location.href = url;}}; //如果无法后退，则加载对应的url
	Router.prototype.back = function(url){var stack=JSON.parse(this.stack.getItem("back"));if(stack.length){history.back();}else {location.href = url;}}; //后退
	Router.prototype._back = function(){var h=this.popBack();var currentPage=this.getCurrentPage();var newPage=$(h.pageid);if(!newPage[0])return;this.pushForward({url:location.href,pageid:"#" + currentPage[0].id,id:this.getCurrentStateID()});this.animatePages(newPage,currentPage,true);this.setCurrentStateID(h.id);}; //前进
	Router.prototype._forward = function(){var h=this.popForward();var currentPage=this.getCurrentPage();var newPage=$(h.pageid);if(!newPage[0])return;this.pushBack({url:location.href,pageid:"#" + currentPage[0].id,id:this.getCurrentStateID()});this.animatePages(currentPage,newPage);this.setCurrentStateID(h.id);};Router.prototype.pushState = function(url,id){history.pushState({url:url,id:id},'',url);};Router.prototype.onpopstate = function(d){var state=d.state;if(!state){ //刷新再后退导致无法取到state
	return;}if(state.id === this.getCurrentStateID()){return false;}var forward=state.id > this.getCurrentStateID();if(forward)this._forward();else this._back();}; //根据url获取页面的DOM，如果是一个内联页面，则直接返回，否则用ajax加载
	Router.prototype.getPage = function(url,callback){if(url[0] === "#")return callback.apply(this,[$(url)]);this.dispatch("pageLoadStart");if(this.xhr && this.xhr.readyState < 4){xhr.onreadystatechange = noop;xhr.abort();this.dispatch("pageLoadCancel");}var self=this;this.xhr = $.ajax({url:url,success:$.proxy(function(data,s,xhr){var $page=this.parseXHR(xhr);if(!$page[0].id)$page[0].id = this.genRandomID();$page.data("page-remote",1);callback.apply(this,[$page]);},this),error:function error(){self.dispatch("pageLoadError");},complete:function complete(){self.dispatch("pageLoadComplete");}});};Router.prototype.parseXHR = function(xhr){var response=xhr.responseText;var html=response.match(/<body[^>]*>([\s\S.]*)<\/body>/i)[1];if(!html)html = response;html = "<div>" + html + "</div>";var tmp=$(html);tmp.find(".popup, .panel, .panel-overlay").appendTo(document.body);var $page=tmp.find(".page");if(!$page[0])$page = tmp.addClass("page");return $page;};Router.prototype.genStateID = function(){var id=parseInt(this.state.getItem("stateid")) + 1;this.state.setItem("stateid",id);return id;};Router.prototype.getCurrentStateID = function(){return parseInt(this.state.getItem("currentStateID"));};Router.prototype.setCurrentStateID = function(id){this.state.setItem("currentStateID",id);};Router.prototype.genRandomID = function(){return "page-" + +new Date();};Router.prototype.popBack = function(){var stack=JSON.parse(this.stack.getItem("back"));if(!stack.length)return null;var h=stack.splice(stack.length - 1,1)[0];this.stack.setItem("back",JSON.stringify(stack));return h;};Router.prototype.pushBack = function(h){var stack=JSON.parse(this.stack.getItem("back"));stack.push(h);this.stack.setItem("back",JSON.stringify(stack));};Router.prototype.popForward = function(){var stack=JSON.parse(this.stack.getItem("forward"));if(!stack.length)return null;var h=stack.splice(stack.length - 1,1)[0];this.stack.setItem("forward",JSON.stringify(stack));return h;};Router.prototype.pushForward = function(h){var stack=JSON.parse(this.stack.getItem("forward"));stack.push(h);this.stack.setItem("forward",JSON.stringify(stack));};Router.prototype.dispatch = function(event){var e=new CustomEvent(event,{bubbles:true,cancelable:true});window.dispatchEvent(e);};$(function(){var router=$.router = new Router();$(document).on("click","a",function(e){var $target=$(e.currentTarget);if($target.hasClass("external") || $target[0].hasAttribute("external") || $target.hasClass("tab-link") || $target.hasClass("open-popup") || $target.hasClass("open-panel"))return;e.preventDefault();var url=$target.attr("href");if($target.hasClass("back")){router.back(url);return;}if(!url || url === "#")return;router.loadPage(url);});});})(Zepto); // jshint ignore: end
	/* global Zepto:true */ /*jshint unused: false*/+(function($){"use strict";var getPage=function getPage(){var $page=$(".page-current");if(!$page[0])$page = $(".page").addClass("page-current");return $page;}; //初始化页面中的JS组件
	$.initPage = function(page){var $page=getPage();if(!$page[0])$page = $(document.body);var $content=$page.hasClass("content")?$page:$page.find(".content");$content.scroller(); //注意滚动条一定要最先初始化
	$.initPullToRefresh($content);$.initInfiniteScroll($content);$.initCalendar($content); //extend
	if($.initSwiper)$.initSwiper($content);};if($.smConfig.showPageLoadingIndicator){ //这里的 以 push 开头的是私有事件，不要用
	$(window).on("pageLoadStart",function(){$.showIndicator();});$(document).on("pageAnimationStart",function(){$.hideIndicator();});$(window).on("pageLoadCancel",function(){$.hideIndicator();});$(window).on("pageLoadError",function(){$.hideIndicator();$.toast("加载失败");});}$.init = function(){var $page=getPage();var id=$page[0].id;$.initPage();$page.trigger("pageInit",[id,$page]);};$(function(){if($.smConfig.autoInit){$.init();}$(document).on("pageInitInternal",function(e,id,page){$.init();});});})(Zepto); /* global Zepto:true */

/***/ },
/* 4 */
/***/ function(module, exports) {

	/*!
	 * =====================================================
	 * SUI Mobile - http://m.sui.taobao.org/
	 *
	 * =====================================================
	 */ /*===========================
	Swiper
	===========================*/ /* global Zepto:true */ /* global WebKitCSSMatrix:true */ /* global Modernizr:true */'use strict';+(function($){"use strict";var Swiper=function Swiper(container,params){ // if (!(this instanceof Swiper)) return new Swiper(container, params);
	var defaults=this.defaults;var initalVirtualTranslate=params && params.virtualTranslate;params = params || {};for(var def in defaults) {if(typeof params[def] === 'undefined'){params[def] = defaults[def];}else if(typeof params[def] === 'object'){for(var deepDef in defaults[def]) {if(typeof params[def][deepDef] === 'undefined'){params[def][deepDef] = defaults[def][deepDef];}}}} // Swiper
	var s=this; // Params
	s.params = params; // Classname
	s.classNames = []; // Export it to Swiper instance
	s.$ = $; /*=========================
	          Preparation - Define Container, Wrapper and Pagination
	          ===========================*/s.container = $(container);if(s.container.length === 0)return;if(s.container.length > 1){s.container.each(function(){new $.Swiper(this,params);});return;} // Save instance in container HTML Element and in data
	s.container[0].swiper = s;s.container.data('swiper',s);s.classNames.push('swiper-container-' + s.params.direction);if(s.params.freeMode){s.classNames.push('swiper-container-free-mode');}if(!s.support.flexbox){s.classNames.push('swiper-container-no-flexbox');s.params.slidesPerColumn = 1;} // Enable slides progress when required
	if(s.params.parallax || s.params.watchSlidesVisibility){s.params.watchSlidesProgress = true;} // Coverflow / 3D
	if(['cube','coverflow'].indexOf(s.params.effect) >= 0){if(s.support.transforms3d){s.params.watchSlidesProgress = true;s.classNames.push('swiper-container-3d');}else {s.params.effect = 'slide';}}if(s.params.effect !== 'slide'){s.classNames.push('swiper-container-' + s.params.effect);}if(s.params.effect === 'cube'){s.params.resistanceRatio = 0;s.params.slidesPerView = 1;s.params.slidesPerColumn = 1;s.params.slidesPerGroup = 1;s.params.centeredSlides = false;s.params.spaceBetween = 0;s.params.virtualTranslate = true;s.params.setWrapperSize = false;}if(s.params.effect === 'fade'){s.params.slidesPerView = 1;s.params.slidesPerColumn = 1;s.params.slidesPerGroup = 1;s.params.watchSlidesProgress = true;s.params.spaceBetween = 0;if(typeof initalVirtualTranslate === 'undefined'){s.params.virtualTranslate = true;}} // Grab Cursor
	if(s.params.grabCursor && s.support.touch){s.params.grabCursor = false;} // Wrapper
	s.wrapper = s.container.children('.' + s.params.wrapperClass); // Pagination
	if(s.params.pagination){s.paginationContainer = $(s.params.pagination);if(s.params.paginationClickable){s.paginationContainer.addClass('swiper-pagination-clickable');}} // Is Horizontal
	function isH(){return s.params.direction === 'horizontal';} // RTL
	s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');if(s.rtl){s.classNames.push('swiper-container-rtl');} // Wrong RTL support
	if(s.rtl){s.wrongRTL = s.wrapper.css('display') === '-webkit-box';} // Columns
	if(s.params.slidesPerColumn > 1){s.classNames.push('swiper-container-multirow');} // Check for Android
	if(s.device.android){s.classNames.push('swiper-container-android');} // Add classes
	s.container.addClass(s.classNames.join(' ')); // Translate
	s.translate = 0; // Progress
	s.progress = 0; // Velocity
	s.velocity = 0; // Locks, unlocks
	s.lockSwipeToNext = function(){s.params.allowSwipeToNext = false;};s.lockSwipeToPrev = function(){s.params.allowSwipeToPrev = false;};s.lockSwipes = function(){s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;};s.unlockSwipeToNext = function(){s.params.allowSwipeToNext = true;};s.unlockSwipeToPrev = function(){s.params.allowSwipeToPrev = true;};s.unlockSwipes = function(){s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;}; /*=========================
	          Set grab cursor
	          ===========================*/if(s.params.grabCursor){s.container[0].style.cursor = 'move';s.container[0].style.cursor = '-webkit-grab';s.container[0].style.cursor = '-moz-grab';s.container[0].style.cursor = 'grab';} /*=========================
	          Update on Images Ready
	          ===========================*/s.imagesToLoad = [];s.imagesLoaded = 0;s.loadImage = function(imgElement,src,checkForComplete,callback){var image;function onReady(){if(callback)callback();}if(!imgElement.complete || !checkForComplete){if(src){image = new Image();image.onload = onReady;image.onerror = onReady;image.src = src;}else {onReady();}}else { //image already loaded...
	onReady();}};s.preloadImages = function(){s.imagesToLoad = s.container.find('img');function _onReady(){if(typeof s === 'undefined' || s === null)return;if(s.imagesLoaded !== undefined)s.imagesLoaded++;if(s.imagesLoaded === s.imagesToLoad.length){if(s.params.updateOnImagesReady)s.update();s.emit('onImagesReady',s);}}for(var i=0;i < s.imagesToLoad.length;i++) {s.loadImage(s.imagesToLoad[i],s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src'),true,_onReady);}}; /*=========================
	          Autoplay
	          ===========================*/s.autoplayTimeoutId = undefined;s.autoplaying = false;s.autoplayPaused = false;function autoplay(){s.autoplayTimeoutId = setTimeout(function(){if(s.params.loop){s.fixLoop();s._slideNext();}else {if(!s.isEnd){s._slideNext();}else {if(!params.autoplayStopOnLast){s._slideTo(0);}else {s.stopAutoplay();}}}},s.params.autoplay);}s.startAutoplay = function(){if(typeof s.autoplayTimeoutId !== 'undefined')return false;if(!s.params.autoplay)return false;if(s.autoplaying)return false;s.autoplaying = true;s.emit('onAutoplayStart',s);autoplay();};s.stopAutoplay = function(){if(!s.autoplayTimeoutId)return;if(s.autoplayTimeoutId)clearTimeout(s.autoplayTimeoutId);s.autoplaying = false;s.autoplayTimeoutId = undefined;s.emit('onAutoplayStop',s);};s.pauseAutoplay = function(speed){if(s.autoplayPaused)return;if(s.autoplayTimeoutId)clearTimeout(s.autoplayTimeoutId);s.autoplayPaused = true;if(speed === 0){s.autoplayPaused = false;autoplay();}else {s.wrapper.transitionEnd(function(){s.autoplayPaused = false;if(!s.autoplaying){s.stopAutoplay();}else {autoplay();}});}}; /*=========================
	          Min/Max Translate
	          ===========================*/s.minTranslate = function(){return -s.snapGrid[0];};s.maxTranslate = function(){return -s.snapGrid[s.snapGrid.length - 1];}; /*=========================
	          Slider/slides sizes
	          ===========================*/s.updateContainerSize = function(){s.width = s.container[0].clientWidth;s.height = s.container[0].clientHeight;s.size = isH()?s.width:s.height;};s.updateSlidesSize = function(){s.slides = s.wrapper.children('.' + s.params.slideClass);s.snapGrid = [];s.slidesGrid = [];s.slidesSizesGrid = [];var spaceBetween=s.params.spaceBetween,slidePosition=0,i,prevSlideSize=0,index=0;if(typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0){spaceBetween = parseFloat(spaceBetween.replace('%','')) / 100 * s.size;}s.virtualSize = -spaceBetween; // reset margins
	if(s.rtl)s.slides.css({marginLeft:'',marginTop:''});else s.slides.css({marginRight:'',marginBottom:''});var slidesNumberEvenToRows;if(s.params.slidesPerColumn > 1){if(Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn){slidesNumberEvenToRows = s.slides.length;}else {slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;}} // Calc slides
	var slideSize;for(i = 0;i < s.slides.length;i++) {slideSize = 0;var slide=s.slides.eq(i);if(s.params.slidesPerColumn > 1){ // Set slides order
	var newSlideOrderIndex;var column,row;var slidesPerColumn=s.params.slidesPerColumn;var slidesPerRow;if(s.params.slidesPerColumnFill === 'column'){column = Math.floor(i / slidesPerColumn);row = i - column * slidesPerColumn;newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;slide.css({'-webkit-box-ordinal-group':newSlideOrderIndex,'-moz-box-ordinal-group':newSlideOrderIndex,'-ms-flex-order':newSlideOrderIndex,'-webkit-order':newSlideOrderIndex,'order':newSlideOrderIndex});}else {slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;row = Math.floor(i / slidesPerRow);column = i - row * slidesPerRow;}slide.css({'margin-top':row !== 0 && s.params.spaceBetween && s.params.spaceBetween + 'px'}).attr('data-swiper-column',column).attr('data-swiper-row',row);}if(slide.css('display') === 'none')continue;if(s.params.slidesPerView === 'auto'){slideSize = isH()?slide.outerWidth(true):slide.outerHeight(true);}else {slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;if(isH()){s.slides[i].style.width = slideSize + 'px';}else {s.slides[i].style.height = slideSize + 'px';}}s.slides[i].swiperSlideSize = slideSize;s.slidesSizesGrid.push(slideSize);if(s.params.centeredSlides){slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;if(i === 0)slidePosition = slidePosition - s.size / 2 - spaceBetween;if(Math.abs(slidePosition) < 1 / 1000)slidePosition = 0;if(index % s.params.slidesPerGroup === 0)s.snapGrid.push(slidePosition);s.slidesGrid.push(slidePosition);}else {if(index % s.params.slidesPerGroup === 0)s.snapGrid.push(slidePosition);s.slidesGrid.push(slidePosition);slidePosition = slidePosition + slideSize + spaceBetween;}s.virtualSize += slideSize + spaceBetween;prevSlideSize = slideSize;index++;}s.virtualSize = Math.max(s.virtualSize,s.size);var newSlidesGrid;if(s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')){s.wrapper.css({width:s.virtualSize + s.params.spaceBetween + 'px'});}if(!s.support.flexbox || s.params.setWrapperSize){if(isH())s.wrapper.css({width:s.virtualSize + s.params.spaceBetween + 'px'});else s.wrapper.css({height:s.virtualSize + s.params.spaceBetween + 'px'});}if(s.params.slidesPerColumn > 1){s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;s.wrapper.css({width:s.virtualSize + s.params.spaceBetween + 'px'});if(s.params.centeredSlides){newSlidesGrid = [];for(i = 0;i < s.snapGrid.length;i++) {if(s.snapGrid[i] < s.virtualSize + s.snapGrid[0])newSlidesGrid.push(s.snapGrid[i]);}s.snapGrid = newSlidesGrid;}} // Remove last grid elements depending on width
	if(!s.params.centeredSlides){newSlidesGrid = [];for(i = 0;i < s.snapGrid.length;i++) {if(s.snapGrid[i] <= s.virtualSize - s.size){newSlidesGrid.push(s.snapGrid[i]);}}s.snapGrid = newSlidesGrid;if(Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])){s.snapGrid.push(s.virtualSize - s.size);}}if(s.snapGrid.length === 0)s.snapGrid = [0];if(s.params.spaceBetween !== 0){if(isH()){if(s.rtl)s.slides.css({marginLeft:spaceBetween + 'px'});else s.slides.css({marginRight:spaceBetween + 'px'});}else s.slides.css({marginBottom:spaceBetween + 'px'});}if(s.params.watchSlidesProgress){s.updateSlidesOffset();}};s.updateSlidesOffset = function(){for(var i=0;i < s.slides.length;i++) {s.slides[i].swiperSlideOffset = isH()?s.slides[i].offsetLeft:s.slides[i].offsetTop;}}; /*=========================
	          Slider/slides progress
	          ===========================*/s.updateSlidesProgress = function(translate){if(typeof translate === 'undefined'){translate = s.translate || 0;}if(s.slides.length === 0)return;if(typeof s.slides[0].swiperSlideOffset === 'undefined')s.updateSlidesOffset();var offsetCenter=s.params.centeredSlides?-translate + s.size / 2:-translate;if(s.rtl)offsetCenter = s.params.centeredSlides?translate - s.size / 2:translate; // Visible Slides
	s.slides.removeClass(s.params.slideVisibleClass);for(var i=0;i < s.slides.length;i++) {var slide=s.slides[i];var slideCenterOffset=s.params.centeredSlides === true?slide.swiperSlideSize / 2:0;var slideProgress=(offsetCenter - slide.swiperSlideOffset - slideCenterOffset) / (slide.swiperSlideSize + s.params.spaceBetween);if(s.params.watchSlidesVisibility){var slideBefore=-(offsetCenter - slide.swiperSlideOffset - slideCenterOffset);var slideAfter=slideBefore + s.slidesSizesGrid[i];var isVisible=slideBefore >= 0 && slideBefore < s.size || slideAfter > 0 && slideAfter <= s.size || slideBefore <= 0 && slideAfter >= s.size;if(isVisible){s.slides.eq(i).addClass(s.params.slideVisibleClass);}}slide.progress = s.rtl?-slideProgress:slideProgress;}};s.updateProgress = function(translate){if(typeof translate === 'undefined'){translate = s.translate || 0;}var translatesDiff=s.maxTranslate() - s.minTranslate();if(translatesDiff === 0){s.progress = 0;s.isBeginning = s.isEnd = true;}else {s.progress = (translate - s.minTranslate()) / translatesDiff;s.isBeginning = s.progress <= 0;s.isEnd = s.progress >= 1;}if(s.isBeginning)s.emit('onReachBeginning',s);if(s.isEnd)s.emit('onReachEnd',s);if(s.params.watchSlidesProgress)s.updateSlidesProgress(translate);s.emit('onProgress',s,s.progress);};s.updateActiveIndex = function(){var translate=s.rtl?s.translate:-s.translate;var newActiveIndex,i,snapIndex;for(i = 0;i < s.slidesGrid.length;i++) {if(typeof s.slidesGrid[i + 1] !== 'undefined'){if(translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2){newActiveIndex = i;}else if(translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]){newActiveIndex = i + 1;}}else {if(translate >= s.slidesGrid[i]){newActiveIndex = i;}}} // Normalize slideIndex
	if(newActiveIndex < 0 || typeof newActiveIndex === 'undefined')newActiveIndex = 0; // for (i = 0; i < s.slidesGrid.length; i++) {
	// if (- translate >= s.slidesGrid[i]) {
	// newActiveIndex = i;
	// }
	// }
	snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);if(snapIndex >= s.snapGrid.length)snapIndex = s.snapGrid.length - 1;if(newActiveIndex === s.activeIndex){return;}s.snapIndex = snapIndex;s.previousIndex = s.activeIndex;s.activeIndex = newActiveIndex;s.updateClasses();}; /*=========================
	          Classes
	          ===========================*/s.updateClasses = function(){s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);var activeSlide=s.slides.eq(s.activeIndex); // Active classes
	activeSlide.addClass(s.params.slideActiveClass);activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass); // Pagination
	if(s.bullets && s.bullets.length > 0){s.bullets.removeClass(s.params.bulletActiveClass);var bulletIndex;if(s.params.loop){bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides) / s.params.slidesPerGroup;if(bulletIndex > s.slides.length - 1 - s.loopedSlides * 2){bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);}if(bulletIndex > s.bullets.length - 1)bulletIndex = bulletIndex - s.bullets.length;}else {if(typeof s.snapIndex !== 'undefined'){bulletIndex = s.snapIndex;}else {bulletIndex = s.activeIndex || 0;}}if(s.paginationContainer.length > 1){s.bullets.each(function(){if($(this).index() === bulletIndex)$(this).addClass(s.params.bulletActiveClass);});}else {s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);}} // Next/active buttons
	if(!s.params.loop){if(s.params.prevButton){if(s.isBeginning){$(s.params.prevButton).addClass(s.params.buttonDisabledClass);if(s.params.a11y && s.a11y)s.a11y.disable($(s.params.prevButton));}else {$(s.params.prevButton).removeClass(s.params.buttonDisabledClass);if(s.params.a11y && s.a11y)s.a11y.enable($(s.params.prevButton));}}if(s.params.nextButton){if(s.isEnd){$(s.params.nextButton).addClass(s.params.buttonDisabledClass);if(s.params.a11y && s.a11y)s.a11y.disable($(s.params.nextButton));}else {$(s.params.nextButton).removeClass(s.params.buttonDisabledClass);if(s.params.a11y && s.a11y)s.a11y.enable($(s.params.nextButton));}}}}; /*=========================
	          Pagination
	          ===========================*/s.updatePagination = function(){if(!s.params.pagination)return;if(s.paginationContainer && s.paginationContainer.length > 0){var bulletsHTML='';var numberOfBullets=s.params.loop?Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup):s.snapGrid.length;for(var i=0;i < numberOfBullets;i++) {if(s.params.paginationBulletRender){bulletsHTML += s.params.paginationBulletRender(i,s.params.bulletClass);}else {bulletsHTML += '<span class="' + s.params.bulletClass + '"></span>';}}s.paginationContainer.html(bulletsHTML);s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);}}; /*=========================
	          Common update method
	          ===========================*/s.update = function(updateTranslate){s.updateContainerSize();s.updateSlidesSize();s.updateProgress();s.updatePagination();s.updateClasses();if(s.params.scrollbar && s.scrollbar){s.scrollbar.set();}function forceSetTranslate(){newTranslate = Math.min(Math.max(s.translate,s.maxTranslate()),s.minTranslate());s.setWrapperTranslate(newTranslate);s.updateActiveIndex();s.updateClasses();}if(updateTranslate){var translated,newTranslate;if(s.params.freeMode){forceSetTranslate();}else {if(s.params.slidesPerView === 'auto' && s.isEnd && !s.params.centeredSlides){translated = s.slideTo(s.slides.length - 1,0,false,true);}else {translated = s.slideTo(s.activeIndex,0,false,true);}if(!translated){forceSetTranslate();}}}}; /*=========================
	          Resize Handler
	          ===========================*/s.onResize = function(){s.updateContainerSize();s.updateSlidesSize();s.updateProgress();if(s.params.slidesPerView === 'auto' || s.params.freeMode)s.updatePagination();if(s.params.scrollbar && s.scrollbar){s.scrollbar.set();}if(s.params.freeMode){var newTranslate=Math.min(Math.max(s.translate,s.maxTranslate()),s.minTranslate());s.setWrapperTranslate(newTranslate);s.updateActiveIndex();s.updateClasses();}else {s.updateClasses();if(s.params.slidesPerView === 'auto' && s.isEnd && !s.params.centeredSlides){s.slideTo(s.slides.length - 1,0,false,true);}else {s.slideTo(s.activeIndex,0,false,true);}}}; /*=========================
	          Events
	          ===========================*/ //Define Touch Events
	var desktopEvents=['mousedown','mousemove','mouseup'];if(window.navigator.pointerEnabled)desktopEvents = ['pointerdown','pointermove','pointerup'];else if(window.navigator.msPointerEnabled)desktopEvents = ['MSPointerDown','MSPointerMove','MSPointerUp'];s.touchEvents = {start:s.support.touch || !s.params.simulateTouch?'touchstart':desktopEvents[0],move:s.support.touch || !s.params.simulateTouch?'touchmove':desktopEvents[1],end:s.support.touch || !s.params.simulateTouch?'touchend':desktopEvents[2]}; // WP8 Touch Events Fix
	if(window.navigator.pointerEnabled || window.navigator.msPointerEnabled){(s.params.touchEventsTarget === 'container'?s.container:s.wrapper).addClass('swiper-wp8-' + s.params.direction);} // Attach/detach events
	s.initEvents = function(detach){var actionDom=detach?'off':'on';var action=detach?'removeEventListener':'addEventListener';var touchEventsTarget=s.params.touchEventsTarget === 'container'?s.container[0]:s.wrapper[0];var target=s.support.touch?touchEventsTarget:document;var moveCapture=s.params.nested?true:false; //Touch Events
	if(s.browser.ie){touchEventsTarget[action](s.touchEvents.start,s.onTouchStart,false);target[action](s.touchEvents.move,s.onTouchMove,moveCapture);target[action](s.touchEvents.end,s.onTouchEnd,false);}else {if(s.support.touch){touchEventsTarget[action](s.touchEvents.start,s.onTouchStart,false);touchEventsTarget[action](s.touchEvents.move,s.onTouchMove,moveCapture);touchEventsTarget[action](s.touchEvents.end,s.onTouchEnd,false);}if(params.simulateTouch && !s.device.ios && !s.device.android){touchEventsTarget[action]('mousedown',s.onTouchStart,false);target[action]('mousemove',s.onTouchMove,moveCapture);target[action]('mouseup',s.onTouchEnd,false);}}window[action]('resize',s.onResize); // Next, Prev, Index
	if(s.params.nextButton){$(s.params.nextButton)[actionDom]('click',s.onClickNext);if(s.params.a11y && s.a11y)$(s.params.nextButton)[actionDom]('keydown',s.a11y.onEnterKey);}if(s.params.prevButton){$(s.params.prevButton)[actionDom]('click',s.onClickPrev);if(s.params.a11y && s.a11y)$(s.params.prevButton)[actionDom]('keydown',s.a11y.onEnterKey);}if(s.params.pagination && s.params.paginationClickable){$(s.paginationContainer)[actionDom]('click','.' + s.params.bulletClass,s.onClickIndex);} // Prevent Links Clicks
	if(s.params.preventClicks || s.params.preventClicksPropagation)touchEventsTarget[action]('click',s.preventClicks,true);};s.attachEvents = function(){s.initEvents();};s.detachEvents = function(){s.initEvents(true);}; /*=========================
	          Handle Clicks
	          ===========================*/ // Prevent Clicks
	s.allowClick = true;s.preventClicks = function(e){if(!s.allowClick){if(s.params.preventClicks)e.preventDefault();if(s.params.preventClicksPropagation){e.stopPropagation();e.stopImmediatePropagation();}}}; // Clicks
	s.onClickNext = function(e){e.preventDefault();s.slideNext();};s.onClickPrev = function(e){e.preventDefault();s.slidePrev();};s.onClickIndex = function(e){e.preventDefault();var index=$(this).index() * s.params.slidesPerGroup;if(s.params.loop)index = index + s.loopedSlides;s.slideTo(index);}; /*=========================
	          Handle Touches
	          ===========================*/function findElementInEvent(e,selector){var el=$(e.target);if(!el.is(selector)){if(typeof selector === 'string'){el = el.parents(selector);}else if(selector.nodeType){var found;el.parents().each(function(index,_el){if(_el === selector)found = selector;});if(!found)return undefined;else return selector;}}if(el.length === 0){return undefined;}return el[0];}s.updateClickedSlide = function(e){var slide=findElementInEvent(e,'.' + s.params.slideClass);if(slide){s.clickedSlide = slide;s.clickedIndex = $(slide).index();}else {s.clickedSlide = undefined;s.clickedIndex = undefined;return;}if(s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex){var slideToIndex=s.clickedIndex,realIndex;if(s.params.loop){realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');if(slideToIndex > s.slides.length - s.params.slidesPerView){s.fixLoop();slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]').eq(0).index();setTimeout(function(){s.slideTo(slideToIndex);},0);}else if(slideToIndex < s.params.slidesPerView - 1){s.fixLoop();var duplicatedSlides=s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]');slideToIndex = duplicatedSlides.eq(duplicatedSlides.length - 1).index();setTimeout(function(){s.slideTo(slideToIndex);},0);}else {s.slideTo(slideToIndex);}}else {s.slideTo(slideToIndex);}}};var isTouched,isMoved,touchStartTime,isScrolling,currentTranslate,startTranslate,allowThresholdMove, // Form elements to match
	formElements='input, select, textarea, button', // Last click time
	lastClickTime=Date.now(),clickTimeout, //Velocities
	velocities=[],allowMomentumBounce; // Animating Flag
	s.animating = false; // Touches information
	s.touches = {startX:0,startY:0,currentX:0,currentY:0,diff:0}; // Touch handlers
	var isTouchEvent,startMoving;s.onTouchStart = function(e){if(e.originalEvent)e = e.originalEvent;isTouchEvent = e.type === 'touchstart';if(!isTouchEvent && 'which' in e && e.which === 3)return;if(s.params.noSwiping && findElementInEvent(e,'.' + s.params.noSwipingClass)){s.allowClick = true;return;}if(s.params.swipeHandler){if(!findElementInEvent(e,s.params.swipeHandler))return;}isTouched = true;isMoved = false;isScrolling = undefined;startMoving = undefined;s.touches.startX = s.touches.currentX = e.type === 'touchstart'?e.targetTouches[0].pageX:e.pageX;s.touches.startY = s.touches.currentY = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;touchStartTime = Date.now();s.allowClick = true;s.updateContainerSize();s.swipeDirection = undefined;if(s.params.threshold > 0)allowThresholdMove = false;if(e.type !== 'touchstart'){var preventDefault=true;if($(e.target).is(formElements))preventDefault = false;if(document.activeElement && $(document.activeElement).is(formElements)){document.activeElement.blur();}if(preventDefault){e.preventDefault();}}s.emit('onTouchStart',s,e);};s.onTouchMove = function(e){if(e.originalEvent)e = e.originalEvent;if(isTouchEvent && e.type === 'mousemove')return;if(e.preventedByNestedSwiper)return;if(s.params.onlyExternal){isMoved = true;s.allowClick = false;return;}if(isTouchEvent && document.activeElement){if(e.target === document.activeElement && $(e.target).is(formElements)){isMoved = true;s.allowClick = false;return;}}s.emit('onTouchMove',s,e);if(e.targetTouches && e.targetTouches.length > 1)return;s.touches.currentX = e.type === 'touchmove'?e.targetTouches[0].pageX:e.pageX;s.touches.currentY = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(typeof isScrolling === 'undefined'){var touchAngle=Math.atan2(Math.abs(s.touches.currentY - s.touches.startY),Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;isScrolling = isH()?touchAngle > s.params.touchAngle:90 - touchAngle > s.params.touchAngle;}if(isScrolling){s.emit('onTouchMoveOpposite',s,e);}if(typeof startMoving === 'undefined' && s.browser.ieTouch){if(s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY){startMoving = true;}}if(!isTouched)return;if(isScrolling){isTouched = false;return;}if(!startMoving && s.browser.ieTouch){return;}s.allowClick = false;s.emit('onSliderMove',s,e);e.preventDefault();if(s.params.touchMoveStopPropagation && !s.params.nested){e.stopPropagation();}if(!isMoved){if(params.loop){s.fixLoop();}startTranslate = s.getWrapperTranslate();s.setWrapperTransition(0);if(s.animating){s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');}if(s.params.autoplay && s.autoplaying){if(s.params.autoplayDisableOnInteraction){s.stopAutoplay();}else {s.pauseAutoplay();}}allowMomentumBounce = false; //Grab Cursor
	if(s.params.grabCursor){s.container[0].style.cursor = 'move';s.container[0].style.cursor = '-webkit-grabbing';s.container[0].style.cursor = '-moz-grabbin';s.container[0].style.cursor = 'grabbing';}}isMoved = true;var diff=s.touches.diff = isH()?s.touches.currentX - s.touches.startX:s.touches.currentY - s.touches.startY;diff = diff * s.params.touchRatio;if(s.rtl)diff = -diff;s.swipeDirection = diff > 0?'prev':'next';currentTranslate = diff + startTranslate;var disableParentSwiper=true;if(diff > 0 && currentTranslate > s.minTranslate()){disableParentSwiper = false;if(s.params.resistance)currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff,s.params.resistanceRatio);}else if(diff < 0 && currentTranslate < s.maxTranslate()){disableParentSwiper = false;if(s.params.resistance)currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff,s.params.resistanceRatio);}if(disableParentSwiper){e.preventedByNestedSwiper = true;} // Directions locks
	if(!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate){currentTranslate = startTranslate;}if(!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate){currentTranslate = startTranslate;}if(!s.params.followFinger)return; // Threshold
	if(s.params.threshold > 0){if(Math.abs(diff) > s.params.threshold || allowThresholdMove){if(!allowThresholdMove){allowThresholdMove = true;s.touches.startX = s.touches.currentX;s.touches.startY = s.touches.currentY;currentTranslate = startTranslate;s.touches.diff = isH()?s.touches.currentX - s.touches.startX:s.touches.currentY - s.touches.startY;return;}}else {currentTranslate = startTranslate;return;}} // Update active index in free mode
	if(s.params.freeMode || s.params.watchSlidesProgress){s.updateActiveIndex();}if(s.params.freeMode){ //Velocity
	if(velocities.length === 0){velocities.push({position:s.touches[isH()?'startX':'startY'],time:touchStartTime});}velocities.push({position:s.touches[isH()?'currentX':'currentY'],time:new Date().getTime()});} // Update progress
	s.updateProgress(currentTranslate); // Update translate
	s.setWrapperTranslate(currentTranslate);};s.onTouchEnd = function(e){if(e.originalEvent)e = e.originalEvent;s.emit('onTouchEnd',s,e);if(!isTouched)return; //Return Grab Cursor
	if(s.params.grabCursor && isMoved && isTouched){s.container[0].style.cursor = 'move';s.container[0].style.cursor = '-webkit-grab';s.container[0].style.cursor = '-moz-grab';s.container[0].style.cursor = 'grab';} // Time diff
	var touchEndTime=Date.now();var timeDiff=touchEndTime - touchStartTime; // Tap, doubleTap, Click
	if(s.allowClick){s.updateClickedSlide(e);s.emit('onTap',s,e);if(timeDiff < 300 && touchEndTime - lastClickTime > 300){if(clickTimeout)clearTimeout(clickTimeout);clickTimeout = setTimeout(function(){if(!s)return;if(s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)){s.paginationContainer.toggleClass(s.params.paginationHiddenClass);}s.emit('onClick',s,e);},300);}if(timeDiff < 300 && touchEndTime - lastClickTime < 300){if(clickTimeout)clearTimeout(clickTimeout);s.emit('onDoubleTap',s,e);}}lastClickTime = Date.now();setTimeout(function(){if(s && s.allowClick)s.allowClick = true;},0);if(!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate){isTouched = isMoved = false;return;}isTouched = isMoved = false;var currentPos;if(s.params.followFinger){currentPos = s.rtl?s.translate:-s.translate;}else {currentPos = -currentTranslate;}if(s.params.freeMode){if(currentPos < -s.minTranslate()){s.slideTo(s.activeIndex);return;}else if(currentPos > -s.maxTranslate()){s.slideTo(s.slides.length - 1);return;}if(s.params.freeModeMomentum){if(velocities.length > 1){var lastMoveEvent=velocities.pop(),velocityEvent=velocities.pop();var distance=lastMoveEvent.position - velocityEvent.position;var time=lastMoveEvent.time - velocityEvent.time;s.velocity = distance / time;s.velocity = s.velocity / 2;if(Math.abs(s.velocity) < 0.02){s.velocity = 0;} // this implies that the user stopped moving a finger then released.
	// There would be no events with distance zero, so the last event is stale.
	if(time > 150 || new Date().getTime() - lastMoveEvent.time > 300){s.velocity = 0;}}else {s.velocity = 0;}velocities.length = 0;var momentumDuration=1000 * s.params.freeModeMomentumRatio;var momentumDistance=s.velocity * momentumDuration;var newPosition=s.translate + momentumDistance;if(s.rtl)newPosition = -newPosition;var doBounce=false;var afterBouncePosition;var bounceAmount=Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;if(newPosition < s.maxTranslate()){if(s.params.freeModeMomentumBounce){if(newPosition + s.maxTranslate() < -bounceAmount){newPosition = s.maxTranslate() - bounceAmount;}afterBouncePosition = s.maxTranslate();doBounce = true;allowMomentumBounce = true;}else {newPosition = s.maxTranslate();}}if(newPosition > s.minTranslate()){if(s.params.freeModeMomentumBounce){if(newPosition - s.minTranslate() > bounceAmount){newPosition = s.minTranslate() + bounceAmount;}afterBouncePosition = s.minTranslate();doBounce = true;allowMomentumBounce = true;}else {newPosition = s.minTranslate();}} //Fix duration
	if(s.velocity !== 0){if(s.rtl){momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);}else {momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);}}if(s.params.freeModeMomentumBounce && doBounce){s.updateProgress(afterBouncePosition);s.setWrapperTransition(momentumDuration);s.setWrapperTranslate(newPosition);s.onTransitionStart();s.animating = true;s.wrapper.transitionEnd(function(){if(!allowMomentumBounce)return;s.emit('onMomentumBounce',s);s.setWrapperTransition(s.params.speed);s.setWrapperTranslate(afterBouncePosition);s.wrapper.transitionEnd(function(){s.onTransitionEnd();});});}else if(s.velocity){s.updateProgress(newPosition);s.setWrapperTransition(momentumDuration);s.setWrapperTranslate(newPosition);s.onTransitionStart();if(!s.animating){s.animating = true;s.wrapper.transitionEnd(function(){s.onTransitionEnd();});}}else {s.updateProgress(newPosition);}s.updateActiveIndex();}if(!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs){s.updateProgress();s.updateActiveIndex();}return;} // Find current slide
	var i,stopIndex=0,groupSize=s.slidesSizesGrid[0];for(i = 0;i < s.slidesGrid.length;i += s.params.slidesPerGroup) {if(typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined'){if(currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]){stopIndex = i;groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];}}else {if(currentPos >= s.slidesGrid[i]){stopIndex = i;groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];}}} // Find current slide size
	var ratio=(currentPos - s.slidesGrid[stopIndex]) / groupSize;if(timeDiff > s.params.longSwipesMs){ // Long touches
	if(!s.params.longSwipes){s.slideTo(s.activeIndex);return;}if(s.swipeDirection === 'next'){if(ratio >= s.params.longSwipesRatio)s.slideTo(stopIndex + s.params.slidesPerGroup);else s.slideTo(stopIndex);}if(s.swipeDirection === 'prev'){if(ratio > 1 - s.params.longSwipesRatio)s.slideTo(stopIndex + s.params.slidesPerGroup);else s.slideTo(stopIndex);}}else { // Short swipes
	if(!s.params.shortSwipes){s.slideTo(s.activeIndex);return;}if(s.swipeDirection === 'next'){s.slideTo(stopIndex + s.params.slidesPerGroup);}if(s.swipeDirection === 'prev'){s.slideTo(stopIndex);}}}; /*=========================
	          Transitions
	          ===========================*/s._slideTo = function(slideIndex,speed){return s.slideTo(slideIndex,speed,true,true);};s.slideTo = function(slideIndex,speed,runCallbacks,internal){if(typeof runCallbacks === 'undefined')runCallbacks = true;if(typeof slideIndex === 'undefined')slideIndex = 0;if(slideIndex < 0)slideIndex = 0;s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);if(s.snapIndex >= s.snapGrid.length)s.snapIndex = s.snapGrid.length - 1;var translate=-s.snapGrid[s.snapIndex]; // Stop autoplay
	if(s.params.autoplay && s.autoplaying){if(internal || !s.params.autoplayDisableOnInteraction){s.pauseAutoplay(speed);}else {s.stopAutoplay();}} // Update progress
	s.updateProgress(translate); // Normalize slideIndex
	for(var i=0;i < s.slidesGrid.length;i++) {if(-translate >= s.slidesGrid[i]){slideIndex = i;}}if(typeof speed === 'undefined')speed = s.params.speed;s.previousIndex = s.activeIndex || 0;s.activeIndex = slideIndex;if(translate === s.translate){s.updateClasses();return false;}s.onTransitionStart(runCallbacks);if(speed === 0){s.setWrapperTransition(0);s.setWrapperTranslate(translate);s.onTransitionEnd(runCallbacks);}else {s.setWrapperTransition(speed);s.setWrapperTranslate(translate);if(!s.animating){s.animating = true;s.wrapper.transitionEnd(function(){s.onTransitionEnd(runCallbacks);});}}s.updateClasses();return true;};s.onTransitionStart = function(runCallbacks){if(typeof runCallbacks === 'undefined')runCallbacks = true;if(s.lazy)s.lazy.onTransitionStart();if(runCallbacks){s.emit('onTransitionStart',s);if(s.activeIndex !== s.previousIndex){s.emit('onSlideChangeStart',s);}}};s.onTransitionEnd = function(runCallbacks){s.animating = false;s.setWrapperTransition(0);if(typeof runCallbacks === 'undefined')runCallbacks = true;if(s.lazy)s.lazy.onTransitionEnd();if(runCallbacks){s.emit('onTransitionEnd',s);if(s.activeIndex !== s.previousIndex){s.emit('onSlideChangeEnd',s);}}if(s.params.hashnav && s.hashnav){s.hashnav.setHash();}};s.slideNext = function(runCallbacks,speed,internal){if(s.params.loop){if(s.animating)return false;s.fixLoop();return s.slideTo(s.activeIndex + s.params.slidesPerGroup,speed,runCallbacks,internal);}else return s.slideTo(s.activeIndex + s.params.slidesPerGroup,speed,runCallbacks,internal);};s._slideNext = function(speed){return s.slideNext(true,speed,true);};s.slidePrev = function(runCallbacks,speed,internal){if(s.params.loop){if(s.animating)return false;s.fixLoop();return s.slideTo(s.activeIndex - 1,speed,runCallbacks,internal);}else return s.slideTo(s.activeIndex - 1,speed,runCallbacks,internal);};s._slidePrev = function(speed){return s.slidePrev(true,speed,true);};s.slideReset = function(runCallbacks,speed){return s.slideTo(s.activeIndex,speed,runCallbacks);}; /*=========================
	          Translate/transition helpers
	          ===========================*/s.setWrapperTransition = function(duration,byController){s.wrapper.transition(duration);if(s.params.effect !== 'slide' && s.effects[s.params.effect]){s.effects[s.params.effect].setTransition(duration);}if(s.params.parallax && s.parallax){s.parallax.setTransition(duration);}if(s.params.scrollbar && s.scrollbar){s.scrollbar.setTransition(duration);}if(s.params.control && s.controller){s.controller.setTransition(duration,byController);}s.emit('onSetTransition',s,duration);};s.setWrapperTranslate = function(translate,updateActiveIndex,byController){var x=0,y=0,z=0;if(isH()){x = s.rtl?-translate:translate;}else {y = translate;}if(!s.params.virtualTranslate){if(s.support.transforms3d)s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');}s.translate = isH()?x:y;if(updateActiveIndex)s.updateActiveIndex();if(s.params.effect !== 'slide' && s.effects[s.params.effect]){s.effects[s.params.effect].setTranslate(s.translate);}if(s.params.parallax && s.parallax){s.parallax.setTranslate(s.translate);}if(s.params.scrollbar && s.scrollbar){s.scrollbar.setTranslate(s.translate);}if(s.params.control && s.controller){s.controller.setTranslate(s.translate,byController);}s.emit('onSetTranslate',s,s.translate);};s.getTranslate = function(el,axis){var matrix,curTransform,curStyle,transformMatrix; // automatic axis detection
	if(typeof axis === 'undefined'){axis = 'x';}if(s.params.virtualTranslate){return s.rtl?-s.translate:s.translate;}curStyle = window.getComputedStyle(el,null);if(window.WebKitCSSMatrix){ // Some old versions of Webkit choke when 'none' is passed; pass
	// empty string instead in this case
	transformMatrix = new WebKitCSSMatrix(curStyle.webkitTransform === 'none'?'':curStyle.webkitTransform);}else {transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(','matrix(1, 0, 0, 1,');matrix = transformMatrix.toString().split(',');}if(axis === 'x'){ //Latest Chrome and webkits Fix
	if(window.WebKitCSSMatrix)curTransform = transformMatrix.m41; //Crazy IE10 Matrix
	else if(matrix.length === 16)curTransform = parseFloat(matrix[12]); //Normal Browsers
	else curTransform = parseFloat(matrix[4]);}if(axis === 'y'){ //Latest Chrome and webkits Fix
	if(window.WebKitCSSMatrix)curTransform = transformMatrix.m42; //Crazy IE10 Matrix
	else if(matrix.length === 16)curTransform = parseFloat(matrix[13]); //Normal Browsers
	else curTransform = parseFloat(matrix[5]);}if(s.rtl && curTransform)curTransform = -curTransform;return curTransform || 0;};s.getWrapperTranslate = function(axis){if(typeof axis === 'undefined'){axis = isH()?'x':'y';}return s.getTranslate(s.wrapper[0],axis);}; /*=========================
	          Observer
	          ===========================*/s.observers = [];function initObserver(target,options){options = options || {}; // create an observer instance
	var ObserverFunc=window.MutationObserver || window.WebkitMutationObserver;var observer=new ObserverFunc(function(mutations){mutations.forEach(function(mutation){s.onResize();s.emit('onObserverUpdate',s,mutation);});});observer.observe(target,{attributes:typeof options.attributes === 'undefined'?true:options.attributes,childList:typeof options.childList === 'undefined'?true:options.childList,characterData:typeof options.characterData === 'undefined'?true:options.characterData});s.observers.push(observer);}s.initObservers = function(){if(s.params.observeParents){var containerParents=s.container.parents();for(var i=0;i < containerParents.length;i++) {initObserver(containerParents[i]);}} // Observe container
	initObserver(s.container[0],{childList:false}); // Observe wrapper
	initObserver(s.wrapper[0],{attributes:false});};s.disconnectObservers = function(){for(var i=0;i < s.observers.length;i++) {s.observers[i].disconnect();}s.observers = [];}; /*=========================
	          Loop
	          ===========================*/ // Create looped slides
	s.createLoop = function(){ // Remove duplicated slides
	s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();var slides=s.wrapper.children('.' + s.params.slideClass);s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView,10);s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;if(s.loopedSlides > slides.length){s.loopedSlides = slides.length;}var prependSlides=[],appendSlides=[],i;slides.each(function(index,el){var slide=$(this);if(index < s.loopedSlides)appendSlides.push(el);if(index < slides.length && index >= slides.length - s.loopedSlides)prependSlides.push(el);slide.attr('data-swiper-slide-index',index);});for(i = 0;i < appendSlides.length;i++) {s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));}for(i = prependSlides.length - 1;i >= 0;i--) {s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));}};s.destroyLoop = function(){s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();s.slides.removeAttr('data-swiper-slide-index');};s.fixLoop = function(){var newIndex; //Fix For Negative Oversliding
	if(s.activeIndex < s.loopedSlides){newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;newIndex = newIndex + s.loopedSlides;s.slideTo(newIndex,0,false,true);} //Fix For Positive Oversliding
	else if(s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2 || s.activeIndex > s.slides.length - s.params.slidesPerView * 2){newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;newIndex = newIndex + s.loopedSlides;s.slideTo(newIndex,0,false,true);}}; /*=========================
	          Append/Prepend/Remove Slides
	          ===========================*/s.appendSlide = function(slides){if(s.params.loop){s.destroyLoop();}if(typeof slides === 'object' && slides.length){for(var i=0;i < slides.length;i++) {if(slides[i])s.wrapper.append(slides[i]);}}else {s.wrapper.append(slides);}if(s.params.loop){s.createLoop();}if(!(s.params.observer && s.support.observer)){s.update(true);}};s.prependSlide = function(slides){if(s.params.loop){s.destroyLoop();}var newActiveIndex=s.activeIndex + 1;if(typeof slides === 'object' && slides.length){for(var i=0;i < slides.length;i++) {if(slides[i])s.wrapper.prepend(slides[i]);}newActiveIndex = s.activeIndex + slides.length;}else {s.wrapper.prepend(slides);}if(s.params.loop){s.createLoop();}if(!(s.params.observer && s.support.observer)){s.update(true);}s.slideTo(newActiveIndex,0,false);};s.removeSlide = function(slidesIndexes){if(s.params.loop){s.destroyLoop();}var newActiveIndex=s.activeIndex,indexToRemove;if(typeof slidesIndexes === 'object' && slidesIndexes.length){for(var i=0;i < slidesIndexes.length;i++) {indexToRemove = slidesIndexes[i];if(s.slides[indexToRemove])s.slides.eq(indexToRemove).remove();if(indexToRemove < newActiveIndex)newActiveIndex--;}newActiveIndex = Math.max(newActiveIndex,0);}else {indexToRemove = slidesIndexes;if(s.slides[indexToRemove])s.slides.eq(indexToRemove).remove();if(indexToRemove < newActiveIndex)newActiveIndex--;newActiveIndex = Math.max(newActiveIndex,0);}if(!(s.params.observer && s.support.observer)){s.update(true);}s.slideTo(newActiveIndex,0,false);};s.removeAllSlides = function(){var slidesIndexes=[];for(var i=0;i < s.slides.length;i++) {slidesIndexes.push(i);}s.removeSlide(slidesIndexes);}; /*=========================
	          Effects
	          ===========================*/s.effects = {fade:{fadeIndex:null,setTranslate:function setTranslate(){for(var i=0;i < s.slides.length;i++) {var slide=s.slides.eq(i);var offset=slide[0].swiperSlideOffset;var tx=-offset;if(!s.params.virtualTranslate)tx = tx - s.translate;var ty=0;if(!isH()){ty = tx;tx = 0;}var slideOpacity=s.params.fade.crossFade?Math.max(1 - Math.abs(slide[0].progress),0):1 + Math.min(Math.max(slide[0].progress,-1),0);if(slideOpacity > 0 && slideOpacity < 1){s.effects.fade.fadeIndex = i;}slide.css({opacity:slideOpacity}).transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');}},setTransition:function setTransition(duration){s.slides.transition(duration);if(s.params.virtualTranslate && duration !== 0){var fadeIndex=s.effects.fade.fadeIndex !== null?s.effects.fade.fadeIndex:s.activeIndex;s.slides.eq(fadeIndex).transitionEnd(function(){var triggerEvents=['webkitTransitionEnd','transitionend','oTransitionEnd','MSTransitionEnd','msTransitionEnd'];for(var i=0;i < triggerEvents.length;i++) {s.wrapper.trigger(triggerEvents[i]);}});}}},cube:{setTranslate:function setTranslate(){var wrapperRotate=0,cubeShadow;if(s.params.cube.shadow){if(isH()){cubeShadow = s.wrapper.find('.swiper-cube-shadow');if(cubeShadow.length === 0){cubeShadow = $('<div class="swiper-cube-shadow"></div>');s.wrapper.append(cubeShadow);}cubeShadow.css({height:s.width + 'px'});}else {cubeShadow = s.container.find('.swiper-cube-shadow');if(cubeShadow.length === 0){cubeShadow = $('<div class="swiper-cube-shadow"></div>');s.container.append(cubeShadow);}}}for(var i=0;i < s.slides.length;i++) {var slide=s.slides.eq(i);var slideAngle=i * 90;var round=Math.floor(slideAngle / 360);if(s.rtl){slideAngle = -slideAngle;round = Math.floor(-slideAngle / 360);}var progress=Math.max(Math.min(slide[0].progress,1),-1);var tx=0,ty=0,tz=0;if(i % 4 === 0){tx = -round * 4 * s.size;tz = 0;}else if((i - 1) % 4 === 0){tx = 0;tz = -round * 4 * s.size;}else if((i - 2) % 4 === 0){tx = s.size + round * 4 * s.size;tz = s.size;}else if((i - 3) % 4 === 0){tx = -s.size;tz = 3 * s.size + s.size * 4 * round;}if(s.rtl){tx = -tx;}if(!isH()){ty = tx;tx = 0;}var transform='rotateX(' + (isH()?0:-slideAngle) + 'deg) rotateY(' + (isH()?slideAngle:0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';if(progress <= 1 && progress > -1){wrapperRotate = i * 90 + progress * 90;if(s.rtl)wrapperRotate = -i * 90 - progress * 90;}slide.transform(transform);if(s.params.cube.slideShadows){ //Set shadows
	var shadowBefore=isH()?slide.find('.swiper-slide-shadow-left'):slide.find('.swiper-slide-shadow-top');var shadowAfter=isH()?slide.find('.swiper-slide-shadow-right'):slide.find('.swiper-slide-shadow-bottom');if(shadowBefore.length === 0){shadowBefore = $('<div class="swiper-slide-shadow-' + (isH()?'left':'top') + '"></div>');slide.append(shadowBefore);}if(shadowAfter.length === 0){shadowAfter = $('<div class="swiper-slide-shadow-' + (isH()?'right':'bottom') + '"></div>');slide.append(shadowAfter);}if(shadowBefore.length)shadowBefore[0].style.opacity = -slide[0].progress;if(shadowAfter.length)shadowAfter[0].style.opacity = slide[0].progress;}}s.wrapper.css({'-webkit-transform-origin':'50% 50% -' + s.size / 2 + 'px','-moz-transform-origin':'50% 50% -' + s.size / 2 + 'px','-ms-transform-origin':'50% 50% -' + s.size / 2 + 'px','transform-origin':'50% 50% -' + s.size / 2 + 'px'});if(s.params.cube.shadow){if(isH()){cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + -s.width / 2 + 'px) rotateX(90deg) rotateZ(0deg) scale(' + s.params.cube.shadowScale + ')');}else {var shadowAngle=Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;var multiplier=1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);var scale1=s.params.cube.shadowScale,scale2=s.params.cube.shadowScale / multiplier,offset=s.params.cube.shadowOffset;cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + -s.height / 2 / scale2 + 'px) rotateX(-90deg)');}}var zFactor=s.isSafari || s.isUiWebView?-s.size / 2:0;s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH()?0:wrapperRotate) + 'deg) rotateY(' + (isH()?-wrapperRotate:0) + 'deg)');},setTransition:function setTransition(duration){s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);if(s.params.cube.shadow && !isH()){s.container.find('.swiper-cube-shadow').transition(duration);}}},coverflow:{setTranslate:function setTranslate(){var transform=s.translate;var center=isH()?-transform + s.width / 2:-transform + s.height / 2;var rotate=isH()?s.params.coverflow.rotate:-s.params.coverflow.rotate;var translate=s.params.coverflow.depth; //Each slide offset from center
	for(var i=0,length=s.slides.length;i < length;i++) {var slide=s.slides.eq(i);var slideSize=s.slidesSizesGrid[i];var slideOffset=slide[0].swiperSlideOffset;var offsetMultiplier=(center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;var rotateY=isH()?rotate * offsetMultiplier:0;var rotateX=isH()?0:rotate * offsetMultiplier; // var rotateZ = 0
	var translateZ=-translate * Math.abs(offsetMultiplier);var translateY=isH()?0:s.params.coverflow.stretch * offsetMultiplier;var translateX=isH()?s.params.coverflow.stretch * offsetMultiplier:0; //Fix for ultra small values
	if(Math.abs(translateX) < 0.001)translateX = 0;if(Math.abs(translateY) < 0.001)translateY = 0;if(Math.abs(translateZ) < 0.001)translateZ = 0;if(Math.abs(rotateY) < 0.001)rotateY = 0;if(Math.abs(rotateX) < 0.001)rotateX = 0;var slideTransform='translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';slide.transform(slideTransform);slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;if(s.params.coverflow.slideShadows){ //Set shadows
	var shadowBefore=isH()?slide.find('.swiper-slide-shadow-left'):slide.find('.swiper-slide-shadow-top');var shadowAfter=isH()?slide.find('.swiper-slide-shadow-right'):slide.find('.swiper-slide-shadow-bottom');if(shadowBefore.length === 0){shadowBefore = $('<div class="swiper-slide-shadow-' + (isH()?'left':'top') + '"></div>');slide.append(shadowBefore);}if(shadowAfter.length === 0){shadowAfter = $('<div class="swiper-slide-shadow-' + (isH()?'right':'bottom') + '"></div>');slide.append(shadowAfter);}if(shadowBefore.length)shadowBefore[0].style.opacity = offsetMultiplier > 0?offsetMultiplier:0;if(shadowAfter.length)shadowAfter[0].style.opacity = -offsetMultiplier > 0?-offsetMultiplier:0;}} //Set correct perspective for IE10
	if(s.browser.ie){var ws=s.wrapper[0].style;ws.perspectiveOrigin = center + 'px 50%';}},setTransition:function setTransition(duration){s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);}}}; /*=========================
	          Images Lazy Loading
	          ===========================*/s.lazy = {initialImageLoaded:false,loadImageInSlide:function loadImageInSlide(index){if(typeof index === 'undefined')return;if(s.slides.length === 0)return;var slide=s.slides.eq(index);var img=slide.find('img.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');if(img.length === 0)return;img.each(function(){var _img=$(this);_img.addClass('swiper-lazy-loading');var src=_img.attr('data-src');s.loadImage(_img[0],src,false,function(){_img.attr('src',src);_img.removeAttr('data-src');_img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');slide.find('.swiper-lazy-preloader, .preloader').remove();s.emit('onLazyImageReady',s,slide[0],_img[0]);});s.emit('onLazyImageLoad',s,slide[0],_img[0]);});},load:function load(){if(s.params.watchSlidesVisibility){s.wrapper.children('.' + s.params.slideVisibleClass).each(function(){s.lazy.loadImageInSlide($(this).index());});}else {if(s.params.slidesPerView > 1){for(var i=s.activeIndex;i < s.activeIndex + s.params.slidesPerView;i++) {if(s.slides[i])s.lazy.loadImageInSlide(i);}}else {s.lazy.loadImageInSlide(s.activeIndex);}}if(s.params.lazyLoadingInPrevNext){var nextSlide=s.wrapper.children('.' + s.params.slideNextClass);if(nextSlide.length > 0)s.lazy.loadImageInSlide(nextSlide.index());var prevSlide=s.wrapper.children('.' + s.params.slidePrevClass);if(prevSlide.length > 0)s.lazy.loadImageInSlide(prevSlide.index());}},onTransitionStart:function onTransitionStart(){if(s.params.lazyLoading){if(s.params.lazyLoadingOnTransitionStart || !s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded){s.lazy.initialImageLoaded = true;s.lazy.load();}}},onTransitionEnd:function onTransitionEnd(){if(s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart){s.lazy.load();}}}; /*=========================
	          Scrollbar
	          ===========================*/s.scrollbar = {set:function set(){if(!s.params.scrollbar)return;var sb=s.scrollbar;sb.track = $(s.params.scrollbar);sb.drag = sb.track.find('.swiper-scrollbar-drag');if(sb.drag.length === 0){sb.drag = $('<div class="swiper-scrollbar-drag"></div>');sb.track.append(sb.drag);}sb.drag[0].style.width = '';sb.drag[0].style.height = '';sb.trackSize = isH()?sb.track[0].offsetWidth:sb.track[0].offsetHeight;sb.divider = s.size / s.virtualSize;sb.moveDivider = sb.divider * (sb.trackSize / s.size);sb.dragSize = sb.trackSize * sb.divider;if(isH()){sb.drag[0].style.width = sb.dragSize + 'px';}else {sb.drag[0].style.height = sb.dragSize + 'px';}if(sb.divider >= 1){sb.track[0].style.display = 'none';}else {sb.track[0].style.display = '';}if(s.params.scrollbarHide){sb.track[0].style.opacity = 0;}},setTranslate:function setTranslate(){if(!s.params.scrollbar)return;var sb=s.scrollbar;var newPos;var newSize=sb.dragSize;newPos = (sb.trackSize - sb.dragSize) * s.progress;if(s.rtl && isH()){newPos = -newPos;if(newPos > 0){newSize = sb.dragSize - newPos;newPos = 0;}else if(-newPos + sb.dragSize > sb.trackSize){newSize = sb.trackSize + newPos;}}else {if(newPos < 0){newSize = sb.dragSize + newPos;newPos = 0;}else if(newPos + sb.dragSize > sb.trackSize){newSize = sb.trackSize - newPos;}}if(isH()){if(s.support.transforms3d){sb.drag.transform('translate3d(' + newPos + 'px, 0, 0)');}else {sb.drag.transform('translateX(' + newPos + 'px)');}sb.drag[0].style.width = newSize + 'px';}else {if(s.support.transforms3d){sb.drag.transform('translate3d(0px, ' + newPos + 'px, 0)');}else {sb.drag.transform('translateY(' + newPos + 'px)');}sb.drag[0].style.height = newSize + 'px';}if(s.params.scrollbarHide){clearTimeout(sb.timeout);sb.track[0].style.opacity = 1;sb.timeout = setTimeout(function(){sb.track[0].style.opacity = 0;sb.track.transition(400);},1000);}},setTransition:function setTransition(duration){if(!s.params.scrollbar)return;s.scrollbar.drag.transition(duration);}}; /*=========================
	          Controller
	          ===========================*/s.controller = {setTranslate:function setTranslate(translate,byController){var controlled=s.params.control;var multiplier,controlledTranslate;if(s.isArray(controlled)){for(var i=0;i < controlled.length;i++) {if(controlled[i] !== byController && controlled[i] instanceof Swiper){translate = controlled[i].rtl && controlled[i].params.direction === 'horizontal'?-s.translate:s.translate;multiplier = (controlled[i].maxTranslate() - controlled[i].minTranslate()) / (s.maxTranslate() - s.minTranslate());controlledTranslate = (translate - s.minTranslate()) * multiplier + controlled[i].minTranslate();if(s.params.controlInverse){controlledTranslate = controlled[i].maxTranslate() - controlledTranslate;}controlled[i].updateProgress(controlledTranslate);controlled[i].setWrapperTranslate(controlledTranslate,false,s);controlled[i].updateActiveIndex();}}}else if(controlled instanceof Swiper && byController !== controlled){translate = controlled.rtl && controlled.params.direction === 'horizontal'?-s.translate:s.translate;multiplier = (controlled.maxTranslate() - controlled.minTranslate()) / (s.maxTranslate() - s.minTranslate());controlledTranslate = (translate - s.minTranslate()) * multiplier + controlled.minTranslate();if(s.params.controlInverse){controlledTranslate = controlled.maxTranslate() - controlledTranslate;}controlled.updateProgress(controlledTranslate);controlled.setWrapperTranslate(controlledTranslate,false,s);controlled.updateActiveIndex();}},setTransition:function setTransition(duration,byController){var controlled=s.params.control;if(s.isArray(controlled)){for(var i=0;i < controlled.length;i++) {if(controlled[i] !== byController && controlled[i] instanceof Swiper){controlled[i].setWrapperTransition(duration,s);}}}else if(controlled instanceof Swiper && byController !== controlled){controlled.setWrapperTransition(duration,s);}}}; /*=========================
	          Parallax
	          ===========================*/function setParallaxTransform(el,progress){el = $(el);var p,pX,pY;p = el.attr('data-swiper-parallax') || '0';pX = el.attr('data-swiper-parallax-x');pY = el.attr('data-swiper-parallax-y');if(pX || pY){pX = pX || '0';pY = pY || '0';}else {if(isH()){pX = p;pY = '0';}else {pY = p;pX = '0';}}if(pX.indexOf('%') >= 0){pX = parseInt(pX,10) * progress + '%';}else {pX = pX * progress + 'px';}if(pY.indexOf('%') >= 0){pY = parseInt(pY,10) * progress + '%';}else {pY = pY * progress + 'px';}el.transform('translate3d(' + pX + ', ' + pY + ',0px)');}s.parallax = {setTranslate:function setTranslate(){s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){setParallaxTransform(this,s.progress);});s.slides.each(function(){var slide=$(this);slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){var progress=Math.min(Math.max(slide[0].progress,-1),1);setParallaxTransform(this,progress);});});},setTransition:function setTransition(duration){if(typeof duration === 'undefined')duration = s.params.speed;s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){var el=$(this);var parallaxDuration=parseInt(el.attr('data-swiper-parallax-duration'),10) || duration;if(duration === 0)parallaxDuration = 0;el.transition(parallaxDuration);});}}; /*=========================
	          Plugins API. Collect all and init all plugins
	          ===========================*/s._plugins = [];for(var plugin in s.plugins) {if(s.plugins.hasOwnProperty(plugin)){var p=s.plugins[plugin](s,s.params[plugin]);if(p)s._plugins.push(p);}} // Method to call all plugins event/method
	s.callPlugins = function(eventName){for(var i=0;i < s._plugins.length;i++) {if(eventName in s._plugins[i]){s._plugins[i][eventName](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);}}}; /*=========================
	          Events/Callbacks/Plugins Emitter
	          ===========================*/function normalizeEventName(eventName){if(eventName.indexOf('on') !== 0){if(eventName[0] !== eventName[0].toUpperCase()){eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);}else {eventName = 'on' + eventName;}}return eventName;}s.emitterEventListeners = {};s.emit = function(eventName){ // Trigger callbacks
	if(s.params[eventName]){s.params[eventName](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);}var i; // Trigger events
	if(s.emitterEventListeners[eventName]){for(i = 0;i < s.emitterEventListeners[eventName].length;i++) {s.emitterEventListeners[eventName][i](arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);}} // Trigger plugins
	if(s.callPlugins)s.callPlugins(eventName,arguments[1],arguments[2],arguments[3],arguments[4],arguments[5]);};s.on = function(eventName,handler){eventName = normalizeEventName(eventName);if(!s.emitterEventListeners[eventName])s.emitterEventListeners[eventName] = [];s.emitterEventListeners[eventName].push(handler);return s;};s.off = function(eventName,handler){var i;eventName = normalizeEventName(eventName);if(typeof handler === 'undefined'){ // Remove all handlers for such event
	s.emitterEventListeners[eventName] = [];return s;}if(!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0)return;for(i = 0;i < s.emitterEventListeners[eventName].length;i++) {if(s.emitterEventListeners[eventName][i] === handler)s.emitterEventListeners[eventName].splice(i,1);}return s;};s.once = function(eventName,handler){eventName = normalizeEventName(eventName);var _handler=function _handler(){handler(arguments[0],arguments[1],arguments[2],arguments[3],arguments[4]);s.off(eventName,_handler);};s.on(eventName,_handler);return s;}; // Accessibility tools
	s.a11y = {makeFocusable:function makeFocusable($el){$el[0].tabIndex = '0';return $el;},addRole:function addRole($el,role){$el.attr('role',role);return $el;},addLabel:function addLabel($el,label){$el.attr('aria-label',label);return $el;},disable:function disable($el){$el.attr('aria-disabled',true);return $el;},enable:function enable($el){$el.attr('aria-disabled',false);return $el;},onEnterKey:function onEnterKey(event){if(event.keyCode !== 13)return;if($(event.target).is(s.params.nextButton)){s.onClickNext(event);if(s.isEnd){s.a11y.notify(s.params.lastSlideMsg);}else {s.a11y.notify(s.params.nextSlideMsg);}}else if($(event.target).is(s.params.prevButton)){s.onClickPrev(event);if(s.isBeginning){s.a11y.notify(s.params.firstSlideMsg);}else {s.a11y.notify(s.params.prevSlideMsg);}}},liveRegion:$('<span class="swiper-notification" aria-live="assertive" aria-atomic="true"></span>'),notify:function notify(message){var notification=s.a11y.liveRegion;if(notification.length === 0)return;notification.html('');notification.html(message);},init:function init(){ // Setup accessibility
	if(s.params.nextButton){var nextButton=$(s.params.nextButton);s.a11y.makeFocusable(nextButton);s.a11y.addRole(nextButton,'button');s.a11y.addLabel(nextButton,s.params.nextSlideMsg);}if(s.params.prevButton){var prevButton=$(s.params.prevButton);s.a11y.makeFocusable(prevButton);s.a11y.addRole(prevButton,'button');s.a11y.addLabel(prevButton,s.params.prevSlideMsg);}$(s.container).append(s.a11y.liveRegion);},destroy:function destroy(){if(s.a11y.liveRegion && s.a11y.liveRegion.length > 0)s.a11y.liveRegion.remove();}}; /*=========================
	          Init/Destroy
	          ===========================*/s.init = function(){if(s.params.loop)s.createLoop();s.updateContainerSize();s.updateSlidesSize();s.updatePagination();if(s.params.scrollbar && s.scrollbar){s.scrollbar.set();}if(s.params.effect !== 'slide' && s.effects[s.params.effect]){if(!s.params.loop)s.updateProgress();s.effects[s.params.effect].setTranslate();}if(s.params.loop){s.slideTo(s.params.initialSlide + s.loopedSlides,0,s.params.runCallbacksOnInit);}else {s.slideTo(s.params.initialSlide,0,s.params.runCallbacksOnInit);if(s.params.initialSlide === 0){if(s.parallax && s.params.parallax)s.parallax.setTranslate();if(s.lazy && s.params.lazyLoading)s.lazy.load();}}s.attachEvents();if(s.params.observer && s.support.observer){s.initObservers();}if(s.params.preloadImages && !s.params.lazyLoading){s.preloadImages();}if(s.params.autoplay){s.startAutoplay();}if(s.params.keyboardControl){if(s.enableKeyboardControl)s.enableKeyboardControl();}if(s.params.mousewheelControl){if(s.enableMousewheelControl)s.enableMousewheelControl();}if(s.params.hashnav){if(s.hashnav)s.hashnav.init();}if(s.params.a11y && s.a11y)s.a11y.init();s.emit('onInit',s);}; // Cleanup dynamic styles
	s.cleanupStyles = function(){ // Container
	s.container.removeClass(s.classNames.join(' ')).removeAttr('style'); // Wrapper
	s.wrapper.removeAttr('style'); // Slides
	if(s.slides && s.slides.length){s.slides.removeClass([s.params.slideVisibleClass,s.params.slideActiveClass,s.params.slideNextClass,s.params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-column').removeAttr('data-swiper-row');} // Pagination/Bullets
	if(s.paginationContainer && s.paginationContainer.length){s.paginationContainer.removeClass(s.params.paginationHiddenClass);}if(s.bullets && s.bullets.length){s.bullets.removeClass(s.params.bulletActiveClass);} // Buttons
	if(s.params.prevButton)$(s.params.prevButton).removeClass(s.params.buttonDisabledClass);if(s.params.nextButton)$(s.params.nextButton).removeClass(s.params.buttonDisabledClass); // Scrollbar
	if(s.params.scrollbar && s.scrollbar){if(s.scrollbar.track && s.scrollbar.track.length)s.scrollbar.track.removeAttr('style');if(s.scrollbar.drag && s.scrollbar.drag.length)s.scrollbar.drag.removeAttr('style');}}; // Destroy
	s.destroy = function(deleteInstance,cleanupStyles){ // Detach evebts
	s.detachEvents(); // Stop autoplay
	s.stopAutoplay(); // Destroy loop
	if(s.params.loop){s.destroyLoop();} // Cleanup styles
	if(cleanupStyles){s.cleanupStyles();} // Disconnect observer
	s.disconnectObservers(); // Disable keyboard/mousewheel
	if(s.params.keyboardControl){if(s.disableKeyboardControl)s.disableKeyboardControl();}if(s.params.mousewheelControl){if(s.disableMousewheelControl)s.disableMousewheelControl();} // Disable a11y
	if(s.params.a11y && s.a11y)s.a11y.destroy(); // Destroy callback
	s.emit('onDestroy'); // Delete instance
	if(deleteInstance !== false)s = null;};s.init(); // Return swiper instance
	return s;}; /*==================================================
	        Prototype
	    ====================================================*/Swiper.prototype = {defaults:{direction:'horizontal',touchEventsTarget:'container',initialSlide:0,speed:300, // autoplay
	autoplay:false,autoplayDisableOnInteraction:true, // Free mode
	freeMode:false,freeModeMomentum:true,freeModeMomentumRatio:1,freeModeMomentumBounce:true,freeModeMomentumBounceRatio:1, // Set wrapper width
	setWrapperSize:false, // Virtual Translate
	virtualTranslate:false, // Effects
	effect:'slide', // 'slide' or 'fade' or 'cube' or 'coverflow'
	coverflow:{rotate:50,stretch:0,depth:100,modifier:1,slideShadows:true},cube:{slideShadows:true,shadow:true,shadowOffset:20,shadowScale:0.94},fade:{crossFade:false}, // Parallax
	parallax:false, // Scrollbar
	scrollbar:null,scrollbarHide:true, // Keyboard Mousewheel
	keyboardControl:false,mousewheelControl:false,mousewheelForceToAxis:false, // Hash Navigation
	hashnav:false, // Slides grid
	spaceBetween:0,slidesPerView:1,slidesPerColumn:1,slidesPerColumnFill:'column',slidesPerGroup:1,centeredSlides:false, // Touches
	touchRatio:1,touchAngle:45,simulateTouch:true,shortSwipes:true,longSwipes:true,longSwipesRatio:0.5,longSwipesMs:300,followFinger:true,onlyExternal:false,threshold:0,touchMoveStopPropagation:true, // Pagination
	pagination:null,paginationClickable:false,paginationHide:false,paginationBulletRender:null, // Resistance
	resistance:true,resistanceRatio:0.85, // Next/prev buttons
	nextButton:null,prevButton:null, // Progress
	watchSlidesProgress:false,watchSlidesVisibility:false, // Cursor
	grabCursor:false, // Clicks
	preventClicks:true,preventClicksPropagation:true,slideToClickedSlide:false, // Lazy Loading
	lazyLoading:false,lazyLoadingInPrevNext:false,lazyLoadingOnTransitionStart:false, // Images
	preloadImages:true,updateOnImagesReady:true, // loop
	loop:false,loopAdditionalSlides:0,loopedSlides:null, // Control
	control:undefined,controlInverse:false, // Swiping/no swiping
	allowSwipeToPrev:true,allowSwipeToNext:true,swipeHandler:null, //'.swipe-handler',
	noSwiping:true,noSwipingClass:'swiper-no-swiping', // NS
	slideClass:'swiper-slide',slideActiveClass:'swiper-slide-active',slideVisibleClass:'swiper-slide-visible',slideDuplicateClass:'swiper-slide-duplicate',slideNextClass:'swiper-slide-next',slidePrevClass:'swiper-slide-prev',wrapperClass:'swiper-wrapper',bulletClass:'swiper-pagination-bullet',bulletActiveClass:'swiper-pagination-bullet-active',buttonDisabledClass:'swiper-button-disabled',paginationHiddenClass:'swiper-pagination-hidden', // Observer
	observer:false,observeParents:false, // Accessibility
	a11y:false,prevSlideMessage:'Previous slide',nextSlideMessage:'Next slide',firstSlideMessage:'This is the first slide',lastSlideMessage:'This is the last slide', // Callbacks
	runCallbacksOnInit:true}, /*
	            Callbacks:
	            onInit: function (swiper)
	            onDestroy: function (swiper)
	            onClick: function (swiper, e)
	            onTap: function (swiper, e)
	            onDoubleTap: function (swiper, e)
	            onSliderMove: function (swiper, e)
	            onSlideChangeStart: function (swiper)
	            onSlideChangeEnd: function (swiper)
	            onTransitionStart: function (swiper)
	            onTransitionEnd: function (swiper)
	            onImagesReady: function (swiper)
	            onProgress: function (swiper, progress)
	            onTouchStart: function (swiper, e)
	            onTouchMove: function (swiper, e)
	            onTouchMoveOpposite: function (swiper, e)
	            onTouchEnd: function (swiper, e)
	            onReachBeginning: function (swiper)
	            onReachEnd: function (swiper)
	            onSetTransition: function (swiper, duration)
	            onSetTranslate: function (swiper, translate)
	            onAutoplayStart: function (swiper)
	            onAutoplayStop: function (swiper),
	            onLazyImageLoad: function (swiper, slide, image)
	            onLazyImageReady: function (swiper, slide, image)
	            */isSafari:(function(){var ua=navigator.userAgent.toLowerCase();return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;})(),isUiWebView:/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),isArray:function isArray(arr){return Object.prototype.toString.apply(arr) === '[object Array]';}, /*==================================================
	        Browser
	        ====================================================*/browser:{ie:window.navigator.pointerEnabled || window.navigator.msPointerEnabled,ieTouch:window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1}, /*==================================================
	        Devices
	        ====================================================*/device:(function(){var ua=navigator.userAgent;var android=ua.match(/(Android);?[\s\/]+([\d.]+)?/);var ipad=ua.match(/(iPad).*OS\s([\d_]+)/);var iphone=!ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);return {ios:ipad || iphone || ipad,android:android};})(), /*==================================================
	        Feature Detection
	        ====================================================*/support:{touch:window.Modernizr && Modernizr.touch === true || (function(){return !!('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);})(),transforms3d:window.Modernizr && Modernizr.csstransforms3d === true || (function(){var div=document.createElement('div').style;return 'webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div;})(),flexbox:(function(){var div=document.createElement('div').style;var styles='alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient'.split(' ');for(var i=0;i < styles.length;i++) {if(styles[i] in div)return true;}})(),observer:(function(){return 'MutationObserver' in window || 'WebkitMutationObserver' in window;})()}, /*==================================================
	        Plugins
	        ====================================================*/plugins:{}};$.Swiper = Swiper;})(Zepto); /*===========================
	Framework7 Swiper Additions
	===========================*/ /* global Zepto:true */+(function($){'use strict';$.Swiper.prototype.defaults.pagination = '.swiper-pagination';$.swiper = function(container,params){return new $.Swiper(container,params);};$.fn.swiper = function(params){return new $.Swiper(this,params);};$.initSwiper = function(pageContainer){var page=$(pageContainer || document.body);var swipers=page.find('.swiper-container');if(swipers.length === 0)return;function destroySwiperOnRemove(slider){function destroySwiper(){slider.destroy();page.off('pageBeforeRemove',destroySwiper);}page.on('pageBeforeRemove',destroySwiper);}for(var i=0;i < swipers.length;i++) {var swiper=swipers.eq(i);var params;if(swiper.data('swiper')){swiper.data("swiper").update(true);continue;}else {params = swiper.dataset();}var _slider=$.swiper(swiper[0],params);destroySwiperOnRemove(_slider);}};$.reinitSwiper = function(pageContainer){var page=$(pageContainer);var sliders=page.find('.swiper-container');if(sliders.length === 0)return;for(var i=0;i < sliders.length;i++) {var sliderInstance=sliders[0].swiper;if(sliderInstance){sliderInstance.update(true);}}};})(Zepto); /*======================================================
	************   Photo Browser   ************
	======================================================*/ /* global Zepto:true */+(function($){'use strict';var PhotoBrowser=function PhotoBrowser(params){var pb=this,i;var defaults=this.defaults;params = params || {};for(var def in defaults) {if(typeof params[def] === 'undefined'){params[def] = defaults[def];}}pb.params = params;var navbarTemplate=pb.params.navbarTemplate || '<header class="bar bar-nav">' + '<a class="icon icon-left pull-left photo-browser-close-link' + (pb.params.type === 'popup'?" close-popup":"") + '"></a>' + '<h1 class="title"><div class="center sliding"><span class="photo-browser-current"></span> <span class="photo-browser-of">' + pb.params.ofText + '</span> <span class="photo-browser-total"></span></div></h1>' + '</header>';var toolbarTemplate=pb.params.toolbarTemplate || '<nav class="bar bar-tab">' + '<a class="tab-item photo-browser-prev" href="#">' + '<i class="icon icon-prev"></i>' + '</a>' + '<a class="tab-item photo-browser-next" href="#">' + '<i class="icon icon-next"></i>' + '</a>' + '</nav>';var template=pb.params.template || '<div class="photo-browser photo-browser-' + pb.params.theme + '">' + '{{navbar}}' + '{{toolbar}}' + '<div data-page="photo-browser-slides" class="content">' + '{{captions}}' + '<div class="photo-browser-swiper-container swiper-container">' + '<div class="photo-browser-swiper-wrapper swiper-wrapper">' + '{{photos}}' + '</div>' + '</div>' + '</div>' + '</div>';var photoTemplate=!pb.params.lazyLoading?pb.params.photoTemplate || '<div class="photo-browser-slide swiper-slide"><span class="photo-browser-zoom-container"><img src="{{url}}"></span></div>':pb.params.photoLazyTemplate || '<div class="photo-browser-slide photo-browser-slide-lazy swiper-slide"><div class="preloader' + (pb.params.theme === 'dark'?' preloader-white':'') + '"></div><span class="photo-browser-zoom-container"><img data-src="{{url}}" class="swiper-lazy"></span></div>';var captionsTheme=pb.params.captionsTheme || pb.params.theme;var captionsTemplate=pb.params.captionsTemplate || '<div class="photo-browser-captions photo-browser-captions-' + captionsTheme + '">{{captions}}</div>';var captionTemplate=pb.params.captionTemplate || '<div class="photo-browser-caption" data-caption-index="{{captionIndex}}">{{caption}}</div>';var objectTemplate=pb.params.objectTemplate || '<div class="photo-browser-slide photo-browser-object-slide swiper-slide">{{html}}</div>';var photosHtml='';var captionsHtml='';for(i = 0;i < pb.params.photos.length;i++) {var photo=pb.params.photos[i];var thisTemplate=''; //check if photo is a string or string-like object, for backwards compatibility 
	if(typeof photo === 'string' || photo instanceof String){ //check if "photo" is html object
	if(photo.indexOf('<') >= 0 || photo.indexOf('>') >= 0){thisTemplate = objectTemplate.replace(/{{html}}/g,photo);}else {thisTemplate = photoTemplate.replace(/{{url}}/g,photo);} //photo is a string, thus has no caption, so remove the caption template placeholder
	//otherwise check if photo is an object with a url property
	}else if(typeof photo === 'object'){ //check if "photo" is html object
	if(photo.hasOwnProperty('html') && photo.html.length > 0){thisTemplate = objectTemplate.replace(/{{html}}/g,photo.html);}else if(photo.hasOwnProperty('url') && photo.url.length > 0){thisTemplate = photoTemplate.replace(/{{url}}/g,photo.url);} //check if photo has a caption
	if(photo.hasOwnProperty('caption') && photo.caption.length > 0){captionsHtml += captionTemplate.replace(/{{caption}}/g,photo.caption).replace(/{{captionIndex}}/g,i);}else {thisTemplate = thisTemplate.replace(/{{caption}}/g,'');}}photosHtml += thisTemplate;}var htmlTemplate=template.replace('{{navbar}}',pb.params.navbar?navbarTemplate:'').replace('{{noNavbar}}',pb.params.navbar?'':'no-navbar').replace('{{photos}}',photosHtml).replace('{{captions}}',captionsTemplate.replace(/{{captions}}/g,captionsHtml)).replace('{{toolbar}}',pb.params.toolbar?toolbarTemplate:'');pb.activeIndex = pb.params.initialSlide;pb.openIndex = pb.activeIndex;pb.opened = false;pb.open = function(index){if(typeof index === 'undefined')index = pb.activeIndex;index = parseInt(index,10);if(pb.opened && pb.swiper){pb.swiper.slideTo(index);return;}pb.opened = true;pb.openIndex = index; // pb.initialLazyLoaded = false;
	if(pb.params.type === 'standalone'){$(pb.params.container).append(htmlTemplate);}if(pb.params.type === 'popup'){pb.popup = $.popup('<div class="popup photo-browser-popup">' + htmlTemplate + '</div>');$(pb.popup).on('closed',pb.onPopupClose);}if(pb.params.type === 'page'){$(document).on('pageBeforeInit',pb.onPageBeforeInit);$(document).on('pageBeforeRemove',pb.onPageBeforeRemove);if(!pb.params.view)pb.params.view = $.mainView;pb.params.view.loadContent(htmlTemplate);return;}pb.layout(pb.openIndex);if(pb.params.onOpen){pb.params.onOpen(pb);}};pb.close = function(){pb.opened = false;if(!pb.swiperContainer || pb.swiperContainer.length === 0){return;}if(pb.params.onClose){pb.params.onClose(pb);} // Detach events
	pb.attachEvents(true); // Delete from DOM
	if(pb.params.type === 'standalone'){pb.container.removeClass('photo-browser-in').addClass('photo-browser-out').animationEnd(function(){pb.container.remove();});} // Destroy slider
	pb.swiper.destroy(); // Delete references
	pb.swiper = pb.swiperContainer = pb.swiperWrapper = pb.slides = gestureSlide = gestureImg = gestureImgWrap = undefined;};pb.onPopupClose = function(){pb.close();$(pb.popup).off('pageBeforeInit',pb.onPopupClose);};pb.onPageBeforeInit = function(e){if(e.detail.page.name === 'photo-browser-slides'){pb.layout(pb.openIndex);}$(document).off('pageBeforeInit',pb.onPageBeforeInit);};pb.onPageBeforeRemove = function(e){if(e.detail.page.name === 'photo-browser-slides'){pb.close();}$(document).off('pageBeforeRemove',pb.onPageBeforeRemove);};pb.onSliderTransitionStart = function(swiper){pb.activeIndex = swiper.activeIndex;var current=swiper.activeIndex + 1;var total=swiper.slides.length;if(pb.params.loop){total = total - 2;current = current - swiper.loopedSlides;if(current < 1)current = total + current;if(current > total)current = current - total;}pb.container.find('.photo-browser-current').text(current);pb.container.find('.photo-browser-total').text(total);$('.photo-browser-prev, .photo-browser-next').removeClass('photo-browser-link-inactive');if(swiper.isBeginning && !pb.params.loop){$('.photo-browser-prev').addClass('photo-browser-link-inactive');}if(swiper.isEnd && !pb.params.loop){$('.photo-browser-next').addClass('photo-browser-link-inactive');} // Update captions
	if(pb.captions.length > 0){pb.captionsContainer.find('.photo-browser-caption-active').removeClass('photo-browser-caption-active');var captionIndex=pb.params.loop?swiper.slides.eq(swiper.activeIndex).attr('data-swiper-slide-index'):pb.activeIndex;pb.captionsContainer.find('[data-caption-index="' + captionIndex + '"]').addClass('photo-browser-caption-active');} // Stop Video
	var previousSlideVideo=swiper.slides.eq(swiper.previousIndex).find('video');if(previousSlideVideo.length > 0){if('pause' in previousSlideVideo[0])previousSlideVideo[0].pause();} // Callback
	if(pb.params.onSlideChangeStart)pb.params.onSlideChangeStart(swiper);};pb.onSliderTransitionEnd = function(swiper){ // Reset zoom
	if(pb.params.zoom && gestureSlide && swiper.previousIndex !== swiper.activeIndex){gestureImg.transform('translate3d(0,0,0) scale(1)');gestureImgWrap.transform('translate3d(0,0,0)');gestureSlide = gestureImg = gestureImgWrap = undefined;scale = currentScale = 1;}if(pb.params.onSlideChangeEnd)pb.params.onSlideChangeEnd(swiper);};pb.layout = function(index){if(pb.params.type === 'page'){pb.container = $('.photo-browser-swiper-container').parents('.view');}else {pb.container = $('.photo-browser');}if(pb.params.type === 'standalone'){pb.container.addClass('photo-browser-in'); // $.sizeNavbars(pb.container);
	}pb.swiperContainer = pb.container.find('.photo-browser-swiper-container');pb.swiperWrapper = pb.container.find('.photo-browser-swiper-wrapper');pb.slides = pb.container.find('.photo-browser-slide');pb.captionsContainer = pb.container.find('.photo-browser-captions');pb.captions = pb.container.find('.photo-browser-caption');var sliderSettings={nextButton:pb.params.nextButton || '.photo-browser-next',prevButton:pb.params.prevButton || '.photo-browser-prev',indexButton:pb.params.indexButton,initialSlide:index,spaceBetween:pb.params.spaceBetween,speed:pb.params.speed,loop:pb.params.loop,lazyLoading:pb.params.lazyLoading,lazyLoadingInPrevNext:pb.params.lazyLoadingInPrevNext,lazyLoadingOnTransitionStart:pb.params.lazyLoadingOnTransitionStart,preloadImages:pb.params.lazyLoading?false:true,onTap:function onTap(swiper,e){if(pb.params.onTap)pb.params.onTap(swiper,e);},onClick:function onClick(swiper,e){if(pb.params.exposition)pb.toggleExposition();if(pb.params.onClick)pb.params.onClick(swiper,e);},onDoubleTap:function onDoubleTap(swiper,e){pb.toggleZoom($(e.target).parents('.photo-browser-slide'));if(pb.params.onDoubleTap)pb.params.onDoubleTap(swiper,e);},onTransitionStart:function onTransitionStart(swiper){pb.onSliderTransitionStart(swiper);},onTransitionEnd:function onTransitionEnd(swiper){pb.onSliderTransitionEnd(swiper);},onLazyImageLoad:function onLazyImageLoad(swiper,slide,img){if(pb.params.onLazyImageLoad)pb.params.onLazyImageLoad(pb,slide,img);},onLazyImageReady:function onLazyImageReady(swiper,slide,img){$(slide).removeClass('photo-browser-slide-lazy');if(pb.params.onLazyImageReady)pb.params.onLazyImageReady(pb,slide,img);}};if(pb.params.swipeToClose && pb.params.type !== 'page'){sliderSettings.onTouchStart = pb.swipeCloseTouchStart;sliderSettings.onTouchMoveOpposite = pb.swipeCloseTouchMove;sliderSettings.onTouchEnd = pb.swipeCloseTouchEnd;}pb.swiper = $.swiper(pb.swiperContainer,sliderSettings);if(index === 0){pb.onSliderTransitionStart(pb.swiper);}pb.attachEvents();};pb.attachEvents = function(detach){var action=detach?'off':'on'; // Slide between photos
	if(pb.params.zoom){var target=pb.params.loop?pb.swiper.slides:pb.slides; // Scale image
	target[action]('gesturestart',pb.onSlideGestureStart);target[action]('gesturechange',pb.onSlideGestureChange);target[action]('gestureend',pb.onSlideGestureEnd); // Move image
	target[action]('touchstart',pb.onSlideTouchStart);target[action]('touchmove',pb.onSlideTouchMove);target[action]('touchend',pb.onSlideTouchEnd);}pb.container.find('.photo-browser-close-link')[action]('click',pb.close);}; // Expose
	pb.exposed = false;pb.toggleExposition = function(){if(pb.container)pb.container.toggleClass('photo-browser-exposed');if(pb.params.expositionHideCaptions)pb.captionsContainer.toggleClass('photo-browser-captions-exposed');pb.exposed = !pb.exposed;};pb.enableExposition = function(){if(pb.container)pb.container.addClass('photo-browser-exposed');if(pb.params.expositionHideCaptions)pb.captionsContainer.addClass('photo-browser-captions-exposed');pb.exposed = true;};pb.disableExposition = function(){if(pb.container)pb.container.removeClass('photo-browser-exposed');if(pb.params.expositionHideCaptions)pb.captionsContainer.removeClass('photo-browser-captions-exposed');pb.exposed = false;}; // Gestures
	var gestureSlide,gestureImg,gestureImgWrap,scale=1,currentScale=1,isScaling=false;pb.onSlideGestureStart = function(){if(!gestureSlide){gestureSlide = $(this);gestureImg = gestureSlide.find('img, svg, canvas');gestureImgWrap = gestureImg.parent('.photo-browser-zoom-container');if(gestureImgWrap.length === 0){gestureImg = undefined;return;}}gestureImg.transition(0);isScaling = true;};pb.onSlideGestureChange = function(e){if(!gestureImg || gestureImg.length === 0)return;scale = e.scale * currentScale;if(scale > pb.params.maxZoom){scale = pb.params.maxZoom - 1 + Math.pow(scale - pb.params.maxZoom + 1,0.5);}if(scale < pb.params.minZoom){scale = pb.params.minZoom + 1 - Math.pow(pb.params.minZoom - scale + 1,0.5);}gestureImg.transform('translate3d(0,0,0) scale(' + scale + ')');};pb.onSlideGestureEnd = function(){if(!gestureImg || gestureImg.length === 0)return;scale = Math.max(Math.min(scale,pb.params.maxZoom),pb.params.minZoom);gestureImg.transition(pb.params.speed).transform('translate3d(0,0,0) scale(' + scale + ')');currentScale = scale;isScaling = false;if(scale === 1)gestureSlide = undefined;};pb.toggleZoom = function(){if(!gestureSlide){gestureSlide = pb.swiper.slides.eq(pb.swiper.activeIndex);gestureImg = gestureSlide.find('img, svg, canvas');gestureImgWrap = gestureImg.parent('.photo-browser-zoom-container');}if(!gestureImg || gestureImg.length === 0)return;gestureImgWrap.transition(300).transform('translate3d(0,0,0)');if(scale && scale !== 1){scale = currentScale = 1;gestureImg.transition(300).transform('translate3d(0,0,0) scale(1)');gestureSlide = undefined;}else {scale = currentScale = pb.params.maxZoom;gestureImg.transition(300).transform('translate3d(0,0,0) scale(' + scale + ')');}};var imageIsTouched,imageIsMoved,imageCurrentX,imageCurrentY,imageMinX,imageMinY,imageMaxX,imageMaxY,imageWidth,imageHeight,imageTouchesStart={},imageTouchesCurrent={},imageStartX,imageStartY,velocityPrevPositionX,velocityPrevTime,velocityX,velocityPrevPositionY,velocityY;pb.onSlideTouchStart = function(e){if(!gestureImg || gestureImg.length === 0)return;if(imageIsTouched)return;if($.device.os === 'android')e.preventDefault();imageIsTouched = true;imageTouchesStart.x = e.type === 'touchstart'?e.targetTouches[0].pageX:e.pageX;imageTouchesStart.y = e.type === 'touchstart'?e.targetTouches[0].pageY:e.pageY;};pb.onSlideTouchMove = function(e){if(!gestureImg || gestureImg.length === 0)return;pb.swiper.allowClick = false;if(!imageIsTouched || !gestureSlide)return;if(!imageIsMoved){imageWidth = gestureImg[0].offsetWidth;imageHeight = gestureImg[0].offsetHeight;imageStartX = $.getTranslate(gestureImgWrap[0],'x') || 0;imageStartY = $.getTranslate(gestureImgWrap[0],'y') || 0;gestureImgWrap.transition(0);} // Define if we need image drag
	var scaledWidth=imageWidth * scale;var scaledHeight=imageHeight * scale;if(scaledWidth < pb.swiper.width && scaledHeight < pb.swiper.height)return;imageMinX = Math.min(pb.swiper.width / 2 - scaledWidth / 2,0);imageMaxX = -imageMinX;imageMinY = Math.min(pb.swiper.height / 2 - scaledHeight / 2,0);imageMaxY = -imageMinY;imageTouchesCurrent.x = e.type === 'touchmove'?e.targetTouches[0].pageX:e.pageX;imageTouchesCurrent.y = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;if(!imageIsMoved && !isScaling){if(Math.floor(imageMinX) === Math.floor(imageStartX) && imageTouchesCurrent.x < imageTouchesStart.x || Math.floor(imageMaxX) === Math.floor(imageStartX) && imageTouchesCurrent.x > imageTouchesStart.x){imageIsTouched = false;return;}}e.preventDefault();e.stopPropagation();imageIsMoved = true;imageCurrentX = imageTouchesCurrent.x - imageTouchesStart.x + imageStartX;imageCurrentY = imageTouchesCurrent.y - imageTouchesStart.y + imageStartY;if(imageCurrentX < imageMinX){imageCurrentX = imageMinX + 1 - Math.pow(imageMinX - imageCurrentX + 1,0.8);}if(imageCurrentX > imageMaxX){imageCurrentX = imageMaxX - 1 + Math.pow(imageCurrentX - imageMaxX + 1,0.8);}if(imageCurrentY < imageMinY){imageCurrentY = imageMinY + 1 - Math.pow(imageMinY - imageCurrentY + 1,0.8);}if(imageCurrentY > imageMaxY){imageCurrentY = imageMaxY - 1 + Math.pow(imageCurrentY - imageMaxY + 1,0.8);} //Velocity
	if(!velocityPrevPositionX)velocityPrevPositionX = imageTouchesCurrent.x;if(!velocityPrevPositionY)velocityPrevPositionY = imageTouchesCurrent.y;if(!velocityPrevTime)velocityPrevTime = Date.now();velocityX = (imageTouchesCurrent.x - velocityPrevPositionX) / (Date.now() - velocityPrevTime) / 2;velocityY = (imageTouchesCurrent.y - velocityPrevPositionY) / (Date.now() - velocityPrevTime) / 2;if(Math.abs(imageTouchesCurrent.x - velocityPrevPositionX) < 2)velocityX = 0;if(Math.abs(imageTouchesCurrent.y - velocityPrevPositionY) < 2)velocityY = 0;velocityPrevPositionX = imageTouchesCurrent.x;velocityPrevPositionY = imageTouchesCurrent.y;velocityPrevTime = Date.now();gestureImgWrap.transform('translate3d(' + imageCurrentX + 'px, ' + imageCurrentY + 'px,0)');};pb.onSlideTouchEnd = function(){if(!gestureImg || gestureImg.length === 0)return;if(!imageIsTouched || !imageIsMoved){imageIsTouched = false;imageIsMoved = false;return;}imageIsTouched = false;imageIsMoved = false;var momentumDurationX=300;var momentumDurationY=300;var momentumDistanceX=velocityX * momentumDurationX;var newPositionX=imageCurrentX + momentumDistanceX;var momentumDistanceY=velocityY * momentumDurationY;var newPositionY=imageCurrentY + momentumDistanceY; //Fix duration
	if(velocityX !== 0)momentumDurationX = Math.abs((newPositionX - imageCurrentX) / velocityX);if(velocityY !== 0)momentumDurationY = Math.abs((newPositionY - imageCurrentY) / velocityY);var momentumDuration=Math.max(momentumDurationX,momentumDurationY);imageCurrentX = newPositionX;imageCurrentY = newPositionY; // Define if we need image drag
	var scaledWidth=imageWidth * scale;var scaledHeight=imageHeight * scale;imageMinX = Math.min(pb.swiper.width / 2 - scaledWidth / 2,0);imageMaxX = -imageMinX;imageMinY = Math.min(pb.swiper.height / 2 - scaledHeight / 2,0);imageMaxY = -imageMinY;imageCurrentX = Math.max(Math.min(imageCurrentX,imageMaxX),imageMinX);imageCurrentY = Math.max(Math.min(imageCurrentY,imageMaxY),imageMinY);gestureImgWrap.transition(momentumDuration).transform('translate3d(' + imageCurrentX + 'px, ' + imageCurrentY + 'px,0)');}; // Swipe Up To Close
	var swipeToCloseIsTouched=false;var allowSwipeToClose=true;var swipeToCloseDiff,swipeToCloseStart,swipeToCloseCurrent,swipeToCloseStarted=false,swipeToCloseActiveSlide,swipeToCloseTimeStart;pb.swipeCloseTouchStart = function(){if(!allowSwipeToClose)return;swipeToCloseIsTouched = true;};pb.swipeCloseTouchMove = function(swiper,e){if(!swipeToCloseIsTouched)return;if(!swipeToCloseStarted){swipeToCloseStarted = true;swipeToCloseStart = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;swipeToCloseActiveSlide = pb.swiper.slides.eq(pb.swiper.activeIndex);swipeToCloseTimeStart = new Date().getTime();}e.preventDefault();swipeToCloseCurrent = e.type === 'touchmove'?e.targetTouches[0].pageY:e.pageY;swipeToCloseDiff = swipeToCloseStart - swipeToCloseCurrent;var opacity=1 - Math.abs(swipeToCloseDiff) / 300;swipeToCloseActiveSlide.transform('translate3d(0,' + -swipeToCloseDiff + 'px,0)');pb.swiper.container.css('opacity',opacity).transition(0);};pb.swipeCloseTouchEnd = function(){swipeToCloseIsTouched = false;if(!swipeToCloseStarted){swipeToCloseStarted = false;return;}swipeToCloseStarted = false;allowSwipeToClose = false;var diff=Math.abs(swipeToCloseDiff);var timeDiff=new Date().getTime() - swipeToCloseTimeStart;if(timeDiff < 300 && diff > 20 || timeDiff >= 300 && diff > 100){setTimeout(function(){if(pb.params.type === 'standalone'){pb.close();}if(pb.params.type === 'popup'){$.closeModal(pb.popup);}if(pb.params.onSwipeToClose){pb.params.onSwipeToClose(pb);}allowSwipeToClose = true;},0);return;}if(diff !== 0){swipeToCloseActiveSlide.addClass('transitioning').transitionEnd(function(){allowSwipeToClose = true;swipeToCloseActiveSlide.removeClass('transitioning');});}else {allowSwipeToClose = true;}pb.swiper.container.css('opacity','').transition('');swipeToCloseActiveSlide.transform('');};return pb;};PhotoBrowser.prototype = {defaults:{photos:[],container:'body',initialSlide:0,spaceBetween:20,speed:300,zoom:true,maxZoom:3,minZoom:1,exposition:true,expositionHideCaptions:false,type:'standalone',navbar:true,toolbar:true,theme:'light',swipeToClose:true,backLinkText:'Close',ofText:'of',loop:false,lazyLoading:false,lazyLoadingInPrevNext:false,lazyLoadingOnTransitionStart:false}}; /*
	            Callbacks:
	            onLazyImageLoad(pb, slide, img)
	            onLazyImageReady(pb, slide, img)
	            onOpen(pb)
	            onClose(pb)
	            onSlideChangeStart(swiper)
	            onSlideChangeEnd(swiper)
	            onTap(swiper, e)
	            onClick(swiper, e)
	            onDoubleTap(swiper, e)
	            onSwipeToClose(pb)
	            */$.photoBrowser = function(params){$.extend(params,$.photoBrowser.prototype.defaults);return new PhotoBrowser(params);};$.photoBrowser.prototype = {defaults:{}};})(Zepto); /* global DocumentTouch:true */

/***/ },
/* 5 */
/***/ function(module, exports) {

	/*!
	 * =====================================================
	 * SUI Mobile - http://m.sui.taobao.org/
	 *
	 * =====================================================
	 */"use strict";+(function($){$.smConfig.rawCitiesData = [{"name":"北京","sub":[{"name":"请选择"},{"name":"东城区"},{"name":"西城区"},{"name":"崇文区"},{"name":"宣武区"},{"name":"朝阳区"},{"name":"海淀区"},{"name":"丰台区"},{"name":"石景山区"},{"name":"房山区"},{"name":"通州区"},{"name":"顺义区"},{"name":"昌平区"},{"name":"大兴区"},{"name":"怀柔区"},{"name":"平谷区"},{"name":"门头沟区"},{"name":"密云县"},{"name":"延庆县"},{"name":"其他"}],"type":0},{"name":"广东","sub":[{"name":"请选择","sub":[]},{"name":"广州","sub":[{"name":"请选择"},{"name":"越秀区"},{"name":"荔湾区"},{"name":"海珠区"},{"name":"天河区"},{"name":"白云区"},{"name":"黄埔区"},{"name":"番禺区"},{"name":"花都区"},{"name":"南沙区"},{"name":"萝岗区"},{"name":"增城市"},{"name":"从化市"},{"name":"其他"}],"type":0},{"name":"深圳","sub":[{"name":"请选择"},{"name":"福田区"},{"name":"罗湖区"},{"name":"南山区"},{"name":"宝安区"},{"name":"龙岗区"},{"name":"盐田区"},{"name":"其他"}],"type":0},{"name":"珠海","sub":[{"name":"请选择"},{"name":"香洲区"},{"name":"斗门区"},{"name":"金湾区"},{"name":"其他"}],"type":0},{"name":"汕头","sub":[{"name":"请选择"},{"name":"金平区"},{"name":"濠江区"},{"name":"龙湖区"},{"name":"潮阳区"},{"name":"潮南区"},{"name":"澄海区"},{"name":"南澳县"},{"name":"其他"}],"type":0},{"name":"韶关","sub":[{"name":"请选择"},{"name":"浈江区"},{"name":"武江区"},{"name":"曲江区"},{"name":"乐昌市"},{"name":"南雄市"},{"name":"始兴县"},{"name":"仁化县"},{"name":"翁源县"},{"name":"新丰县"},{"name":"乳源瑶族自治县"},{"name":"其他"}],"type":0},{"name":"佛山","sub":[{"name":"请选择"},{"name":"禅城区"},{"name":"南海区"},{"name":"顺德区"},{"name":"三水区"},{"name":"高明区"},{"name":"其他"}],"type":0},{"name":"江门","sub":[{"name":"请选择"},{"name":"蓬江区"},{"name":"江海区"},{"name":"新会区"},{"name":"恩平市"},{"name":"台山市"},{"name":"开平市"},{"name":"鹤山市"},{"name":"其他"}],"type":0},{"name":"湛江","sub":[{"name":"请选择"},{"name":"赤坎区"},{"name":"霞山区"},{"name":"坡头区"},{"name":"麻章区"},{"name":"吴川市"},{"name":"廉江市"},{"name":"雷州市"},{"name":"遂溪县"},{"name":"徐闻县"},{"name":"其他"}],"type":0},{"name":"茂名","sub":[{"name":"请选择"},{"name":"茂南区"},{"name":"茂港区"},{"name":"化州市"},{"name":"信宜市"},{"name":"高州市"},{"name":"电白县"},{"name":"其他"}],"type":0},{"name":"肇庆","sub":[{"name":"请选择"},{"name":"端州区"},{"name":"鼎湖区"},{"name":"高要市"},{"name":"四会市"},{"name":"广宁县"},{"name":"怀集县"},{"name":"封开县"},{"name":"德庆县"},{"name":"其他"}],"type":0},{"name":"惠州","sub":[{"name":"请选择"},{"name":"惠城区"},{"name":"惠阳区"},{"name":"博罗县"},{"name":"惠东县"},{"name":"龙门县"},{"name":"其他"}],"type":0},{"name":"梅州","sub":[{"name":"请选择"},{"name":"梅江区"},{"name":"兴宁市"},{"name":"梅县"},{"name":"大埔县"},{"name":"丰顺县"},{"name":"五华县"},{"name":"平远县"},{"name":"蕉岭县"},{"name":"其他"}],"type":0},{"name":"汕尾","sub":[{"name":"请选择"},{"name":"城区"},{"name":"陆丰市"},{"name":"海丰县"},{"name":"陆河县"},{"name":"其他"}],"type":0},{"name":"河源","sub":[{"name":"请选择"},{"name":"源城区"},{"name":"紫金县"},{"name":"龙川县"},{"name":"连平县"},{"name":"和平县"},{"name":"东源县"},{"name":"其他"}],"type":0},{"name":"阳江","sub":[{"name":"请选择"},{"name":"江城区"},{"name":"阳春市"},{"name":"阳西县"},{"name":"阳东县"},{"name":"其他"}],"type":0},{"name":"清远","sub":[{"name":"请选择"},{"name":"清城区"},{"name":"英德市"},{"name":"连州市"},{"name":"佛冈县"},{"name":"阳山县"},{"name":"清新县"},{"name":"连山壮族瑶族自治县"},{"name":"连南瑶族自治县"},{"name":"其他"}],"type":0},{"name":"东莞","sub":[],"type":0},{"name":"中山","sub":[],"type":0},{"name":"潮州","sub":[{"name":"请选择"},{"name":"湘桥区"},{"name":"潮安县"},{"name":"饶平县"},{"name":"其他"}],"type":0},{"name":"揭阳","sub":[{"name":"请选择"},{"name":"榕城区"},{"name":"普宁市"},{"name":"揭东县"},{"name":"揭西县"},{"name":"惠来县"},{"name":"其他"}],"type":0},{"name":"云浮","sub":[{"name":"请选择"},{"name":"云城区"},{"name":"罗定市"},{"name":"云安县"},{"name":"新兴县"},{"name":"郁南县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"上海","sub":[{"name":"请选择"},{"name":"黄浦区"},{"name":"卢湾区"},{"name":"徐汇区"},{"name":"长宁区"},{"name":"静安区"},{"name":"普陀区"},{"name":"闸北区"},{"name":"虹口区"},{"name":"杨浦区"},{"name":"宝山区"},{"name":"闵行区"},{"name":"嘉定区"},{"name":"松江区"},{"name":"金山区"},{"name":"青浦区"},{"name":"南汇区"},{"name":"奉贤区"},{"name":"浦东新区"},{"name":"崇明县"},{"name":"其他"}],"type":0},{"name":"天津","sub":[{"name":"请选择"},{"name":"和平区"},{"name":"河东区"},{"name":"河西区"},{"name":"南开区"},{"name":"河北区"},{"name":"红桥区"},{"name":"塘沽区"},{"name":"汉沽区"},{"name":"大港区"},{"name":"东丽区"},{"name":"西青区"},{"name":"北辰区"},{"name":"津南区"},{"name":"武清区"},{"name":"宝坻区"},{"name":"静海县"},{"name":"宁河县"},{"name":"蓟县"},{"name":"其他"}],"type":0},{"name":"重庆","sub":[{"name":"请选择"},{"name":"渝中区"},{"name":"大渡口区"},{"name":"江北区"},{"name":"南岸区"},{"name":"北碚区"},{"name":"渝北区"},{"name":"巴南区"},{"name":"长寿区"},{"name":"双桥区"},{"name":"沙坪坝区"},{"name":"万盛区"},{"name":"万州区"},{"name":"涪陵区"},{"name":"黔江区"},{"name":"永川区"},{"name":"合川区"},{"name":"江津区"},{"name":"九龙坡区"},{"name":"南川区"},{"name":"綦江县"},{"name":"潼南县"},{"name":"荣昌县"},{"name":"璧山县"},{"name":"大足县"},{"name":"铜梁县"},{"name":"梁平县"},{"name":"开县"},{"name":"忠县"},{"name":"城口县"},{"name":"垫江县"},{"name":"武隆县"},{"name":"丰都县"},{"name":"奉节县"},{"name":"云阳县"},{"name":"巫溪县"},{"name":"巫山县"},{"name":"石柱土家族自治县"},{"name":"秀山土家族苗族自治县"},{"name":"酉阳土家族苗族自治县"},{"name":"彭水苗族土家族自治县"},{"name":"其他"}],"type":0},{"name":"辽宁","sub":[{"name":"请选择","sub":[]},{"name":"沈阳","sub":[{"name":"请选择"},{"name":"沈河区"},{"name":"皇姑区"},{"name":"和平区"},{"name":"大东区"},{"name":"铁西区"},{"name":"苏家屯区"},{"name":"东陵区"},{"name":"于洪区"},{"name":"新民市"},{"name":"法库县"},{"name":"辽中县"},{"name":"康平县"},{"name":"新城子区"},{"name":"其他"}],"type":0},{"name":"大连","sub":[{"name":"请选择"},{"name":"西岗区"},{"name":"中山区"},{"name":"沙河口区"},{"name":"甘井子区"},{"name":"旅顺口区"},{"name":"金州区"},{"name":"瓦房店市"},{"name":"普兰店市"},{"name":"庄河市"},{"name":"长海县"},{"name":"其他"}],"type":0},{"name":"鞍山","sub":[{"name":"请选择"},{"name":"铁东区"},{"name":"铁西区"},{"name":"立山区"},{"name":"千山区"},{"name":"海城市"},{"name":"台安县"},{"name":"岫岩满族自治县"},{"name":"其他"}],"type":0},{"name":"抚顺","sub":[{"name":"请选择"},{"name":"顺城区"},{"name":"新抚区"},{"name":"东洲区"},{"name":"望花区"},{"name":"抚顺县"},{"name":"清原满族自治县"},{"name":"新宾满族自治县"},{"name":"其他"}],"type":0},{"name":"本溪","sub":[{"name":"请选择"},{"name":"平山区"},{"name":"明山区"},{"name":"溪湖区"},{"name":"南芬区"},{"name":"本溪满族自治县"},{"name":"桓仁满族自治县"},{"name":"其他"}],"type":0},{"name":"丹东","sub":[{"name":"请选择"},{"name":"振兴区"},{"name":"元宝区"},{"name":"振安区"},{"name":"东港市"},{"name":"凤城市"},{"name":"宽甸满族自治县"},{"name":"其他"}],"type":0},{"name":"锦州","sub":[{"name":"请选择"},{"name":"太和区"},{"name":"古塔区"},{"name":"凌河区"},{"name":"凌海市"},{"name":"黑山县"},{"name":"义县"},{"name":"北宁市"},{"name":"其他"}],"type":0},{"name":"营口","sub":[{"name":"请选择"},{"name":"站前区"},{"name":"西市区"},{"name":"鲅鱼圈区"},{"name":"老边区"},{"name":"大石桥市"},{"name":"盖州市"},{"name":"其他"}],"type":0},{"name":"阜新","sub":[{"name":"请选择"},{"name":"海州区"},{"name":"新邱区"},{"name":"太平区"},{"name":"清河门区"},{"name":"细河区"},{"name":"彰武县"},{"name":"阜新蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"辽阳","sub":[{"name":"请选择"},{"name":"白塔区"},{"name":"文圣区"},{"name":"宏伟区"},{"name":"太子河区"},{"name":"弓长岭区"},{"name":"灯塔市"},{"name":"辽阳县"},{"name":"其他"}],"type":0},{"name":"盘锦","sub":[{"name":"请选择"},{"name":"双台子区"},{"name":"兴隆台区"},{"name":"盘山县"},{"name":"大洼县"},{"name":"其他"}],"type":0},{"name":"铁岭","sub":[{"name":"请选择"},{"name":"银州区"},{"name":"清河区"},{"name":"调兵山市"},{"name":"开原市"},{"name":"铁岭县"},{"name":"昌图县"},{"name":"西丰县"},{"name":"其他"}],"type":0},{"name":"朝阳","sub":[{"name":"请选择"},{"name":"双塔区"},{"name":"龙城区"},{"name":"凌源市"},{"name":"北票市"},{"name":"朝阳县"},{"name":"建平县"},{"name":"喀喇沁左翼蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"葫芦岛","sub":[{"name":"请选择"},{"name":"龙港区"},{"name":"南票区"},{"name":"连山区"},{"name":"兴城市"},{"name":"绥中县"},{"name":"建昌县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"江苏","sub":[{"name":"请选择","sub":[]},{"name":"南京","sub":[{"name":"请选择"},{"name":"玄武区"},{"name":"白下区"},{"name":"秦淮区"},{"name":"建邺区"},{"name":"鼓楼区"},{"name":"下关区"},{"name":"栖霞区"},{"name":"雨花台区"},{"name":"浦口区"},{"name":"江宁区"},{"name":"六合区"},{"name":"溧水县"},{"name":"高淳县"},{"name":"其他"}],"type":0},{"name":"苏州","sub":[{"name":"请选择"},{"name":"金阊区"},{"name":"平江区"},{"name":"沧浪区"},{"name":"虎丘区"},{"name":"吴中区"},{"name":"相城区"},{"name":"常熟市"},{"name":"张家港市"},{"name":"昆山市"},{"name":"吴江市"},{"name":"太仓市"},{"name":"其他"}],"type":0},{"name":"无锡","sub":[{"name":"请选择"},{"name":"崇安区"},{"name":"南长区"},{"name":"北塘区"},{"name":"滨湖区"},{"name":"锡山区"},{"name":"惠山区"},{"name":"江阴市"},{"name":"宜兴市"},{"name":"其他"}],"type":0},{"name":"常州","sub":[{"name":"请选择"},{"name":"钟楼区"},{"name":"天宁区"},{"name":"戚墅堰区"},{"name":"新北区"},{"name":"武进区"},{"name":"金坛市"},{"name":"溧阳市"},{"name":"其他"}],"type":0},{"name":"镇江","sub":[{"name":"请选择"},{"name":"京口区"},{"name":"润州区"},{"name":"丹徒区"},{"name":"丹阳市"},{"name":"扬中市"},{"name":"句容市"},{"name":"其他"}],"type":0},{"name":"南通","sub":[{"name":"请选择"},{"name":"崇川区"},{"name":"港闸区"},{"name":"通州市"},{"name":"如皋市"},{"name":"海门市"},{"name":"启东市"},{"name":"海安县"},{"name":"如东县"},{"name":"其他"}],"type":0},{"name":"泰州","sub":[{"name":"请选择"},{"name":"海陵区"},{"name":"高港区"},{"name":"姜堰市"},{"name":"泰兴市"},{"name":"靖江市"},{"name":"兴化市"},{"name":"其他"}],"type":0},{"name":"扬州","sub":[{"name":"请选择"},{"name":"广陵区"},{"name":"维扬区"},{"name":"邗江区"},{"name":"江都市"},{"name":"仪征市"},{"name":"高邮市"},{"name":"宝应县"},{"name":"其他"}],"type":0},{"name":"盐城","sub":[{"name":"请选择"},{"name":"亭湖区"},{"name":"盐都区"},{"name":"大丰市"},{"name":"东台市"},{"name":"建湖县"},{"name":"射阳县"},{"name":"阜宁县"},{"name":"滨海县"},{"name":"响水县"},{"name":"其他"}],"type":0},{"name":"连云港","sub":[{"name":"请选择"},{"name":"新浦区"},{"name":"海州区"},{"name":"连云区"},{"name":"东海县"},{"name":"灌云县"},{"name":"赣榆县"},{"name":"灌南县"},{"name":"其他"}],"type":0},{"name":"徐州","sub":[{"name":"请选择"},{"name":"云龙区"},{"name":"鼓楼区"},{"name":"九里区"},{"name":"泉山区"},{"name":"贾汪区"},{"name":"邳州市"},{"name":"新沂市"},{"name":"铜山县"},{"name":"睢宁县"},{"name":"沛县"},{"name":"丰县"},{"name":"其他"}],"type":0},{"name":"淮安","sub":[{"name":"请选择"},{"name":"清河区"},{"name":"清浦区"},{"name":"楚州区"},{"name":"淮阴区"},{"name":"涟水县"},{"name":"洪泽县"},{"name":"金湖县"},{"name":"盱眙县"},{"name":"其他"}],"type":0},{"name":"宿迁","sub":[{"name":"请选择"},{"name":"宿城区"},{"name":"宿豫区"},{"name":"沭阳县"},{"name":"泗阳县"},{"name":"泗洪县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"湖北","sub":[{"name":"请选择","sub":[]},{"name":"武汉","sub":[{"name":"请选择"},{"name":"江岸区"},{"name":"武昌区"},{"name":"江汉区"},{"name":"硚口区"},{"name":"汉阳区"},{"name":"青山区"},{"name":"洪山区"},{"name":"东西湖区"},{"name":"汉南区"},{"name":"蔡甸区"},{"name":"江夏区"},{"name":"黄陂区"},{"name":"新洲区"},{"name":"其他"}],"type":0},{"name":"黄石","sub":[{"name":"请选择"},{"name":"黄石港区"},{"name":"西塞山区"},{"name":"下陆区"},{"name":"铁山区"},{"name":"大冶市"},{"name":"阳新县"},{"name":"其他"}],"type":0},{"name":"十堰","sub":[{"name":"请选择"},{"name":"张湾区"},{"name":"茅箭区"},{"name":"丹江口市"},{"name":"郧县"},{"name":"竹山县"},{"name":"房县"},{"name":"郧西县"},{"name":"竹溪县"},{"name":"其他"}],"type":0},{"name":"荆州","sub":[{"name":"请选择"},{"name":"沙市区"},{"name":"荆州区"},{"name":"洪湖市"},{"name":"石首市"},{"name":"松滋市"},{"name":"监利县"},{"name":"公安县"},{"name":"江陵县"},{"name":"其他"}],"type":0},{"name":"宜昌","sub":[{"name":"请选择"},{"name":"西陵区"},{"name":"伍家岗区"},{"name":"点军区"},{"name":"猇亭区"},{"name":"夷陵区"},{"name":"宜都市"},{"name":"当阳市"},{"name":"枝江市"},{"name":"秭归县"},{"name":"远安县"},{"name":"兴山县"},{"name":"五峰土家族自治县"},{"name":"长阳土家族自治县"},{"name":"其他"}],"type":0},{"name":"襄樊","sub":[{"name":"请选择"},{"name":"襄城区"},{"name":"樊城区"},{"name":"襄阳区"},{"name":"老河口市"},{"name":"枣阳市"},{"name":"宜城市"},{"name":"南漳县"},{"name":"谷城县"},{"name":"保康县"},{"name":"其他"}],"type":0},{"name":"鄂州","sub":[{"name":"请选择"},{"name":"鄂城区"},{"name":"华容区"},{"name":"梁子湖区"},{"name":"其他"}],"type":0},{"name":"荆门","sub":[{"name":"请选择"},{"name":"东宝区"},{"name":"掇刀区"},{"name":"钟祥市"},{"name":"京山县"},{"name":"沙洋县"},{"name":"其他"}],"type":0},{"name":"孝感","sub":[{"name":"请选择"},{"name":"孝南区"},{"name":"应城市"},{"name":"安陆市"},{"name":"汉川市"},{"name":"云梦县"},{"name":"大悟县"},{"name":"孝昌县"},{"name":"其他"}],"type":0},{"name":"黄冈","sub":[{"name":"请选择"},{"name":"黄州区"},{"name":"麻城市"},{"name":"武穴市"},{"name":"红安县"},{"name":"罗田县"},{"name":"浠水县"},{"name":"蕲春县"},{"name":"黄梅县"},{"name":"英山县"},{"name":"团风县"},{"name":"其他"}],"type":0},{"name":"咸宁","sub":[{"name":"请选择"},{"name":"咸安区"},{"name":"赤壁市"},{"name":"嘉鱼县"},{"name":"通山县"},{"name":"崇阳县"},{"name":"通城县"},{"name":"其他"}],"type":0},{"name":"随州","sub":[{"name":"请选择"},{"name":"曾都区"},{"name":"广水市"},{"name":"其他"}],"type":0},{"name":"恩施土家族苗族自治州","sub":[{"name":"请选择"},{"name":"恩施市"},{"name":"利川市"},{"name":"建始县"},{"name":"来凤县"},{"name":"巴东县"},{"name":"鹤峰县"},{"name":"宣恩县"},{"name":"咸丰县"},{"name":"其他"}],"type":0},{"name":"仙桃","sub":[],"type":0},{"name":"天门","sub":[],"type":0},{"name":"潜江","sub":[],"type":0},{"name":"神农架林区","sub":[],"type":0},{"name":"其他"}],"type":1},{"name":"四川","sub":[{"name":"请选择","sub":[]},{"name":"成都","sub":[{"name":"请选择"},{"name":"青羊区"},{"name":"锦江区"},{"name":"金牛区"},{"name":"武侯区"},{"name":"成华区"},{"name":"龙泉驿区"},{"name":"青白江区"},{"name":"新都区"},{"name":"温江区"},{"name":"都江堰市"},{"name":"彭州市"},{"name":"邛崃市"},{"name":"崇州市"},{"name":"金堂县"},{"name":"郫县"},{"name":"新津县"},{"name":"双流县"},{"name":"蒲江县"},{"name":"大邑县"},{"name":"其他"}],"type":0},{"name":"自贡","sub":[{"name":"请选择"},{"name":"大安区"},{"name":"自流井区"},{"name":"贡井区"},{"name":"沿滩区"},{"name":"荣县"},{"name":"富顺县"},{"name":"其他"}],"type":0},{"name":"攀枝花","sub":[{"name":"请选择"},{"name":"仁和区"},{"name":"米易县"},{"name":"盐边县"},{"name":"东区"},{"name":"西区"},{"name":"其他"}],"type":0},{"name":"泸州","sub":[{"name":"请选择"},{"name":"江阳区"},{"name":"纳溪区"},{"name":"龙马潭区"},{"name":"泸县"},{"name":"合江县"},{"name":"叙永县"},{"name":"古蔺县"},{"name":"其他"}],"type":0},{"name":"德阳","sub":[{"name":"请选择"},{"name":"旌阳区"},{"name":"广汉市"},{"name":"什邡市"},{"name":"绵竹市"},{"name":"罗江县"},{"name":"中江县"},{"name":"其他"}],"type":0},{"name":"绵阳","sub":[{"name":"请选择"},{"name":"涪城区"},{"name":"游仙区"},{"name":"江油市"},{"name":"盐亭县"},{"name":"三台县"},{"name":"平武县"},{"name":"安县"},{"name":"梓潼县"},{"name":"北川羌族自治县"},{"name":"其他"}],"type":0},{"name":"广元","sub":[{"name":"请选择"},{"name":"元坝区"},{"name":"朝天区"},{"name":"青川县"},{"name":"旺苍县"},{"name":"剑阁县"},{"name":"苍溪县"},{"name":"市中区"},{"name":"其他"}],"type":0},{"name":"遂宁","sub":[{"name":"请选择"},{"name":"船山区"},{"name":"安居区"},{"name":"射洪县"},{"name":"蓬溪县"},{"name":"大英县"},{"name":"其他"}],"type":0},{"name":"内江","sub":[{"name":"请选择"},{"name":"市中区"},{"name":"东兴区"},{"name":"资中县"},{"name":"隆昌县"},{"name":"威远县"},{"name":"其他"}],"type":0},{"name":"乐山","sub":[{"name":"请选择"},{"name":"市中区"},{"name":"五通桥区"},{"name":"沙湾区"},{"name":"金口河区"},{"name":"峨眉山市"},{"name":"夹江县"},{"name":"井研县"},{"name":"犍为县"},{"name":"沐川县"},{"name":"马边彝族自治县"},{"name":"峨边彝族自治县"},{"name":"其他"}],"type":0},{"name":"南充","sub":[{"name":"请选择"},{"name":"顺庆区"},{"name":"高坪区"},{"name":"嘉陵区"},{"name":"阆中市"},{"name":"营山县"},{"name":"蓬安县"},{"name":"仪陇县"},{"name":"南部县"},{"name":"西充县"},{"name":"其他"}],"type":0},{"name":"眉山","sub":[{"name":"请选择"},{"name":"东坡区"},{"name":"仁寿县"},{"name":"彭山县"},{"name":"洪雅县"},{"name":"丹棱县"},{"name":"青神县"},{"name":"其他"}],"type":0},{"name":"宜宾","sub":[{"name":"请选择"},{"name":"翠屏区"},{"name":"宜宾县"},{"name":"兴文县"},{"name":"南溪县"},{"name":"珙县"},{"name":"长宁县"},{"name":"高县"},{"name":"江安县"},{"name":"筠连县"},{"name":"屏山县"},{"name":"其他"}],"type":0},{"name":"广安","sub":[{"name":"请选择"},{"name":"广安区"},{"name":"华蓥市"},{"name":"岳池县"},{"name":"邻水县"},{"name":"武胜县"},{"name":"其他"}],"type":0},{"name":"达州","sub":[{"name":"请选择"},{"name":"通川区"},{"name":"万源市"},{"name":"达县"},{"name":"渠县"},{"name":"宣汉县"},{"name":"开江县"},{"name":"大竹县"},{"name":"其他"}],"type":0},{"name":"雅安","sub":[{"name":"请选择"},{"name":"雨城区"},{"name":"芦山县"},{"name":"石棉县"},{"name":"名山县"},{"name":"天全县"},{"name":"荥经县"},{"name":"宝兴县"},{"name":"汉源县"},{"name":"其他"}],"type":0},{"name":"巴中","sub":[{"name":"请选择"},{"name":"巴州区"},{"name":"南江县"},{"name":"平昌县"},{"name":"通江县"},{"name":"其他"}],"type":0},{"name":"资阳","sub":[{"name":"请选择"},{"name":"雁江区"},{"name":"简阳市"},{"name":"安岳县"},{"name":"乐至县"},{"name":"其他"}],"type":0},{"name":"阿坝藏族羌族自治州","sub":[{"name":"请选择"},{"name":"马尔康县"},{"name":"九寨沟县"},{"name":"红原县"},{"name":"汶川县"},{"name":"阿坝县"},{"name":"理县"},{"name":"若尔盖县"},{"name":"小金县"},{"name":"黑水县"},{"name":"金川县"},{"name":"松潘县"},{"name":"壤塘县"},{"name":"茂县"},{"name":"其他"}],"type":0},{"name":"甘孜藏族自治州","sub":[{"name":"请选择"},{"name":"康定县"},{"name":"丹巴县"},{"name":"炉霍县"},{"name":"九龙县"},{"name":"甘孜县"},{"name":"雅江县"},{"name":"新龙县"},{"name":"道孚县"},{"name":"白玉县"},{"name":"理塘县"},{"name":"德格县"},{"name":"乡城县"},{"name":"石渠县"},{"name":"稻城县"},{"name":"色达县"},{"name":"巴塘县"},{"name":"泸定县"},{"name":"得荣县"},{"name":"其他"}],"type":0},{"name":"凉山彝族自治州","sub":[{"name":"请选择"},{"name":"西昌市"},{"name":"美姑县"},{"name":"昭觉县"},{"name":"金阳县"},{"name":"甘洛县"},{"name":"布拖县"},{"name":"雷波县"},{"name":"普格县"},{"name":"宁南县"},{"name":"喜德县"},{"name":"会东县"},{"name":"越西县"},{"name":"会理县"},{"name":"盐源县"},{"name":"德昌县"},{"name":"冕宁县"},{"name":"木里藏族自治县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"陕西","sub":[{"name":"请选择","sub":[]},{"name":"西安","sub":[{"name":"请选择"},{"name":"莲湖区"},{"name":"新城区"},{"name":"碑林区"},{"name":"雁塔区"},{"name":"灞桥区"},{"name":"未央区"},{"name":"阎良区"},{"name":"临潼区"},{"name":"长安区"},{"name":"高陵县"},{"name":"蓝田县"},{"name":"户县"},{"name":"周至县"},{"name":"其他"}],"type":0},{"name":"铜川","sub":[{"name":"请选择"},{"name":"耀州区"},{"name":"王益区"},{"name":"印台区"},{"name":"宜君县"},{"name":"其他"}],"type":0},{"name":"宝鸡","sub":[{"name":"请选择"},{"name":"渭滨区"},{"name":"金台区"},{"name":"陈仓区"},{"name":"岐山县"},{"name":"凤翔县"},{"name":"陇县"},{"name":"太白县"},{"name":"麟游县"},{"name":"扶风县"},{"name":"千阳县"},{"name":"眉县"},{"name":"凤县"},{"name":"其他"}],"type":0},{"name":"咸阳","sub":[{"name":"请选择"},{"name":"秦都区"},{"name":"渭城区"},{"name":"杨陵区"},{"name":"兴平市"},{"name":"礼泉县"},{"name":"泾阳县"},{"name":"永寿县"},{"name":"三原县"},{"name":"彬县"},{"name":"旬邑县"},{"name":"长武县"},{"name":"乾县"},{"name":"武功县"},{"name":"淳化县"},{"name":"其他"}],"type":0},{"name":"渭南","sub":[{"name":"请选择"},{"name":"临渭区"},{"name":"韩城市"},{"name":"华阴市"},{"name":"蒲城县"},{"name":"潼关县"},{"name":"白水县"},{"name":"澄城县"},{"name":"华县"},{"name":"合阳县"},{"name":"富平县"},{"name":"大荔县"},{"name":"其他"}],"type":0},{"name":"延安","sub":[{"name":"请选择"},{"name":"宝塔区"},{"name":"安塞县"},{"name":"洛川县"},{"name":"子长县"},{"name":"黄陵县"},{"name":"延川县"},{"name":"富县"},{"name":"延长县"},{"name":"甘泉县"},{"name":"宜川县"},{"name":"志丹县"},{"name":"黄龙县"},{"name":"吴起县"},{"name":"其他"}],"type":0},{"name":"汉中","sub":[{"name":"请选择"},{"name":"汉台区"},{"name":"留坝县"},{"name":"镇巴县"},{"name":"城固县"},{"name":"南郑县"},{"name":"洋县"},{"name":"宁强县"},{"name":"佛坪县"},{"name":"勉县"},{"name":"西乡县"},{"name":"略阳县"},{"name":"其他"}],"type":0},{"name":"榆林","sub":[{"name":"请选择"},{"name":"榆阳区"},{"name":"清涧县"},{"name":"绥德县"},{"name":"神木县"},{"name":"佳县"},{"name":"府谷县"},{"name":"子洲县"},{"name":"靖边县"},{"name":"横山县"},{"name":"米脂县"},{"name":"吴堡县"},{"name":"定边县"},{"name":"其他"}],"type":0},{"name":"安康","sub":[{"name":"请选择"},{"name":"汉滨区"},{"name":"紫阳县"},{"name":"岚皋县"},{"name":"旬阳县"},{"name":"镇坪县"},{"name":"平利县"},{"name":"石泉县"},{"name":"宁陕县"},{"name":"白河县"},{"name":"汉阴县"},{"name":"其他"}],"type":0},{"name":"商洛","sub":[{"name":"请选择"},{"name":"商州区"},{"name":"镇安县"},{"name":"山阳县"},{"name":"洛南县"},{"name":"商南县"},{"name":"丹凤县"},{"name":"柞水县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"河北","sub":[{"name":"请选择","sub":[]},{"name":"石家庄","sub":[{"name":"请选择"},{"name":"长安区"},{"name":"桥东区"},{"name":"桥西区"},{"name":"新华区"},{"name":"裕华区"},{"name":"井陉矿区"},{"name":"鹿泉市"},{"name":"辛集市"},{"name":"藁城市"},{"name":"晋州市"},{"name":"新乐市"},{"name":"深泽县"},{"name":"无极县"},{"name":"赵县"},{"name":"灵寿县"},{"name":"高邑县"},{"name":"元氏县"},{"name":"赞皇县"},{"name":"平山县"},{"name":"井陉县"},{"name":"栾城县"},{"name":"正定县"},{"name":"行唐县"},{"name":"其他"}],"type":0},{"name":"唐山","sub":[{"name":"请选择"},{"name":"路北区"},{"name":"路南区"},{"name":"古冶区"},{"name":"开平区"},{"name":"丰南区"},{"name":"丰润区"},{"name":"遵化市"},{"name":"迁安市"},{"name":"迁西县"},{"name":"滦南县"},{"name":"玉田县"},{"name":"唐海县"},{"name":"乐亭县"},{"name":"滦县"},{"name":"其他"}],"type":0},{"name":"秦皇岛","sub":[{"name":"请选择"},{"name":"海港区"},{"name":"山海关区"},{"name":"北戴河区"},{"name":"昌黎县"},{"name":"抚宁县"},{"name":"卢龙县"},{"name":"青龙满族自治县"},{"name":"其他"}],"type":0},{"name":"邯郸","sub":[{"name":"请选择"},{"name":"邯山区"},{"name":"丛台区"},{"name":"复兴区"},{"name":"峰峰矿区"},{"name":"武安市"},{"name":"邱县"},{"name":"大名县"},{"name":"魏县"},{"name":"曲周县"},{"name":"鸡泽县"},{"name":"肥乡县"},{"name":"广平县"},{"name":"成安县"},{"name":"临漳县"},{"name":"磁县"},{"name":"涉县"},{"name":"永年县"},{"name":"馆陶县"},{"name":"邯郸县"},{"name":"其他"}],"type":0},{"name":"邢台","sub":[{"name":"请选择"},{"name":"桥东区"},{"name":"桥西区"},{"name":"南宫市"},{"name":"沙河市"},{"name":"临城县"},{"name":"内丘县"},{"name":"柏乡县"},{"name":"隆尧县"},{"name":"任县"},{"name":"南和县"},{"name":"宁晋县"},{"name":"巨鹿县"},{"name":"新河县"},{"name":"广宗县"},{"name":"平乡县"},{"name":"威县"},{"name":"清河县"},{"name":"临西县"},{"name":"邢台县"},{"name":"其他"}],"type":0},{"name":"保定","sub":[{"name":"请选择"},{"name":"新市区"},{"name":"北市区"},{"name":"南市区"},{"name":"定州市"},{"name":"涿州市"},{"name":"安国市"},{"name":"高碑店市"},{"name":"易县"},{"name":"徐水县"},{"name":"涞源县"},{"name":"顺平县"},{"name":"唐县"},{"name":"望都县"},{"name":"涞水县"},{"name":"高阳县"},{"name":"安新县"},{"name":"雄县"},{"name":"容城县"},{"name":"蠡县"},{"name":"曲阳县"},{"name":"阜平县"},{"name":"博野县"},{"name":"满城县"},{"name":"清苑县"},{"name":"定兴县"},{"name":"其他"}],"type":0},{"name":"张家口","sub":[{"name":"请选择"},{"name":"桥东区"},{"name":"桥西区"},{"name":"宣化区"},{"name":"下花园区"},{"name":"张北县"},{"name":"康保县"},{"name":"沽源县"},{"name":"尚义县"},{"name":"蔚县"},{"name":"阳原县"},{"name":"怀安县"},{"name":"万全县"},{"name":"怀来县"},{"name":"赤城县"},{"name":"崇礼县"},{"name":"宣化县"},{"name":"涿鹿县"},{"name":"其他"}],"type":0},{"name":"承德","sub":[{"name":"请选择"},{"name":"双桥区"},{"name":"双滦区"},{"name":"鹰手营子矿区"},{"name":"兴隆县"},{"name":"平泉县"},{"name":"滦平县"},{"name":"隆化县"},{"name":"承德县"},{"name":"丰宁满族自治县"},{"name":"宽城满族自治县"},{"name":"围场满族蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"沧州","sub":[{"name":"请选择"},{"name":"新华区"},{"name":"运河区"},{"name":"泊头市"},{"name":"任丘市"},{"name":"黄骅市"},{"name":"河间市"},{"name":"献县"},{"name":"吴桥县"},{"name":"沧县"},{"name":"东光县"},{"name":"肃宁县"},{"name":"南皮县"},{"name":"盐山县"},{"name":"青县"},{"name":"海兴县"},{"name":"孟村回族自治县"},{"name":"其他"}],"type":0},{"name":"廊坊","sub":[{"name":"请选择"},{"name":"安次区"},{"name":"广阳区"},{"name":"霸州市"},{"name":"三河市"},{"name":"香河县"},{"name":"永清县"},{"name":"固安县"},{"name":"文安县"},{"name":"大城县"},{"name":"大厂回族自治县"},{"name":"其他"}],"type":0},{"name":"衡水","sub":[{"name":"请选择"},{"name":"桃城区"},{"name":"冀州市"},{"name":"深州市"},{"name":"枣强县"},{"name":"武邑县"},{"name":"武强县"},{"name":"饶阳县"},{"name":"安平县"},{"name":"故城县"},{"name":"景县"},{"name":"阜城县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"山西","sub":[{"name":"请选择","sub":[]},{"name":"太原","sub":[{"name":"请选择"},{"name":"杏花岭区"},{"name":"小店区"},{"name":"迎泽区"},{"name":"尖草坪区"},{"name":"万柏林区"},{"name":"晋源区"},{"name":"古交市"},{"name":"阳曲县"},{"name":"清徐县"},{"name":"娄烦县"},{"name":"其他"}],"type":0},{"name":"大同","sub":[{"name":"请选择"},{"name":"城区"},{"name":"矿区"},{"name":"南郊区"},{"name":"新荣区"},{"name":"大同县"},{"name":"天镇县"},{"name":"灵丘县"},{"name":"阳高县"},{"name":"左云县"},{"name":"广灵县"},{"name":"浑源县"},{"name":"其他"}],"type":0},{"name":"阳泉","sub":[{"name":"请选择"},{"name":"城区"},{"name":"矿区"},{"name":"郊区"},{"name":"平定县"},{"name":"盂县"},{"name":"其他"}],"type":0},{"name":"长治","sub":[{"name":"请选择"},{"name":"城区"},{"name":"郊区"},{"name":"潞城市"},{"name":"长治县"},{"name":"长子县"},{"name":"平顺县"},{"name":"襄垣县"},{"name":"沁源县"},{"name":"屯留县"},{"name":"黎城县"},{"name":"武乡县"},{"name":"沁县"},{"name":"壶关县"},{"name":"其他"}],"type":0},{"name":"晋城","sub":[{"name":"请选择"},{"name":"城区"},{"name":"高平市"},{"name":"泽州县"},{"name":"陵川县"},{"name":"阳城县"},{"name":"沁水县"},{"name":"其他"}],"type":0},{"name":"朔州","sub":[{"name":"请选择"},{"name":"朔城区"},{"name":"平鲁区"},{"name":"山阴县"},{"name":"右玉县"},{"name":"应县"},{"name":"怀仁县"},{"name":"其他"}],"type":0},{"name":"晋中","sub":[{"name":"请选择"},{"name":"榆次区"},{"name":"介休市"},{"name":"昔阳县"},{"name":"灵石县"},{"name":"祁县"},{"name":"左权县"},{"name":"寿阳县"},{"name":"太谷县"},{"name":"和顺县"},{"name":"平遥县"},{"name":"榆社县"},{"name":"其他"}],"type":0},{"name":"运城","sub":[{"name":"请选择"},{"name":"盐湖区"},{"name":"河津市"},{"name":"永济市"},{"name":"闻喜县"},{"name":"新绛县"},{"name":"平陆县"},{"name":"垣曲县"},{"name":"绛县"},{"name":"稷山县"},{"name":"芮城县"},{"name":"夏县"},{"name":"万荣县"},{"name":"临猗县"},{"name":"其他"}],"type":0},{"name":"忻州","sub":[{"name":"请选择"},{"name":"忻府区"},{"name":"原平市"},{"name":"代县"},{"name":"神池县"},{"name":"五寨县"},{"name":"五台县"},{"name":"偏关县"},{"name":"宁武县"},{"name":"静乐县"},{"name":"繁峙县"},{"name":"河曲县"},{"name":"保德县"},{"name":"定襄县"},{"name":"岢岚县"},{"name":"其他"}],"type":0},{"name":"临汾","sub":[{"name":"请选择"},{"name":"尧都区"},{"name":"侯马市"},{"name":"霍州市"},{"name":"汾西县"},{"name":"吉县"},{"name":"安泽县"},{"name":"大宁县"},{"name":"浮山县"},{"name":"古县"},{"name":"隰县"},{"name":"襄汾县"},{"name":"翼城县"},{"name":"永和县"},{"name":"乡宁县"},{"name":"曲沃县"},{"name":"洪洞县"},{"name":"蒲县"},{"name":"其他"}],"type":0},{"name":"吕梁","sub":[{"name":"请选择"},{"name":"离石区"},{"name":"孝义市"},{"name":"汾阳市"},{"name":"文水县"},{"name":"中阳县"},{"name":"兴县"},{"name":"临县"},{"name":"方山县"},{"name":"柳林县"},{"name":"岚县"},{"name":"交口县"},{"name":"交城县"},{"name":"石楼县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"河南","sub":[{"name":"请选择","sub":[]},{"name":"郑州","sub":[{"name":"请选择"},{"name":"中原区"},{"name":"金水区"},{"name":"二七区"},{"name":"管城回族区"},{"name":"上街区"},{"name":"惠济区"},{"name":"巩义市"},{"name":"新郑市"},{"name":"新密市"},{"name":"登封市"},{"name":"荥阳市"},{"name":"中牟县"},{"name":"其他"}],"type":0},{"name":"开封","sub":[{"name":"请选择"},{"name":"鼓楼区"},{"name":"龙亭区"},{"name":"顺河回族区"},{"name":"禹王台区"},{"name":"金明区"},{"name":"开封县"},{"name":"尉氏县"},{"name":"兰考县"},{"name":"杞县"},{"name":"通许县"},{"name":"其他"}],"type":0},{"name":"洛阳","sub":[{"name":"请选择"},{"name":"西工区"},{"name":"老城区"},{"name":"涧西区"},{"name":"瀍河回族区"},{"name":"洛龙区"},{"name":"吉利区"},{"name":"偃师市"},{"name":"孟津县"},{"name":"汝阳县"},{"name":"伊川县"},{"name":"洛宁县"},{"name":"嵩县"},{"name":"宜阳县"},{"name":"新安县"},{"name":"栾川县"},{"name":"其他"}],"type":0},{"name":"平顶山","sub":[{"name":"请选择"},{"name":"新华区"},{"name":"卫东区"},{"name":"湛河区"},{"name":"石龙区"},{"name":"汝州市"},{"name":"舞钢市"},{"name":"宝丰县"},{"name":"叶县"},{"name":"郏县"},{"name":"鲁山县"},{"name":"其他"}],"type":0},{"name":"安阳","sub":[{"name":"请选择"},{"name":"北关区"},{"name":"文峰区"},{"name":"殷都区"},{"name":"龙安区"},{"name":"林州市"},{"name":"安阳县"},{"name":"滑县"},{"name":"内黄县"},{"name":"汤阴县"},{"name":"其他"}],"type":0},{"name":"鹤壁","sub":[{"name":"请选择"},{"name":"淇滨区"},{"name":"山城区"},{"name":"鹤山区"},{"name":"浚县"},{"name":"淇县"},{"name":"其他"}],"type":0},{"name":"新乡","sub":[{"name":"请选择"},{"name":"卫滨区"},{"name":"红旗区"},{"name":"凤泉区"},{"name":"牧野区"},{"name":"卫辉市"},{"name":"辉县市"},{"name":"新乡县"},{"name":"获嘉县"},{"name":"原阳县"},{"name":"长垣县"},{"name":"封丘县"},{"name":"延津县"},{"name":"其他"}],"type":0},{"name":"焦作","sub":[{"name":"请选择"},{"name":"解放区"},{"name":"中站区"},{"name":"马村区"},{"name":"山阳区"},{"name":"沁阳市"},{"name":"孟州市"},{"name":"修武县"},{"name":"温县"},{"name":"武陟县"},{"name":"博爱县"},{"name":"其他"}],"type":0},{"name":"濮阳","sub":[{"name":"请选择"},{"name":"华龙区"},{"name":"濮阳县"},{"name":"南乐县"},{"name":"台前县"},{"name":"清丰县"},{"name":"范县"},{"name":"其他"}],"type":0},{"name":"许昌","sub":[{"name":"请选择"},{"name":"魏都区"},{"name":"禹州市"},{"name":"长葛市"},{"name":"许昌县"},{"name":"鄢陵县"},{"name":"襄城县"},{"name":"其他"}],"type":0},{"name":"漯河","sub":[{"name":"请选择"},{"name":"源汇区"},{"name":"郾城区"},{"name":"召陵区"},{"name":"临颍县"},{"name":"舞阳县"},{"name":"其他"}],"type":0},{"name":"三门峡","sub":[{"name":"请选择"},{"name":"湖滨区"},{"name":"义马市"},{"name":"灵宝市"},{"name":"渑池县"},{"name":"卢氏县"},{"name":"陕县"},{"name":"其他"}],"type":0},{"name":"南阳","sub":[{"name":"请选择"},{"name":"卧龙区"},{"name":"宛城区"},{"name":"邓州市"},{"name":"桐柏县"},{"name":"方城县"},{"name":"淅川县"},{"name":"镇平县"},{"name":"唐河县"},{"name":"南召县"},{"name":"内乡县"},{"name":"新野县"},{"name":"社旗县"},{"name":"西峡县"},{"name":"其他"}],"type":0},{"name":"商丘","sub":[{"name":"请选择"},{"name":"梁园区"},{"name":"睢阳区"},{"name":"永城市"},{"name":"宁陵县"},{"name":"虞城县"},{"name":"民权县"},{"name":"夏邑县"},{"name":"柘城县"},{"name":"睢县"},{"name":"其他"}],"type":0},{"name":"信阳","sub":[{"name":"请选择"},{"name":"浉河区"},{"name":"平桥区"},{"name":"潢川县"},{"name":"淮滨县"},{"name":"息县"},{"name":"新县"},{"name":"商城县"},{"name":"固始县"},{"name":"罗山县"},{"name":"光山县"},{"name":"其他"}],"type":0},{"name":"周口","sub":[{"name":"请选择"},{"name":"川汇区"},{"name":"项城市"},{"name":"商水县"},{"name":"淮阳县"},{"name":"太康县"},{"name":"鹿邑县"},{"name":"西华县"},{"name":"扶沟县"},{"name":"沈丘县"},{"name":"郸城县"},{"name":"其他"}],"type":0},{"name":"驻马店","sub":[{"name":"请选择"},{"name":"驿城区"},{"name":"确山县"},{"name":"新蔡县"},{"name":"上蔡县"},{"name":"西平县"},{"name":"泌阳县"},{"name":"平舆县"},{"name":"汝南县"},{"name":"遂平县"},{"name":"正阳县"},{"name":"其他"}],"type":0},{"name":"焦作","sub":[{"name":"请选择"},{"name":"济源市"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"吉林","sub":[{"name":"请选择","sub":[]},{"name":"长春","sub":[{"name":"请选择"},{"name":"朝阳区"},{"name":"宽城区"},{"name":"二道区"},{"name":"南关区"},{"name":"绿园区"},{"name":"双阳区"},{"name":"九台市"},{"name":"榆树市"},{"name":"德惠市"},{"name":"农安县"},{"name":"其他"}],"type":0},{"name":"吉林","sub":[{"name":"请选择"},{"name":"船营区"},{"name":"昌邑区"},{"name":"龙潭区"},{"name":"丰满区"},{"name":"舒兰市"},{"name":"桦甸市"},{"name":"蛟河市"},{"name":"磐石市"},{"name":"永吉县"},{"name":"其他"}],"type":0},{"name":"四平","sub":[{"name":"请选择"},{"name":"铁西区"},{"name":"铁东区"},{"name":"公主岭市"},{"name":"双辽市"},{"name":"梨树县"},{"name":"伊通满族自治县"},{"name":"其他"}],"type":0},{"name":"辽源","sub":[{"name":"请选择"},{"name":"龙山区"},{"name":"西安区"},{"name":"东辽县"},{"name":"东丰县"},{"name":"其他"}],"type":0},{"name":"通化","sub":[{"name":"请选择"},{"name":"东昌区"},{"name":"二道江区"},{"name":"梅河口市"},{"name":"集安市"},{"name":"通化县"},{"name":"辉南县"},{"name":"柳河县"},{"name":"其他"}],"type":0},{"name":"白山","sub":[{"name":"请选择"},{"name":"八道江区"},{"name":"江源区"},{"name":"临江市"},{"name":"靖宇县"},{"name":"抚松县"},{"name":"长白朝鲜族自治县"},{"name":"其他"}],"type":0},{"name":"松原","sub":[{"name":"请选择"},{"name":"宁江区"},{"name":"乾安县"},{"name":"长岭县"},{"name":"扶余县"},{"name":"前郭尔罗斯蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"白城","sub":[{"name":"请选择"},{"name":"洮北区"},{"name":"大安市"},{"name":"洮南市"},{"name":"镇赉县"},{"name":"通榆县"},{"name":"其他"}],"type":0},{"name":"延边朝鲜族自治州","sub":[{"name":"请选择"},{"name":"延吉市"},{"name":"图们市"},{"name":"敦化市"},{"name":"龙井市"},{"name":"珲春市"},{"name":"和龙市"},{"name":"安图县"},{"name":"汪清县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"黑龙江","sub":[{"name":"请选择","sub":[]},{"name":"哈尔滨","sub":[{"name":"请选择"},{"name":"松北区"},{"name":"道里区"},{"name":"南岗区"},{"name":"平房区"},{"name":"香坊区"},{"name":"道外区"},{"name":"呼兰区"},{"name":"阿城区"},{"name":"双城市"},{"name":"尚志市"},{"name":"五常市"},{"name":"宾县"},{"name":"方正县"},{"name":"通河县"},{"name":"巴彦县"},{"name":"延寿县"},{"name":"木兰县"},{"name":"依兰县"},{"name":"其他"}],"type":0},{"name":"齐齐哈尔","sub":[{"name":"请选择"},{"name":"龙沙区"},{"name":"昂昂溪区"},{"name":"铁锋区"},{"name":"建华区"},{"name":"富拉尔基区"},{"name":"碾子山区"},{"name":"梅里斯达斡尔族区"},{"name":"讷河市"},{"name":"富裕县"},{"name":"拜泉县"},{"name":"甘南县"},{"name":"依安县"},{"name":"克山县"},{"name":"泰来县"},{"name":"克东县"},{"name":"龙江县"},{"name":"其他"}],"type":0},{"name":"鹤岗","sub":[{"name":"请选择"},{"name":"兴山区"},{"name":"工农区"},{"name":"南山区"},{"name":"兴安区"},{"name":"向阳区"},{"name":"东山区"},{"name":"萝北县"},{"name":"绥滨县"},{"name":"其他"}],"type":0},{"name":"双鸭山","sub":[{"name":"请选择"},{"name":"尖山区"},{"name":"岭东区"},{"name":"四方台区"},{"name":"宝山区"},{"name":"集贤县"},{"name":"宝清县"},{"name":"友谊县"},{"name":"饶河县"},{"name":"其他"}],"type":0},{"name":"鸡西","sub":[{"name":"请选择"},{"name":"鸡冠区"},{"name":"恒山区"},{"name":"城子河区"},{"name":"滴道区"},{"name":"梨树区"},{"name":"麻山区"},{"name":"密山市"},{"name":"虎林市"},{"name":"鸡东县"},{"name":"其他"}],"type":0},{"name":"大庆","sub":[{"name":"请选择"},{"name":"萨尔图区"},{"name":"红岗区"},{"name":"龙凤区"},{"name":"让胡路区"},{"name":"大同区"},{"name":"林甸县"},{"name":"肇州县"},{"name":"肇源县"},{"name":"杜尔伯特蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"伊春","sub":[{"name":"请选择"},{"name":"伊春区"},{"name":"带岭区"},{"name":"南岔区"},{"name":"金山屯区"},{"name":"西林区"},{"name":"美溪区"},{"name":"乌马河区"},{"name":"翠峦区"},{"name":"友好区"},{"name":"上甘岭区"},{"name":"五营区"},{"name":"红星区"},{"name":"新青区"},{"name":"汤旺河区"},{"name":"乌伊岭区"},{"name":"铁力市"},{"name":"嘉荫县"},{"name":"其他"}],"type":0},{"name":"牡丹江","sub":[{"name":"请选择"},{"name":"爱民区"},{"name":"东安区"},{"name":"阳明区"},{"name":"西安区"},{"name":"绥芬河市"},{"name":"宁安市"},{"name":"海林市"},{"name":"穆棱市"},{"name":"林口县"},{"name":"东宁县"},{"name":"其他"}],"type":0},{"name":"佳木斯","sub":[{"name":"请选择"},{"name":"向阳区"},{"name":"前进区"},{"name":"东风区"},{"name":"郊区"},{"name":"同江市"},{"name":"富锦市"},{"name":"桦川县"},{"name":"抚远县"},{"name":"桦南县"},{"name":"汤原县"},{"name":"其他"}],"type":0},{"name":"七台河","sub":[{"name":"请选择"},{"name":"桃山区"},{"name":"新兴区"},{"name":"茄子河区"},{"name":"勃利县"},{"name":"其他"}],"type":0},{"name":"黑河","sub":[{"name":"请选择"},{"name":"爱辉区"},{"name":"北安市"},{"name":"五大连池市"},{"name":"逊克县"},{"name":"嫩江县"},{"name":"孙吴县"},{"name":"其他"}],"type":0},{"name":"绥化","sub":[{"name":"请选择"},{"name":"北林区"},{"name":"安达市"},{"name":"肇东市"},{"name":"海伦市"},{"name":"绥棱县"},{"name":"兰西县"},{"name":"明水县"},{"name":"青冈县"},{"name":"庆安县"},{"name":"望奎县"},{"name":"其他"}],"type":0},{"name":"大兴安岭地区","sub":[{"name":"请选择"},{"name":"呼玛县"},{"name":"塔河县"},{"name":"漠河县"},{"name":"大兴安岭辖区"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"内蒙古","sub":[{"name":"请选择","sub":[]},{"name":"呼和浩特","sub":[{"name":"请选择"},{"name":"回民区"},{"name":"玉泉区"},{"name":"新城区"},{"name":"赛罕区"},{"name":"托克托县"},{"name":"清水河县"},{"name":"武川县"},{"name":"和林格尔县"},{"name":"土默特左旗"},{"name":"其他"}],"type":0},{"name":"包头","sub":[{"name":"请选择"},{"name":"昆都仑区"},{"name":"青山区"},{"name":"东河区"},{"name":"九原区"},{"name":"石拐区"},{"name":"白云矿区"},{"name":"固阳县"},{"name":"土默特右旗"},{"name":"达尔罕茂明安联合旗"},{"name":"其他"}],"type":0},{"name":"乌海","sub":[{"name":"请选择"},{"name":"海勃湾区"},{"name":"乌达区"},{"name":"海南区"},{"name":"其他"}],"type":0},{"name":"赤峰","sub":[{"name":"请选择"},{"name":"红山区"},{"name":"元宝山区"},{"name":"松山区"},{"name":"宁城县"},{"name":"林西县"},{"name":"喀喇沁旗"},{"name":"巴林左旗"},{"name":"敖汉旗"},{"name":"阿鲁科尔沁旗"},{"name":"翁牛特旗"},{"name":"克什克腾旗"},{"name":"巴林右旗"},{"name":"其他"}],"type":0},{"name":"通辽","sub":[{"name":"请选择"},{"name":"科尔沁区"},{"name":"霍林郭勒市"},{"name":"开鲁县"},{"name":"科尔沁左翼中旗"},{"name":"科尔沁左翼后旗"},{"name":"库伦旗"},{"name":"奈曼旗"},{"name":"扎鲁特旗"},{"name":"其他"}],"type":0},{"name":"鄂尔多斯","sub":[{"name":"请选择"},{"name":"东胜区"},{"name":"准格尔旗"},{"name":"乌审旗"},{"name":"伊金霍洛旗"},{"name":"鄂托克旗"},{"name":"鄂托克前旗"},{"name":"杭锦旗"},{"name":"达拉特旗"},{"name":"其他"}],"type":0},{"name":"呼伦贝尔","sub":[{"name":"请选择"},{"name":"海拉尔区"},{"name":"满洲里市"},{"name":"牙克石市"},{"name":"扎兰屯市"},{"name":"根河市"},{"name":"额尔古纳市"},{"name":"陈巴尔虎旗"},{"name":"阿荣旗"},{"name":"新巴尔虎左旗"},{"name":"新巴尔虎右旗"},{"name":"鄂伦春自治旗"},{"name":"莫力达瓦达斡尔族自治旗"},{"name":"鄂温克族自治旗"},{"name":"其他"}],"type":0},{"name":"巴彦淖尔","sub":[{"name":"请选择"},{"name":"临河区"},{"name":"五原县"},{"name":"磴口县"},{"name":"杭锦后旗"},{"name":"乌拉特中旗"},{"name":"乌拉特前旗"},{"name":"乌拉特后旗"},{"name":"其他"}],"type":0},{"name":"乌兰察布","sub":[{"name":"请选择"},{"name":"集宁区"},{"name":"丰镇市"},{"name":"兴和县"},{"name":"卓资县"},{"name":"商都县"},{"name":"凉城县"},{"name":"化德县"},{"name":"四子王旗"},{"name":"察哈尔右翼前旗"},{"name":"察哈尔右翼中旗"},{"name":"察哈尔右翼后旗"},{"name":"其他"}],"type":0},{"name":"锡林郭勒盟","sub":[{"name":"请选择"},{"name":"锡林浩特市"},{"name":"二连浩特市"},{"name":"多伦县"},{"name":"阿巴嘎旗"},{"name":"西乌珠穆沁旗"},{"name":"东乌珠穆沁旗"},{"name":"苏尼特左旗"},{"name":"苏尼特右旗"},{"name":"太仆寺旗"},{"name":"正镶白旗"},{"name":"正蓝旗"},{"name":"镶黄旗"},{"name":"其他"}],"type":0},{"name":"兴安盟","sub":[{"name":"请选择"},{"name":"乌兰浩特市"},{"name":"阿尔山市"},{"name":"突泉县"},{"name":"扎赉特旗"},{"name":"科尔沁右翼前旗"},{"name":"科尔沁右翼中旗"},{"name":"其他"}],"type":0},{"name":"阿拉善盟","sub":[{"name":"请选择"},{"name":"阿拉善左旗"},{"name":"阿拉善右旗"},{"name":"额济纳旗"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"山东","sub":[{"name":"请选择","sub":[]},{"name":"济南","sub":[{"name":"请选择"},{"name":"市中区"},{"name":"历下区"},{"name":"天桥区"},{"name":"槐荫区"},{"name":"历城区"},{"name":"长清区"},{"name":"章丘市"},{"name":"平阴县"},{"name":"济阳县"},{"name":"商河县"},{"name":"其他"}],"type":0},{"name":"青岛","sub":[{"name":"请选择"},{"name":"市南区"},{"name":"市北区"},{"name":"城阳区"},{"name":"四方区"},{"name":"李沧区"},{"name":"黄岛区"},{"name":"崂山区"},{"name":"胶南市"},{"name":"胶州市"},{"name":"平度市"},{"name":"莱西市"},{"name":"即墨市"},{"name":"其他"}],"type":0},{"name":"淄博","sub":[{"name":"请选择"},{"name":"张店区"},{"name":"临淄区"},{"name":"淄川区"},{"name":"博山区"},{"name":"周村区"},{"name":"桓台县"},{"name":"高青县"},{"name":"沂源县"},{"name":"其他"}],"type":0},{"name":"枣庄","sub":[{"name":"请选择"},{"name":"市中区"},{"name":"山亭区"},{"name":"峄城区"},{"name":"台儿庄区"},{"name":"薛城区"},{"name":"滕州市"},{"name":"其他"}],"type":0},{"name":"东营","sub":[{"name":"请选择"},{"name":"东营区"},{"name":"河口区"},{"name":"垦利县"},{"name":"广饶县"},{"name":"利津县"},{"name":"其他"}],"type":0},{"name":"烟台","sub":[{"name":"请选择"},{"name":"芝罘区"},{"name":"福山区"},{"name":"牟平区"},{"name":"莱山区"},{"name":"龙口市"},{"name":"莱阳市"},{"name":"莱州市"},{"name":"招远市"},{"name":"蓬莱市"},{"name":"栖霞市"},{"name":"海阳市"},{"name":"长岛县"},{"name":"其他"}],"type":0},{"name":"潍坊","sub":[{"name":"请选择"},{"name":"潍城区"},{"name":"寒亭区"},{"name":"坊子区"},{"name":"奎文区"},{"name":"青州市"},{"name":"诸城市"},{"name":"寿光市"},{"name":"安丘市"},{"name":"高密市"},{"name":"昌邑市"},{"name":"昌乐县"},{"name":"临朐县"},{"name":"其他"}],"type":0},{"name":"济宁","sub":[{"name":"请选择"},{"name":"市中区"},{"name":"任城区"},{"name":"曲阜市"},{"name":"兖州市"},{"name":"邹城市"},{"name":"鱼台县"},{"name":"金乡县"},{"name":"嘉祥县"},{"name":"微山县"},{"name":"汶上县"},{"name":"泗水县"},{"name":"梁山县"},{"name":"其他"}],"type":0},{"name":"泰安","sub":[{"name":"请选择"},{"name":"泰山区"},{"name":"岱岳区"},{"name":"新泰市"},{"name":"肥城市"},{"name":"宁阳县"},{"name":"东平县"},{"name":"其他"}],"type":0},{"name":"威海","sub":[{"name":"请选择"},{"name":"环翠区"},{"name":"乳山市"},{"name":"文登市"},{"name":"荣成市"},{"name":"其他"}],"type":0},{"name":"日照","sub":[{"name":"请选择"},{"name":"东港区"},{"name":"岚山区"},{"name":"五莲县"},{"name":"莒县"},{"name":"其他"}],"type":0},{"name":"莱芜","sub":[{"name":"请选择"},{"name":"莱城区"},{"name":"钢城区"},{"name":"其他"}],"type":0},{"name":"临沂","sub":[{"name":"请选择"},{"name":"兰山区"},{"name":"罗庄区"},{"name":"河东区"},{"name":"沂南县"},{"name":"郯城县"},{"name":"沂水县"},{"name":"苍山县"},{"name":"费县"},{"name":"平邑县"},{"name":"莒南县"},{"name":"蒙阴县"},{"name":"临沭县"},{"name":"其他"}],"type":0},{"name":"德州","sub":[{"name":"请选择"},{"name":"德城区"},{"name":"乐陵市"},{"name":"禹城市"},{"name":"陵县"},{"name":"宁津县"},{"name":"齐河县"},{"name":"武城县"},{"name":"庆云县"},{"name":"平原县"},{"name":"夏津县"},{"name":"临邑县"},{"name":"其他"}],"type":0},{"name":"聊城","sub":[{"name":"请选择"},{"name":"东昌府区"},{"name":"临清市"},{"name":"高唐县"},{"name":"阳谷县"},{"name":"茌平县"},{"name":"莘县"},{"name":"东阿县"},{"name":"冠县"},{"name":"其他"}],"type":0},{"name":"滨州","sub":[{"name":"请选择"},{"name":"滨城区"},{"name":"邹平县"},{"name":"沾化县"},{"name":"惠民县"},{"name":"博兴县"},{"name":"阳信县"},{"name":"无棣县"},{"name":"其他"}],"type":0},{"name":"菏泽","sub":[{"name":"请选择"},{"name":"牡丹区"},{"name":"鄄城县"},{"name":"单县"},{"name":"郓城县"},{"name":"曹县"},{"name":"定陶县"},{"name":"巨野县"},{"name":"东明县"},{"name":"成武县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"安徽","sub":[{"name":"请选择","sub":[]},{"name":"合肥","sub":[{"name":"请选择"},{"name":"庐阳区"},{"name":"瑶海区"},{"name":"蜀山区"},{"name":"包河区"},{"name":"长丰县"},{"name":"肥东县"},{"name":"肥西县"},{"name":"其他"}],"type":0},{"name":"芜湖","sub":[{"name":"请选择"},{"name":"镜湖区"},{"name":"弋江区"},{"name":"鸠江区"},{"name":"三山区"},{"name":"芜湖县"},{"name":"南陵县"},{"name":"繁昌县"},{"name":"其他"}],"type":0},{"name":"蚌埠","sub":[{"name":"请选择"},{"name":"蚌山区"},{"name":"龙子湖区"},{"name":"禹会区"},{"name":"淮上区"},{"name":"怀远县"},{"name":"固镇县"},{"name":"五河县"},{"name":"其他"}],"type":0},{"name":"淮南","sub":[{"name":"请选择"},{"name":"田家庵区"},{"name":"大通区"},{"name":"谢家集区"},{"name":"八公山区"},{"name":"潘集区"},{"name":"凤台县"},{"name":"其他"}],"type":0},{"name":"马鞍山","sub":[{"name":"请选择"},{"name":"雨山区"},{"name":"花山区"},{"name":"金家庄区"},{"name":"当涂县"},{"name":"其他"}],"type":0},{"name":"淮北","sub":[{"name":"请选择"},{"name":"相山区"},{"name":"杜集区"},{"name":"烈山区"},{"name":"濉溪县"},{"name":"其他"}],"type":0},{"name":"铜陵","sub":[{"name":"请选择"},{"name":"铜官山区"},{"name":"狮子山区"},{"name":"郊区"},{"name":"铜陵县"},{"name":"其他"}],"type":0},{"name":"安庆","sub":[{"name":"请选择"},{"name":"迎江区"},{"name":"大观区"},{"name":"宜秀区"},{"name":"桐城市"},{"name":"宿松县"},{"name":"枞阳县"},{"name":"太湖县"},{"name":"怀宁县"},{"name":"岳西县"},{"name":"望江县"},{"name":"潜山县"},{"name":"其他"}],"type":0},{"name":"黄山","sub":[{"name":"请选择"},{"name":"屯溪区"},{"name":"黄山区"},{"name":"徽州区"},{"name":"休宁县"},{"name":"歙县"},{"name":"祁门县"},{"name":"黟县"},{"name":"其他"}],"type":0},{"name":"滁州","sub":[{"name":"请选择"},{"name":"琅琊区"},{"name":"南谯区"},{"name":"天长市"},{"name":"明光市"},{"name":"全椒县"},{"name":"来安县"},{"name":"定远县"},{"name":"凤阳县"},{"name":"其他"}],"type":0},{"name":"阜阳","sub":[{"name":"请选择"},{"name":"颍州区"},{"name":"颍东区"},{"name":"颍泉区"},{"name":"界首市"},{"name":"临泉县"},{"name":"颍上县"},{"name":"阜南县"},{"name":"太和县"},{"name":"其他"}],"type":0},{"name":"宿州","sub":[{"name":"请选择"},{"name":"埇桥区"},{"name":"萧县"},{"name":"泗县"},{"name":"砀山县"},{"name":"灵璧县"},{"name":"其他"}],"type":0},{"name":"巢湖","sub":[{"name":"请选择"},{"name":"居巢区"},{"name":"含山县"},{"name":"无为县"},{"name":"庐江县"},{"name":"和县"},{"name":"其他"}],"type":0},{"name":"六安","sub":[{"name":"请选择"},{"name":"金安区"},{"name":"裕安区"},{"name":"寿县"},{"name":"霍山县"},{"name":"霍邱县"},{"name":"舒城县"},{"name":"金寨县"},{"name":"其他"}],"type":0},{"name":"亳州","sub":[{"name":"请选择"},{"name":"谯城区"},{"name":"利辛县"},{"name":"涡阳县"},{"name":"蒙城县"},{"name":"其他"}],"type":0},{"name":"池州","sub":[{"name":"请选择"},{"name":"贵池区"},{"name":"东至县"},{"name":"石台县"},{"name":"青阳县"},{"name":"其他"}],"type":0},{"name":"宣城","sub":[{"name":"请选择"},{"name":"宣州区"},{"name":"宁国市"},{"name":"广德县"},{"name":"郎溪县"},{"name":"泾县"},{"name":"旌德县"},{"name":"绩溪县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"浙江","sub":[{"name":"请选择","sub":[]},{"name":"杭州","sub":[{"name":"请选择"},{"name":"拱墅区"},{"name":"西湖区"},{"name":"上城区"},{"name":"下城区"},{"name":"江干区"},{"name":"滨江区"},{"name":"余杭区"},{"name":"萧山区"},{"name":"建德市"},{"name":"富阳市"},{"name":"临安市"},{"name":"桐庐县"},{"name":"淳安县"},{"name":"其他"}],"type":0},{"name":"宁波","sub":[{"name":"请选择"},{"name":"海曙区"},{"name":"江东区"},{"name":"江北区"},{"name":"镇海区"},{"name":"北仑区"},{"name":"鄞州区"},{"name":"余姚市"},{"name":"慈溪市"},{"name":"奉化市"},{"name":"宁海县"},{"name":"象山县"},{"name":"其他"}],"type":0},{"name":"温州","sub":[{"name":"请选择"},{"name":"鹿城区"},{"name":"龙湾区"},{"name":"瓯海区"},{"name":"瑞安市"},{"name":"乐清市"},{"name":"永嘉县"},{"name":"洞头县"},{"name":"平阳县"},{"name":"苍南县"},{"name":"文成县"},{"name":"泰顺县"},{"name":"其他"}],"type":0},{"name":"嘉兴","sub":[{"name":"请选择"},{"name":"秀城区"},{"name":"秀洲区"},{"name":"海宁市"},{"name":"平湖市"},{"name":"桐乡市"},{"name":"嘉善县"},{"name":"海盐县"},{"name":"其他"}],"type":0},{"name":"湖州","sub":[{"name":"请选择"},{"name":"吴兴区"},{"name":"南浔区"},{"name":"长兴县"},{"name":"德清县"},{"name":"安吉县"},{"name":"其他"}],"type":0},{"name":"绍兴","sub":[{"name":"请选择"},{"name":"越城区"},{"name":"诸暨市"},{"name":"上虞市"},{"name":"嵊州市"},{"name":"绍兴县"},{"name":"新昌县"},{"name":"其他"}],"type":0},{"name":"金华","sub":[{"name":"请选择"},{"name":"婺城区"},{"name":"金东区"},{"name":"兰溪市"},{"name":"义乌市"},{"name":"东阳市"},{"name":"永康市"},{"name":"武义县"},{"name":"浦江县"},{"name":"磐安县"},{"name":"其他"}],"type":0},{"name":"衢州","sub":[{"name":"请选择"},{"name":"柯城区"},{"name":"衢江区"},{"name":"江山市"},{"name":"龙游县"},{"name":"常山县"},{"name":"开化县"},{"name":"其他"}],"type":0},{"name":"舟山","sub":[{"name":"请选择"},{"name":"定海区"},{"name":"普陀区"},{"name":"岱山县"},{"name":"嵊泗县"},{"name":"其他"}],"type":0},{"name":"台州","sub":[{"name":"请选择"},{"name":"椒江区"},{"name":"黄岩区"},{"name":"路桥区"},{"name":"临海市"},{"name":"温岭市"},{"name":"玉环县"},{"name":"天台县"},{"name":"仙居县"},{"name":"三门县"},{"name":"其他"}],"type":0},{"name":"丽水","sub":[{"name":"请选择"},{"name":"莲都区"},{"name":"龙泉市"},{"name":"缙云县"},{"name":"青田县"},{"name":"云和县"},{"name":"遂昌县"},{"name":"松阳县"},{"name":"庆元县"},{"name":"景宁畲族自治县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"福建","sub":[{"name":"请选择","sub":[]},{"name":"福州","sub":[{"name":"请选择"},{"name":"鼓楼区"},{"name":"台江区"},{"name":"仓山区"},{"name":"马尾区"},{"name":"晋安区"},{"name":"福清市"},{"name":"长乐市"},{"name":"闽侯县"},{"name":"闽清县"},{"name":"永泰县"},{"name":"连江县"},{"name":"罗源县"},{"name":"平潭县"},{"name":"其他"}],"type":0},{"name":"厦门","sub":[{"name":"请选择"},{"name":"思明区"},{"name":"海沧区"},{"name":"湖里区"},{"name":"集美区"},{"name":"同安区"},{"name":"翔安区"},{"name":"其他"}],"type":0},{"name":"莆田","sub":[{"name":"请选择"},{"name":"城厢区"},{"name":"涵江区"},{"name":"荔城区"},{"name":"秀屿区"},{"name":"仙游县"},{"name":"其他"}],"type":0},{"name":"三明","sub":[{"name":"请选择"},{"name":"梅列区"},{"name":"三元区"},{"name":"永安市"},{"name":"明溪县"},{"name":"将乐县"},{"name":"大田县"},{"name":"宁化县"},{"name":"建宁县"},{"name":"沙县"},{"name":"尤溪县"},{"name":"清流县"},{"name":"泰宁县"},{"name":"其他"}],"type":0},{"name":"泉州","sub":[{"name":"请选择"},{"name":"鲤城区"},{"name":"丰泽区"},{"name":"洛江区"},{"name":"泉港区"},{"name":"石狮市"},{"name":"晋江市"},{"name":"南安市"},{"name":"惠安县"},{"name":"永春县"},{"name":"安溪县"},{"name":"德化县"},{"name":"金门县"},{"name":"其他"}],"type":0},{"name":"漳州","sub":[{"name":"请选择"},{"name":"芗城区"},{"name":"龙文区"},{"name":"龙海市"},{"name":"平和县"},{"name":"南靖县"},{"name":"诏安县"},{"name":"漳浦县"},{"name":"华安县"},{"name":"东山县"},{"name":"长泰县"},{"name":"云霄县"},{"name":"其他"}],"type":0},{"name":"南平","sub":[{"name":"请选择"},{"name":"延平区"},{"name":"建瓯市"},{"name":"邵武市"},{"name":"武夷山市"},{"name":"建阳市"},{"name":"松溪县"},{"name":"光泽县"},{"name":"顺昌县"},{"name":"浦城县"},{"name":"政和县"},{"name":"其他"}],"type":0},{"name":"龙岩","sub":[{"name":"请选择"},{"name":"新罗区"},{"name":"漳平市"},{"name":"长汀县"},{"name":"武平县"},{"name":"上杭县"},{"name":"永定县"},{"name":"连城县"},{"name":"其他"}],"type":0},{"name":"宁德","sub":[{"name":"请选择"},{"name":"蕉城区"},{"name":"福安市"},{"name":"福鼎市"},{"name":"寿宁县"},{"name":"霞浦县"},{"name":"柘荣县"},{"name":"屏南县"},{"name":"古田县"},{"name":"周宁县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"湖南","sub":[{"name":"请选择","sub":[]},{"name":"长沙","sub":[{"name":"请选择"},{"name":"岳麓区"},{"name":"芙蓉区"},{"name":"天心区"},{"name":"开福区"},{"name":"雨花区"},{"name":"浏阳市"},{"name":"长沙县"},{"name":"望城县"},{"name":"宁乡县"},{"name":"其他"}],"type":0},{"name":"株洲","sub":[{"name":"请选择"},{"name":"天元区"},{"name":"荷塘区"},{"name":"芦淞区"},{"name":"石峰区"},{"name":"醴陵市"},{"name":"株洲县"},{"name":"炎陵县"},{"name":"茶陵县"},{"name":"攸县"},{"name":"其他"}],"type":0},{"name":"湘潭","sub":[{"name":"请选择"},{"name":"岳塘区"},{"name":"雨湖区"},{"name":"湘乡市"},{"name":"韶山市"},{"name":"湘潭县"},{"name":"其他"}],"type":0},{"name":"衡阳","sub":[{"name":"请选择"},{"name":"雁峰区"},{"name":"珠晖区"},{"name":"石鼓区"},{"name":"蒸湘区"},{"name":"南岳区"},{"name":"耒阳市"},{"name":"常宁市"},{"name":"衡阳县"},{"name":"衡东县"},{"name":"衡山县"},{"name":"衡南县"},{"name":"祁东县"},{"name":"其他"}],"type":0},{"name":"邵阳","sub":[{"name":"请选择"},{"name":"双清区"},{"name":"大祥区"},{"name":"北塔区"},{"name":"武冈市"},{"name":"邵东县"},{"name":"洞口县"},{"name":"新邵县"},{"name":"绥宁县"},{"name":"新宁县"},{"name":"邵阳县"},{"name":"隆回县"},{"name":"城步苗族自治县"},{"name":"其他"}],"type":0},{"name":"岳阳","sub":[{"name":"请选择"},{"name":"岳阳楼区"},{"name":"云溪区"},{"name":"君山区"},{"name":"临湘市"},{"name":"汨罗市"},{"name":"岳阳县"},{"name":"湘阴县"},{"name":"平江县"},{"name":"华容县"},{"name":"其他"}],"type":0},{"name":"常德","sub":[{"name":"请选择"},{"name":"武陵区"},{"name":"鼎城区"},{"name":"津市市"},{"name":"澧县"},{"name":"临澧县"},{"name":"桃源县"},{"name":"汉寿县"},{"name":"安乡县"},{"name":"石门县"},{"name":"其他"}],"type":0},{"name":"张家界","sub":[{"name":"请选择"},{"name":"永定区"},{"name":"武陵源区"},{"name":"慈利县"},{"name":"桑植县"},{"name":"其他"}],"type":0},{"name":"益阳","sub":[{"name":"请选择"},{"name":"赫山区"},{"name":"资阳区"},{"name":"沅江市"},{"name":"桃江县"},{"name":"南县"},{"name":"安化县"},{"name":"其他"}],"type":0},{"name":"郴州","sub":[{"name":"请选择"},{"name":"北湖区"},{"name":"苏仙区"},{"name":"资兴市"},{"name":"宜章县"},{"name":"汝城县"},{"name":"安仁县"},{"name":"嘉禾县"},{"name":"临武县"},{"name":"桂东县"},{"name":"永兴县"},{"name":"桂阳县"},{"name":"其他"}],"type":0},{"name":"永州","sub":[{"name":"请选择"},{"name":"冷水滩区"},{"name":"零陵区"},{"name":"祁阳县"},{"name":"蓝山县"},{"name":"宁远县"},{"name":"新田县"},{"name":"东安县"},{"name":"江永县"},{"name":"道县"},{"name":"双牌县"},{"name":"江华瑶族自治县"},{"name":"其他"}],"type":0},{"name":"怀化","sub":[{"name":"请选择"},{"name":"鹤城区"},{"name":"洪江市"},{"name":"会同县"},{"name":"沅陵县"},{"name":"辰溪县"},{"name":"溆浦县"},{"name":"中方县"},{"name":"新晃侗族自治县"},{"name":"芷江侗族自治县"},{"name":"通道侗族自治县"},{"name":"靖州苗族侗族自治县"},{"name":"麻阳苗族自治县"},{"name":"其他"}],"type":0},{"name":"娄底","sub":[{"name":"请选择"},{"name":"娄星区"},{"name":"冷水江市"},{"name":"涟源市"},{"name":"新化县"},{"name":"双峰县"},{"name":"其他"}],"type":0},{"name":"湘西土家族苗族自治州","sub":[{"name":"请选择"},{"name":"吉首市"},{"name":"古丈县"},{"name":"龙山县"},{"name":"永顺县"},{"name":"凤凰县"},{"name":"泸溪县"},{"name":"保靖县"},{"name":"花垣县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"广西","sub":[{"name":"请选择","sub":[]},{"name":"南宁","sub":[{"name":"请选择"},{"name":"青秀区"},{"name":"兴宁区"},{"name":"西乡塘区"},{"name":"良庆区"},{"name":"江南区"},{"name":"邕宁区"},{"name":"武鸣县"},{"name":"隆安县"},{"name":"马山县"},{"name":"上林县"},{"name":"宾阳县"},{"name":"横县"},{"name":"其他"}],"type":0},{"name":"柳州","sub":[{"name":"请选择"},{"name":"城中区"},{"name":"鱼峰区"},{"name":"柳北区"},{"name":"柳南区"},{"name":"柳江县"},{"name":"柳城县"},{"name":"鹿寨县"},{"name":"融安县"},{"name":"融水苗族自治县"},{"name":"三江侗族自治县"},{"name":"其他"}],"type":0},{"name":"桂林","sub":[{"name":"请选择"},{"name":"象山区"},{"name":"秀峰区"},{"name":"叠彩区"},{"name":"七星区"},{"name":"雁山区"},{"name":"阳朔县"},{"name":"临桂县"},{"name":"灵川县"},{"name":"全州县"},{"name":"平乐县"},{"name":"兴安县"},{"name":"灌阳县"},{"name":"荔浦县"},{"name":"资源县"},{"name":"永福县"},{"name":"龙胜各族自治县"},{"name":"恭城瑶族自治县"},{"name":"其他"}],"type":0},{"name":"梧州","sub":[{"name":"请选择"},{"name":"万秀区"},{"name":"蝶山区"},{"name":"长洲区"},{"name":"岑溪市"},{"name":"苍梧县"},{"name":"藤县"},{"name":"蒙山县"},{"name":"其他"}],"type":0},{"name":"北海","sub":[{"name":"请选择"},{"name":"海城区"},{"name":"银海区"},{"name":"铁山港区"},{"name":"合浦县"},{"name":"其他"}],"type":0},{"name":"防城港","sub":[{"name":"请选择"},{"name":"港口区"},{"name":"防城区"},{"name":"东兴市"},{"name":"上思县"},{"name":"其他"}],"type":0},{"name":"钦州","sub":[{"name":"请选择"},{"name":"钦南区"},{"name":"钦北区"},{"name":"灵山县"},{"name":"浦北县"},{"name":"其他"}],"type":0},{"name":"贵港","sub":[{"name":"请选择"},{"name":"港北区"},{"name":"港南区"},{"name":"覃塘区"},{"name":"桂平市"},{"name":"平南县"},{"name":"其他"}],"type":0},{"name":"玉林","sub":[{"name":"请选择"},{"name":"玉州区"},{"name":"北流市"},{"name":"容县"},{"name":"陆川县"},{"name":"博白县"},{"name":"兴业县"},{"name":"其他"}],"type":0},{"name":"百色","sub":[{"name":"请选择"},{"name":"右江区"},{"name":"凌云县"},{"name":"平果县"},{"name":"西林县"},{"name":"乐业县"},{"name":"德保县"},{"name":"田林县"},{"name":"田阳县"},{"name":"靖西县"},{"name":"田东县"},{"name":"那坡县"},{"name":"隆林各族自治县"},{"name":"其他"}],"type":0},{"name":"贺州","sub":[{"name":"请选择"},{"name":"八步区"},{"name":"钟山县"},{"name":"昭平县"},{"name":"富川瑶族自治县"},{"name":"其他"}],"type":0},{"name":"河池","sub":[{"name":"请选择"},{"name":"金城江区"},{"name":"宜州市"},{"name":"天峨县"},{"name":"凤山县"},{"name":"南丹县"},{"name":"东兰县"},{"name":"都安瑶族自治县"},{"name":"罗城仫佬族自治县"},{"name":"巴马瑶族自治县"},{"name":"环江毛南族自治县"},{"name":"大化瑶族自治县"},{"name":"其他"}],"type":0},{"name":"来宾","sub":[{"name":"请选择"},{"name":"兴宾区"},{"name":"合山市"},{"name":"象州县"},{"name":"武宣县"},{"name":"忻城县"},{"name":"金秀瑶族自治县"},{"name":"其他"}],"type":0},{"name":"崇左","sub":[{"name":"请选择"},{"name":"江州区"},{"name":"凭祥市"},{"name":"宁明县"},{"name":"扶绥县"},{"name":"龙州县"},{"name":"大新县"},{"name":"天等县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"江西","sub":[{"name":"请选择","sub":[]},{"name":"南昌","sub":[{"name":"请选择"},{"name":"东湖区"},{"name":"西湖区"},{"name":"青云谱区"},{"name":"湾里区"},{"name":"青山湖区"},{"name":"新建县"},{"name":"南昌县"},{"name":"进贤县"},{"name":"安义县"},{"name":"其他"}],"type":0},{"name":"景德镇","sub":[{"name":"请选择"},{"name":"珠山区"},{"name":"昌江区"},{"name":"乐平市"},{"name":"浮梁县"},{"name":"其他"}],"type":0},{"name":"萍乡","sub":[{"name":"请选择"},{"name":"安源区"},{"name":"湘东区"},{"name":"莲花县"},{"name":"上栗县"},{"name":"芦溪县"},{"name":"其他"}],"type":0},{"name":"九江","sub":[{"name":"请选择"},{"name":"浔阳区"},{"name":"庐山区"},{"name":"瑞昌市"},{"name":"九江县"},{"name":"星子县"},{"name":"武宁县"},{"name":"彭泽县"},{"name":"永修县"},{"name":"修水县"},{"name":"湖口县"},{"name":"德安县"},{"name":"都昌县"},{"name":"其他"}],"type":0},{"name":"新余","sub":[{"name":"请选择"},{"name":"渝水区"},{"name":"分宜县"},{"name":"其他"}],"type":0},{"name":"鹰潭","sub":[{"name":"请选择"},{"name":"月湖区"},{"name":"贵溪市"},{"name":"余江县"},{"name":"其他"}],"type":0},{"name":"赣州","sub":[{"name":"请选择"},{"name":"章贡区"},{"name":"瑞金市"},{"name":"南康市"},{"name":"石城县"},{"name":"安远县"},{"name":"赣县"},{"name":"宁都县"},{"name":"寻乌县"},{"name":"兴国县"},{"name":"定南县"},{"name":"上犹县"},{"name":"于都县"},{"name":"龙南县"},{"name":"崇义县"},{"name":"信丰县"},{"name":"全南县"},{"name":"大余县"},{"name":"会昌县"},{"name":"其他"}],"type":0},{"name":"吉安","sub":[{"name":"请选择"},{"name":"吉州区"},{"name":"青原区"},{"name":"井冈山市"},{"name":"吉安县"},{"name":"永丰县"},{"name":"永新县"},{"name":"新干县"},{"name":"泰和县"},{"name":"峡江县"},{"name":"遂川县"},{"name":"安福县"},{"name":"吉水县"},{"name":"万安县"},{"name":"其他"}],"type":0},{"name":"宜春","sub":[{"name":"请选择"},{"name":"袁州区"},{"name":"丰城市"},{"name":"樟树市"},{"name":"高安市"},{"name":"铜鼓县"},{"name":"靖安县"},{"name":"宜丰县"},{"name":"奉新县"},{"name":"万载县"},{"name":"上高县"},{"name":"其他"}],"type":0},{"name":"抚州","sub":[{"name":"请选择"},{"name":"临川区"},{"name":"南丰县"},{"name":"乐安县"},{"name":"金溪县"},{"name":"南城县"},{"name":"东乡县"},{"name":"资溪县"},{"name":"宜黄县"},{"name":"广昌县"},{"name":"黎川县"},{"name":"崇仁县"},{"name":"其他"}],"type":0},{"name":"上饶","sub":[{"name":"请选择"},{"name":"信州区"},{"name":"德兴市"},{"name":"上饶县"},{"name":"广丰县"},{"name":"鄱阳县"},{"name":"婺源县"},{"name":"铅山县"},{"name":"余干县"},{"name":"横峰县"},{"name":"弋阳县"},{"name":"玉山县"},{"name":"万年县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"贵州","sub":[{"name":"请选择","sub":[]},{"name":"贵阳","sub":[{"name":"请选择"},{"name":"南明区"},{"name":"云岩区"},{"name":"花溪区"},{"name":"乌当区"},{"name":"白云区"},{"name":"小河区"},{"name":"清镇市"},{"name":"开阳县"},{"name":"修文县"},{"name":"息烽县"},{"name":"其他"}],"type":0},{"name":"六盘水","sub":[{"name":"请选择"},{"name":"钟山区"},{"name":"水城县"},{"name":"盘县"},{"name":"六枝特区"},{"name":"其他"}],"type":0},{"name":"遵义","sub":[{"name":"请选择"},{"name":"红花岗区"},{"name":"汇川区"},{"name":"赤水市"},{"name":"仁怀市"},{"name":"遵义县"},{"name":"绥阳县"},{"name":"桐梓县"},{"name":"习水县"},{"name":"凤冈县"},{"name":"正安县"},{"name":"余庆县"},{"name":"湄潭县"},{"name":"道真仡佬族苗族自治县"},{"name":"务川仡佬族苗族自治县"},{"name":"其他"}],"type":0},{"name":"安顺","sub":[{"name":"请选择"},{"name":"西秀区"},{"name":"普定县"},{"name":"平坝县"},{"name":"镇宁布依族苗族自治县"},{"name":"紫云苗族布依族自治县"},{"name":"关岭布依族苗族自治县"},{"name":"其他"}],"type":0},{"name":"铜仁地区","sub":[{"name":"请选择"},{"name":"铜仁市"},{"name":"德江县"},{"name":"江口县"},{"name":"思南县"},{"name":"石阡县"},{"name":"玉屏侗族自治县"},{"name":"松桃苗族自治县"},{"name":"印江土家族苗族自治县"},{"name":"沿河土家族自治县"},{"name":"万山特区"},{"name":"其他"}],"type":0},{"name":"毕节地区","sub":[{"name":"请选择"},{"name":"毕节市"},{"name":"黔西县"},{"name":"大方县"},{"name":"织金县"},{"name":"金沙县"},{"name":"赫章县"},{"name":"纳雍县"},{"name":"威宁彝族回族苗族自治县"},{"name":"其他"}],"type":0},{"name":"黔西南布依族苗族自治州","sub":[{"name":"请选择"},{"name":"兴义市"},{"name":"望谟县"},{"name":"兴仁县"},{"name":"普安县"},{"name":"册亨县"},{"name":"晴隆县"},{"name":"贞丰县"},{"name":"安龙县"},{"name":"其他"}],"type":0},{"name":"黔东南苗族侗族自治州","sub":[{"name":"请选择"},{"name":"凯里市"},{"name":"施秉县"},{"name":"从江县"},{"name":"锦屏县"},{"name":"镇远县"},{"name":"麻江县"},{"name":"台江县"},{"name":"天柱县"},{"name":"黄平县"},{"name":"榕江县"},{"name":"剑河县"},{"name":"三穗县"},{"name":"雷山县"},{"name":"黎平县"},{"name":"岑巩县"},{"name":"丹寨县"},{"name":"其他"}],"type":0},{"name":"黔南布依族苗族自治州","sub":[{"name":"请选择"},{"name":"都匀市"},{"name":"福泉市"},{"name":"贵定县"},{"name":"惠水县"},{"name":"罗甸县"},{"name":"瓮安县"},{"name":"荔波县"},{"name":"龙里县"},{"name":"平塘县"},{"name":"长顺县"},{"name":"独山县"},{"name":"三都水族自治县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"云南","sub":[{"name":"请选择","sub":[]},{"name":"昆明","sub":[{"name":"请选择"},{"name":"盘龙区"},{"name":"五华区"},{"name":"官渡区"},{"name":"西山区"},{"name":"东川区"},{"name":"安宁市"},{"name":"呈贡县"},{"name":"晋宁县"},{"name":"富民县"},{"name":"宜良县"},{"name":"嵩明县"},{"name":"石林彝族自治县"},{"name":"禄劝彝族苗族自治县"},{"name":"寻甸回族彝族自治县"},{"name":"其他"}],"type":0},{"name":"曲靖","sub":[{"name":"请选择"},{"name":"麒麟区"},{"name":"宣威市"},{"name":"马龙县"},{"name":"沾益县"},{"name":"富源县"},{"name":"罗平县"},{"name":"师宗县"},{"name":"陆良县"},{"name":"会泽县"},{"name":"其他"}],"type":0},{"name":"玉溪","sub":[{"name":"请选择"},{"name":"红塔区"},{"name":"江川县"},{"name":"澄江县"},{"name":"通海县"},{"name":"华宁县"},{"name":"易门县"},{"name":"峨山彝族自治县"},{"name":"新平彝族傣族自治县"},{"name":"元江哈尼族彝族傣族自治县"},{"name":"其他"}],"type":0},{"name":"保山","sub":[{"name":"请选择"},{"name":"隆阳区"},{"name":"施甸县"},{"name":"腾冲县"},{"name":"龙陵县"},{"name":"昌宁县"},{"name":"其他"}],"type":0},{"name":"昭通","sub":[{"name":"请选择"},{"name":"昭阳区"},{"name":"鲁甸县"},{"name":"巧家县"},{"name":"盐津县"},{"name":"大关县"},{"name":"永善县"},{"name":"绥江县"},{"name":"镇雄县"},{"name":"彝良县"},{"name":"威信县"},{"name":"水富县"},{"name":"其他"}],"type":0},{"name":"丽江","sub":[{"name":"请选择"},{"name":"古城区"},{"name":"永胜县"},{"name":"华坪县"},{"name":"玉龙纳西族自治县"},{"name":"宁蒗彝族自治县"},{"name":"其他"}],"type":0},{"name":"普洱","sub":[{"name":"请选择"},{"name":"思茅区"},{"name":"普洱哈尼族彝族自治县"},{"name":"墨江哈尼族自治县"},{"name":"景东彝族自治县"},{"name":"景谷傣族彝族自治县"},{"name":"镇沅彝族哈尼族拉祜族自治县"},{"name":"江城哈尼族彝族自治县"},{"name":"孟连傣族拉祜族佤族自治县"},{"name":"澜沧拉祜族自治县"},{"name":"西盟佤族自治县"},{"name":"其他"}],"type":0},{"name":"临沧","sub":[{"name":"请选择"},{"name":"临翔区"},{"name":"凤庆县"},{"name":"云县"},{"name":"永德县"},{"name":"镇康县"},{"name":"双江拉祜族佤族布朗族傣族自治县"},{"name":"耿马傣族佤族自治县"},{"name":"沧源佤族自治县"},{"name":"其他"}],"type":0},{"name":"德宏傣族景颇族自治州","sub":[{"name":"请选择"},{"name":"潞西市"},{"name":"瑞丽市"},{"name":"梁河县"},{"name":"盈江县"},{"name":"陇川县"},{"name":"其他"}],"type":0},{"name":"怒江傈僳族自治州","sub":[{"name":"请选择"},{"name":"泸水县"},{"name":"福贡县"},{"name":"贡山独龙族怒族自治县"},{"name":"兰坪白族普米族自治县"},{"name":"其他"}],"type":0},{"name":"迪庆藏族自治州","sub":[{"name":"请选择"},{"name":"香格里拉县"},{"name":"德钦县"},{"name":"维西傈僳族自治县"},{"name":"其他"}],"type":0},{"name":"大理白族自治州","sub":[{"name":"请选择"},{"name":"大理市"},{"name":"祥云县"},{"name":"宾川县"},{"name":"弥渡县"},{"name":"永平县"},{"name":"云龙县"},{"name":"洱源县"},{"name":"剑川县"},{"name":"鹤庆县"},{"name":"漾濞彝族自治县"},{"name":"南涧彝族自治县"},{"name":"巍山彝族回族自治县"},{"name":"其他"}],"type":0},{"name":"楚雄彝族自治州","sub":[{"name":"请选择"},{"name":"楚雄市"},{"name":"双柏县"},{"name":"牟定县"},{"name":"南华县"},{"name":"姚安县"},{"name":"大姚县"},{"name":"永仁县"},{"name":"元谋县"},{"name":"武定县"},{"name":"禄丰县"},{"name":"其他"}],"type":0},{"name":"红河哈尼族彝族自治州","sub":[{"name":"请选择"},{"name":"蒙自县"},{"name":"个旧市"},{"name":"开远市"},{"name":"绿春县"},{"name":"建水县"},{"name":"石屏县"},{"name":"弥勒县"},{"name":"泸西县"},{"name":"元阳县"},{"name":"红河县"},{"name":"金平苗族瑶族傣族自治县"},{"name":"河口瑶族自治县"},{"name":"屏边苗族自治县"},{"name":"其他"}],"type":0},{"name":"文山壮族苗族自治州","sub":[{"name":"请选择"},{"name":"文山县"},{"name":"砚山县"},{"name":"西畴县"},{"name":"麻栗坡县"},{"name":"马关县"},{"name":"丘北县"},{"name":"广南县"},{"name":"富宁县"},{"name":"其他"}],"type":0},{"name":"西双版纳傣族自治州","sub":[{"name":"请选择"},{"name":"景洪市"},{"name":"勐海县"},{"name":"勐腊县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"西藏","sub":[{"name":"请选择","sub":[]},{"name":"拉萨","sub":[{"name":"请选择"},{"name":"城关区"},{"name":"林周县"},{"name":"当雄县"},{"name":"尼木县"},{"name":"曲水县"},{"name":"堆龙德庆县"},{"name":"达孜县"},{"name":"墨竹工卡县"},{"name":"其他"}],"type":0},{"name":"那曲地区","sub":[{"name":"请选择"},{"name":"那曲县"},{"name":"嘉黎县"},{"name":"比如县"},{"name":"聂荣县"},{"name":"安多县"},{"name":"申扎县"},{"name":"索县"},{"name":"班戈县"},{"name":"巴青县"},{"name":"尼玛县"},{"name":"其他"}],"type":0},{"name":"昌都地区","sub":[{"name":"请选择"},{"name":"昌都县"},{"name":"江达县"},{"name":"贡觉县"},{"name":"类乌齐县"},{"name":"丁青县"},{"name":"察雅县"},{"name":"八宿县"},{"name":"左贡县"},{"name":"芒康县"},{"name":"洛隆县"},{"name":"边坝县"},{"name":"其他"}],"type":0},{"name":"林芝地区","sub":[{"name":"请选择"},{"name":"林芝县"},{"name":"工布江达县"},{"name":"米林县"},{"name":"墨脱县"},{"name":"波密县"},{"name":"察隅县"},{"name":"朗县"},{"name":"其他"}],"type":0},{"name":"山南地区","sub":[{"name":"请选择"},{"name":"乃东县"},{"name":"扎囊县"},{"name":"贡嘎县"},{"name":"桑日县"},{"name":"琼结县"},{"name":"曲松县"},{"name":"措美县"},{"name":"洛扎县"},{"name":"加查县"},{"name":"隆子县"},{"name":"错那县"},{"name":"浪卡子县"},{"name":"其他"}],"type":0},{"name":"日喀则地区","sub":[{"name":"请选择"},{"name":"日喀则市"},{"name":"南木林县"},{"name":"江孜县"},{"name":"定日县"},{"name":"萨迦县"},{"name":"拉孜县"},{"name":"昂仁县"},{"name":"谢通门县"},{"name":"白朗县"},{"name":"仁布县"},{"name":"康马县"},{"name":"定结县"},{"name":"仲巴县"},{"name":"亚东县"},{"name":"吉隆县"},{"name":"聂拉木县"},{"name":"萨嘎县"},{"name":"岗巴县"},{"name":"其他"}],"type":0},{"name":"阿里地区","sub":[{"name":"请选择"},{"name":"噶尔县"},{"name":"普兰县"},{"name":"札达县"},{"name":"日土县"},{"name":"革吉县"},{"name":"改则县"},{"name":"措勤县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"海南","sub":[{"name":"请选择","sub":[]},{"name":"海口","sub":[{"name":"请选择"},{"name":"龙华区"},{"name":"秀英区"},{"name":"琼山区"},{"name":"美兰区"},{"name":"其他"}],"type":0},{"name":"三亚","sub":[{"name":"请选择"},{"name":"三亚市"},{"name":"其他"}],"type":0},{"name":"五指山","sub":[],"type":0},{"name":"琼海","sub":[],"type":0},{"name":"儋州","sub":[],"type":0},{"name":"文昌","sub":[],"type":0},{"name":"万宁","sub":[],"type":0},{"name":"东方","sub":[],"type":0},{"name":"澄迈县","sub":[],"type":0},{"name":"定安县","sub":[],"type":0},{"name":"屯昌县","sub":[],"type":0},{"name":"临高县","sub":[],"type":0},{"name":"白沙黎族自治县","sub":[],"type":0},{"name":"昌江黎族自治县","sub":[],"type":0},{"name":"乐东黎族自治县","sub":[],"type":0},{"name":"陵水黎族自治县","sub":[],"type":0},{"name":"保亭黎族苗族自治县","sub":[],"type":0},{"name":"琼中黎族苗族自治县","sub":[],"type":0},{"name":"其他"}],"type":1},{"name":"甘肃","sub":[{"name":"请选择","sub":[]},{"name":"兰州","sub":[{"name":"请选择"},{"name":"城关区"},{"name":"七里河区"},{"name":"西固区"},{"name":"安宁区"},{"name":"红古区"},{"name":"永登县"},{"name":"皋兰县"},{"name":"榆中县"},{"name":"其他"}],"type":0},{"name":"嘉峪关","sub":[{"name":"请选择"},{"name":"嘉峪关市"},{"name":"其他"}],"type":0},{"name":"金昌","sub":[{"name":"请选择"},{"name":"金川区"},{"name":"永昌县"},{"name":"其他"}],"type":0},{"name":"白银","sub":[{"name":"请选择"},{"name":"白银区"},{"name":"平川区"},{"name":"靖远县"},{"name":"会宁县"},{"name":"景泰县"},{"name":"其他"}],"type":0},{"name":"天水","sub":[{"name":"请选择"},{"name":"清水县"},{"name":"秦安县"},{"name":"甘谷县"},{"name":"武山县"},{"name":"张家川回族自治县"},{"name":"北道区"},{"name":"秦城区"},{"name":"其他"}],"type":0},{"name":"武威","sub":[{"name":"请选择"},{"name":"凉州区"},{"name":"民勤县"},{"name":"古浪县"},{"name":"天祝藏族自治县"},{"name":"其他"}],"type":0},{"name":"酒泉","sub":[{"name":"请选择"},{"name":"肃州区"},{"name":"玉门市"},{"name":"敦煌市"},{"name":"金塔县"},{"name":"肃北蒙古族自治县"},{"name":"阿克塞哈萨克族自治县"},{"name":"安西县"},{"name":"其他"}],"type":0},{"name":"张掖","sub":[{"name":"请选择"},{"name":"甘州区"},{"name":"民乐县"},{"name":"临泽县"},{"name":"高台县"},{"name":"山丹县"},{"name":"肃南裕固族自治县"},{"name":"其他"}],"type":0},{"name":"庆阳","sub":[{"name":"请选择"},{"name":"西峰区"},{"name":"庆城县"},{"name":"环县"},{"name":"华池县"},{"name":"合水县"},{"name":"正宁县"},{"name":"宁县"},{"name":"镇原县"},{"name":"其他"}],"type":0},{"name":"平凉","sub":[{"name":"请选择"},{"name":"崆峒区"},{"name":"泾川县"},{"name":"灵台县"},{"name":"崇信县"},{"name":"华亭县"},{"name":"庄浪县"},{"name":"静宁县"},{"name":"其他"}],"type":0},{"name":"定西","sub":[{"name":"请选择"},{"name":"安定区"},{"name":"通渭县"},{"name":"临洮县"},{"name":"漳县"},{"name":"岷县"},{"name":"渭源县"},{"name":"陇西县"},{"name":"其他"}],"type":0},{"name":"陇南","sub":[{"name":"请选择"},{"name":"武都区"},{"name":"成县"},{"name":"宕昌县"},{"name":"康县"},{"name":"文县"},{"name":"西和县"},{"name":"礼县"},{"name":"两当县"},{"name":"徽县"},{"name":"其他"}],"type":0},{"name":"临夏回族自治州","sub":[{"name":"请选择"},{"name":"临夏市"},{"name":"临夏县"},{"name":"康乐县"},{"name":"永靖县"},{"name":"广河县"},{"name":"和政县"},{"name":"东乡族自治县"},{"name":"积石山保安族东乡族撒拉族自治县"},{"name":"其他"}],"type":0},{"name":"甘南藏族自治州","sub":[{"name":"请选择"},{"name":"合作市"},{"name":"临潭县"},{"name":"卓尼县"},{"name":"舟曲县"},{"name":"迭部县"},{"name":"玛曲县"},{"name":"碌曲县"},{"name":"夏河县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"宁夏","sub":[{"name":"请选择","sub":[]},{"name":"银川","sub":[{"name":"请选择"},{"name":"兴庆区"},{"name":"西夏区"},{"name":"金凤区"},{"name":"灵武市"},{"name":"永宁县"},{"name":"贺兰县"},{"name":"其他"}],"type":0},{"name":"石嘴山","sub":[{"name":"请选择"},{"name":"大武口区"},{"name":"惠农区"},{"name":"平罗县"},{"name":"其他"}],"type":0},{"name":"吴忠","sub":[{"name":"请选择"},{"name":"利通区"},{"name":"青铜峡市"},{"name":"盐池县"},{"name":"同心县"},{"name":"其他"}],"type":0},{"name":"固原","sub":[{"name":"请选择"},{"name":"原州区"},{"name":"西吉县"},{"name":"隆德县"},{"name":"泾源县"},{"name":"彭阳县"},{"name":"其他"}],"type":0},{"name":"中卫","sub":[{"name":"请选择"},{"name":"沙坡头区"},{"name":"中宁县"},{"name":"海原县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"青海","sub":[{"name":"请选择","sub":[]},{"name":"西宁","sub":[{"name":"请选择"},{"name":"城中区"},{"name":"城东区"},{"name":"城西区"},{"name":"城北区"},{"name":"湟源县"},{"name":"湟中县"},{"name":"大通回族土族自治县"},{"name":"其他"}],"type":0},{"name":"海东地区","sub":[{"name":"请选择"},{"name":"平安县"},{"name":"乐都县"},{"name":"民和回族土族自治县"},{"name":"互助土族自治县"},{"name":"化隆回族自治县"},{"name":"循化撒拉族自治县"},{"name":"其他"}],"type":0},{"name":"海北藏族自治州","sub":[{"name":"请选择"},{"name":"海晏县"},{"name":"祁连县"},{"name":"刚察县"},{"name":"门源回族自治县"},{"name":"其他"}],"type":0},{"name":"海南藏族自治州","sub":[{"name":"请选择"},{"name":"共和县"},{"name":"同德县"},{"name":"贵德县"},{"name":"兴海县"},{"name":"贵南县"},{"name":"其他"}],"type":0},{"name":"黄南藏族自治州","sub":[{"name":"请选择"},{"name":"同仁县"},{"name":"尖扎县"},{"name":"泽库县"},{"name":"河南蒙古族自治县"},{"name":"其他"}],"type":0},{"name":"果洛藏族自治州","sub":[{"name":"请选择"},{"name":"玛沁县"},{"name":"班玛县"},{"name":"甘德县"},{"name":"达日县"},{"name":"久治县"},{"name":"玛多县"},{"name":"其他"}],"type":0},{"name":"玉树藏族自治州","sub":[{"name":"请选择"},{"name":"玉树县"},{"name":"杂多县"},{"name":"称多县"},{"name":"治多县"},{"name":"囊谦县"},{"name":"曲麻莱县"},{"name":"其他"}],"type":0},{"name":"海西蒙古族藏族自治州","sub":[{"name":"请选择"},{"name":"德令哈市"},{"name":"格尔木市"},{"name":"乌兰县"},{"name":"都兰县"},{"name":"天峻县"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"新疆","sub":[{"name":"请选择","sub":[]},{"name":"乌鲁木齐","sub":[{"name":"请选择"},{"name":"天山区"},{"name":"沙依巴克区"},{"name":"新市区"},{"name":"水磨沟区"},{"name":"头屯河区"},{"name":"达坂城区"},{"name":"东山区"},{"name":"乌鲁木齐县"},{"name":"其他"}],"type":0},{"name":"克拉玛依","sub":[{"name":"请选择"},{"name":"克拉玛依区"},{"name":"独山子区"},{"name":"白碱滩区"},{"name":"乌尔禾区"},{"name":"其他"}],"type":0},{"name":"吐鲁番地区","sub":[{"name":"请选择"},{"name":"吐鲁番市"},{"name":"托克逊县"},{"name":"鄯善县"},{"name":"其他"}],"type":0},{"name":"哈密地区","sub":[{"name":"请选择"},{"name":"哈密市"},{"name":"伊吾县"},{"name":"巴里坤哈萨克自治县"},{"name":"其他"}],"type":0},{"name":"和田地区","sub":[{"name":"请选择"},{"name":"和田市"},{"name":"和田县"},{"name":"洛浦县"},{"name":"民丰县"},{"name":"皮山县"},{"name":"策勒县"},{"name":"于田县"},{"name":"墨玉县"},{"name":"其他"}],"type":0},{"name":"阿克苏地区","sub":[{"name":"请选择"},{"name":"阿克苏市"},{"name":"温宿县"},{"name":"沙雅县"},{"name":"拜城县"},{"name":"阿瓦提县"},{"name":"库车县"},{"name":"柯坪县"},{"name":"新和县"},{"name":"乌什县"},{"name":"其他"}],"type":0},{"name":"喀什地区","sub":[{"name":"请选择"},{"name":"喀什市"},{"name":"巴楚县"},{"name":"泽普县"},{"name":"伽师县"},{"name":"叶城县"},{"name":"岳普湖县"},{"name":"疏勒县"},{"name":"麦盖提县"},{"name":"英吉沙县"},{"name":"莎车县"},{"name":"疏附县"},{"name":"塔什库尔干塔吉克自治县"},{"name":"其他"}],"type":0},{"name":"克孜勒苏柯尔克孜自治州","sub":[{"name":"请选择"},{"name":"阿图什市"},{"name":"阿合奇县"},{"name":"乌恰县"},{"name":"阿克陶县"},{"name":"其他"}],"type":0},{"name":"巴音郭楞蒙古自治州","sub":[{"name":"请选择"},{"name":"库尔勒市"},{"name":"和静县"},{"name":"尉犁县"},{"name":"和硕县"},{"name":"且末县"},{"name":"博湖县"},{"name":"轮台县"},{"name":"若羌县"},{"name":"焉耆回族自治县"},{"name":"其他"}],"type":0},{"name":"昌吉回族自治州","sub":[{"name":"请选择"},{"name":"昌吉市"},{"name":"阜康市"},{"name":"奇台县"},{"name":"玛纳斯县"},{"name":"吉木萨尔县"},{"name":"呼图壁县"},{"name":"木垒哈萨克自治县"},{"name":"米泉市"},{"name":"其他"}],"type":0},{"name":"博尔塔拉蒙古自治州","sub":[{"name":"请选择"},{"name":"博乐市"},{"name":"精河县"},{"name":"温泉县"},{"name":"其他"}],"type":0},{"name":"石河子","sub":[],"type":0},{"name":"阿拉尔","sub":[],"type":0},{"name":"图木舒克","sub":[],"type":0},{"name":"五家渠","sub":[],"type":0},{"name":"伊犁哈萨克自治州","sub":[{"name":"请选择"},{"name":"伊宁市"},{"name":"奎屯市"},{"name":"伊宁县"},{"name":"特克斯县"},{"name":"尼勒克县"},{"name":"昭苏县"},{"name":"新源县"},{"name":"霍城县"},{"name":"巩留县"},{"name":"察布查尔锡伯自治县"},{"name":"塔城地区"},{"name":"阿勒泰地区"},{"name":"其他"}],"type":0},{"name":"其他"}],"type":1},{"name":"香港","sub":[{"name":"请选择"},{"name":"中西区"},{"name":"湾仔区"},{"name":"东区"},{"name":"南区"},{"name":"深水埗区"},{"name":"油尖旺区"},{"name":"九龙城区"},{"name":"黄大仙区"},{"name":"观塘区"},{"name":"北区"},{"name":"大埔区"},{"name":"沙田区"},{"name":"西贡区"},{"name":"元朗区"},{"name":"屯门区"},{"name":"荃湾区"},{"name":"葵青区"},{"name":"离岛区"},{"name":"其他"}],"type":0},{"name":"澳门","sub":[{"name":"请选择"},{"name":"花地玛堂区"},{"name":"圣安多尼堂区"},{"name":"大堂区"},{"name":"望德堂区"},{"name":"风顺堂区"},{"name":"嘉模堂区"},{"name":"圣方济各堂区"},{"name":"路凼"},{"name":"其他"}],"type":0},{"name":"台湾","sub":[{"name":"请选择"},{"name":"台北市"},{"name":"高雄市"},{"name":"台北县"},{"name":"桃园县"},{"name":"新竹县"},{"name":"苗栗县"},{"name":"台中县"},{"name":"彰化县"},{"name":"南投县"},{"name":"云林县"},{"name":"嘉义县"},{"name":"台南县"},{"name":"高雄县"},{"name":"屏东县"},{"name":"宜兰县"},{"name":"花莲县"},{"name":"台东县"},{"name":"澎湖县"},{"name":"基隆市"},{"name":"新竹市"},{"name":"台中市"},{"name":"嘉义市"},{"name":"台南市"},{"name":"其他"}],"type":0},{"name":"海外","sub":[{"name":"请选择"},{"name":"其他"}],"type":0}];})(Zepto); // jshint ignore: end
	/* global Zepto:true */ /* jshint unused:false*/+(function($){"use strict";var format=function format(data){var result=[];for(var i=0;i < data.length;i++) {var d=data[i];if(d.name === "请选择")continue;result.push(d.name);}if(result.length)return result;return [""];};var sub=function sub(data){if(!data.sub)return [""];return format(data.sub);};var getCities=function getCities(d){for(var i=0;i < raw.length;i++) {if(raw[i].name === d)return sub(raw[i]);}return [""];};var getDistricts=function getDistricts(p,c){for(var i=0;i < raw.length;i++) {if(raw[i].name === p){for(var j=0;j < raw[i].sub.length;j++) {if(raw[i].sub[j].name === c){return sub(raw[i].sub[j]);}}}}return [""];};var raw=$.smConfig.rawCitiesData;var provinces=raw.map(function(d){return d.name;});var initCities=sub(raw[0]);var initDistricts=[""];var currentProvince=provinces[0];var currentCity=initCities[0];var currentDistrict=initDistricts[0];var defaults={cssClass:"city-picker",rotateEffect:false, //为了性能
	onChange:function onChange(picker,values,displayValues){var newProvince=picker.cols[0].value;var newCity;if(newProvince !== currentProvince){var newCities=getCities(newProvince);newCity = newCities[0];var newDistricts=getDistricts(newProvince,newCity);picker.cols[1].replaceValues(newCities);picker.cols[2].replaceValues(newDistricts);currentProvince = newProvince;currentCity = newCity;picker.updateValue();return;}newCity = picker.cols[1].value;if(newCity !== currentCity){picker.cols[2].replaceValues(getDistricts(newProvince,newCity));currentCity = newCity;picker.updateValue();}},cols:[{values:provinces,cssClass:"col-province"},{values:initCities,cssClass:"col-city"},{values:initDistricts,cssClass:"col-district"}]};$.fn.cityPicker = function(params){return this.each(function(){if(!this)return;var p=$.extend(defaults,params); //计算value
	var val=$(this).val();if(val){p.value = val.split(" ");if(p.value[0]){p.cols[1].values = getCities(p.value[0]);}if(p.value[1]){p.cols[2].values = getDistricts(p.value[0],p.value[1]);}else {p.cols[2].values = getDistricts(p.value[0],p.cols[1].values[0]);}}$(this).picker(p);});};})(Zepto); // jshint ignore: start

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(7);


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */
	
	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/
	
	'use strict';
	
	var EventPluginUtils = __webpack_require__(9);
	var ReactChildren = __webpack_require__(13);
	var ReactComponent = __webpack_require__(27);
	var ReactClass = __webpack_require__(42);
	var ReactContext = __webpack_require__(17);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactElement = __webpack_require__(16);
	var ReactElementValidator = __webpack_require__(37);
	var ReactDOM = __webpack_require__(45);
	var ReactDOMTextComponent = __webpack_require__(47);
	var ReactDefaultInjection = __webpack_require__(96);
	var ReactInstanceHandles = __webpack_require__(24);
	var ReactMount = __webpack_require__(72);
	var ReactPerf = __webpack_require__(33);
	var ReactPropTypes = __webpack_require__(127);
	var ReactReconciler = __webpack_require__(34);
	var ReactServerRendering = __webpack_require__(159);
	
	var assign = __webpack_require__(18);
	var findDOMNode = __webpack_require__(116);
	var onlyChild = __webpack_require__(161);
	
	ReactDefaultInjection.inject();
	
	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;
	
	if ("production" !== process.env.NODE_ENV) {
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}
	
	var render = ReactPerf.measure('React', 'render', ReactMount.render);
	
	var React = {
	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    only: onlyChild
	  },
	  Component: ReactComponent,
	  DOM: ReactDOM,
	  PropTypes: ReactPropTypes,
	  initializeTouchEvents: function(shouldUseTouch) {
	    EventPluginUtils.useTouchEvents = shouldUseTouch;
	  },
	  createClass: ReactClass.createClass,
	  createElement: createElement,
	  cloneElement: cloneElement,
	  createFactory: createFactory,
	  createMixin: function(mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },
	  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
	  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
	  findDOMNode: findDOMNode,
	  render: render,
	  renderToString: ReactServerRendering.renderToString,
	  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  isValidElement: ReactElement.isValidElement,
	  withContext: ReactContext.withContext,
	
	  // Hook for JSX spread, don't use this for anything else.
	  __spread: assign
	};
	
	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	if (
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
	  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    CurrentOwner: ReactCurrentOwner,
	    InstanceHandles: ReactInstanceHandles,
	    Mount: ReactMount,
	    Reconciler: ReactReconciler,
	    TextComponent: ReactDOMTextComponent
	  });
	}
	
	if ("production" !== process.env.NODE_ENV) {
	  var ExecutionEnvironment = __webpack_require__(56);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
	
	    // If we're in Chrome, look for the devtools marker and provide a download
	    // link if not installed.
	    if (navigator.userAgent.indexOf('Chrome') > -1) {
	      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	        console.debug(
	          'Download the React DevTools for a better development experience: ' +
	          'https://fb.me/react-devtools'
	        );
	      }
	    }
	
	    var expectedFeatures = [
	      // shims
	      Array.isArray,
	      Array.prototype.every,
	      Array.prototype.forEach,
	      Array.prototype.indexOf,
	      Array.prototype.map,
	      Date.now,
	      Function.prototype.bind,
	      Object.keys,
	      String.prototype.split,
	      String.prototype.trim,
	
	      // shams
	      Object.create,
	      Object.freeze
	    ];
	
	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        console.error(
	          'One or more ES5 shim/shams expected by React are not available: ' +
	          'https://fb.me/react-warning-polyfills'
	        );
	        break;
	      }
	    }
	  }
	}
	
	React.version = '0.13.3';
	
	module.exports = React;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 8 */
/***/ function(module, exports) {

	// shim for using process in browser
	
	var process = module.exports = {};
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = setTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    clearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        setTimeout(drainQueue, 0);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Injected dependencies:
	 */
	
	/**
	 * - `Mount`: [required] Module that can convert between React dom IDs and
	 *   actual node references.
	 */
	var injection = {
	  Mount: null,
	  injectMount: function(InjectedMount) {
	    injection.Mount = InjectedMount;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        InjectedMount && InjectedMount.getNode,
	        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
	        'is missing getNode.'
	      ) : invariant(InjectedMount && InjectedMount.getNode));
	    }
	  }
	};
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp ||
	         topLevelType === topLevelTypes.topTouchEnd ||
	         topLevelType === topLevelTypes.topTouchCancel;
	}
	
	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove ||
	         topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown ||
	         topLevelType === topLevelTypes.topTouchStart;
	}
	
	
	var validateEventDispatches;
	if ("production" !== process.env.NODE_ENV) {
	  validateEventDispatches = function(event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchIDs = event._dispatchIDs;
	
	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var idsIsArr = Array.isArray(dispatchIDs);
	    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
	    var listenersLen = listenersIsArr ?
	      dispatchListeners.length :
	      dispatchListeners ? 1 : 0;
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      idsIsArr === listenersIsArr && IDsLen === listenersLen,
	      'EventPluginUtils: Invalid `event`.'
	    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
	  };
	}
	
	/**
	 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
	 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
	 * kept separate to conserve memory.
	 */
	function forEachEventDispatch(event, cb) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      cb(event, dispatchListeners[i], dispatchIDs[i]);
	    }
	  } else if (dispatchListeners) {
	    cb(event, dispatchListeners, dispatchIDs);
	  }
	}
	
	/**
	 * Default implementation of PluginModule.executeDispatch().
	 * @param {SyntheticEvent} SyntheticEvent to handle
	 * @param {function} Application-level callback
	 * @param {string} domID DOM id to pass to the callback.
	 */
	function executeDispatch(event, listener, domID) {
	  event.currentTarget = injection.Mount.getNode(domID);
	  var returnValue = listener(event, domID);
	  event.currentTarget = null;
	  return returnValue;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, cb) {
	  forEachEventDispatch(event, cb);
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	}
	
	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return id of the first dispatch execution who's listener returns true, or
	 * null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchIDs = event._dispatchIDs;
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and IDs are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchIDs[i])) {
	        return dispatchIDs[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchIDs)) {
	      return dispatchIDs;
	    }
	  }
	  return null;
	}
	
	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchIDs = null;
	  event._dispatchListeners = null;
	  return ret;
	}
	
	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if ("production" !== process.env.NODE_ENV) {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchID = event._dispatchIDs;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(dispatchListener),
	    'executeDirectDispatch(...): Invalid `event`.'
	  ) : invariant(!Array.isArray(dispatchListener)));
	  var res = dispatchListener ?
	    dispatchListener(event, dispatchID) :
	    null;
	  event._dispatchListeners = null;
	  event._dispatchIDs = null;
	  return res;
	}
	
	/**
	 * @param {SyntheticEvent} event
	 * @return {bool} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}
	
	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,
	
	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatch: executeDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,
	  injection: injection,
	  useTouchEvents: false
	};
	
	module.exports = EventPluginUtils;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(11);
	
	var PropagationPhases = keyMirror({bubbled: null, captured: null});
	
	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topBlur: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topReset: null,
	  topScroll: null,
	  topSelectionChange: null,
	  topSubmit: null,
	  topTextInput: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topWheel: null
	});
	
	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};
	
	module.exports = EventConstants;


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyMirror
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function(obj) {
	  var ret = {};
	  var key;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    obj instanceof Object && !Array.isArray(obj),
	    'keyMirror(...): Argument must be an object.'
	  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};
	
	module.exports = keyMirror;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule invariant
	 */
	
	"use strict";
	
	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */
	
	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }
	
	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        'Invariant Violation: ' +
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	    }
	
	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};
	
	module.exports = invariant;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	var ReactFragment = __webpack_require__(15);
	
	var traverseAllChildren = __webpack_require__(23);
	var warning = __webpack_require__(20);
	
	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var threeArgumentPooler = PooledClass.threeArgumentPooler;
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.forEachFunction = forEachFunction;
	  this.forEachContext = forEachContext;
	}
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);
	
	function forEachSingleChild(traverseContext, child, name, i) {
	  var forEachBookKeeping = traverseContext;
	  forEachBookKeeping.forEachFunction.call(
	    forEachBookKeeping.forEachContext, child, i);
	}
	
	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc.
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	
	  var traverseContext =
	    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}
	
	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, mapFunction, mapContext) {
	  this.mapResult = mapResult;
	  this.mapFunction = mapFunction;
	  this.mapContext = mapContext;
	}
	PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);
	
	function mapSingleChildIntoContext(traverseContext, child, name, i) {
	  var mapBookKeeping = traverseContext;
	  var mapResult = mapBookKeeping.mapResult;
	
	  var keyUnique = !mapResult.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'ReactChildren.map(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }
	
	  if (keyUnique) {
	    var mappedChild =
	      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
	    mapResult[name] = mappedChild;
	  }
	}
	
	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * TODO: This may likely break any calls to `ReactChildren.map` that were
	 * previously relying on the fact that we guarded against null children.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} mapFunction.
	 * @param {*} mapContext Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	
	  var mapResult = {};
	  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	  return ReactFragment.create(mapResult);
	}
	
	function forEachSingleChildDummy(traverseContext, child, name, i) {
	  return null;
	}
	
	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}
	
	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  count: countChildren
	};
	
	module.exports = ReactChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function(copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};
	
	var twoArgumentPooler = function(a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};
	
	var threeArgumentPooler = function(a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};
	
	var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};
	
	var standardReleaser = function(instance) {
	  var Klass = this;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    instance instanceof Klass,
	    'Trying to release an instance into a pool of a different type.'
	  ) : invariant(instance instanceof Klass));
	  if (instance.destructor) {
	    instance.destructor();
	  }
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};
	
	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;
	
	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances (optional).
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function(CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};
	
	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};
	
	module.exports = PooledClass;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule ReactFragment
	*/
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	
	var warning = __webpack_require__(20);
	
	/**
	 * We used to allow keyed objects to serve as a collection of ReactElements,
	 * or nested sets. This allowed us a way to explicitly key a set a fragment of
	 * components. This is now being replaced with an opaque data structure.
	 * The upgrade path is to call React.addons.createFragment({ key: value }) to
	 * create a keyed fragment. The resulting data structure is opaque, for now.
	 */
	
	if ("production" !== process.env.NODE_ENV) {
	  var fragmentKey = '_reactFragment';
	  var didWarnKey = '_reactDidWarn';
	  var canWarnForReactFragment = false;
	
	  try {
	    // Feature test. Don't even try to issue this warning if we can't use
	    // enumerable: false.
	
	    var dummy = function() {
	      return 1;
	    };
	
	    Object.defineProperty(
	      {},
	      fragmentKey,
	      {enumerable: false, value: true}
	    );
	
	    Object.defineProperty(
	      {},
	      'key',
	      {enumerable: true, get: dummy}
	    );
	
	    canWarnForReactFragment = true;
	  } catch (x) { }
	
	  var proxyPropertyAccessWithWarning = function(obj, key) {
	    Object.defineProperty(obj, key, {
	      enumerable: true,
	      get: function() {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an opaque type. Accessing any of its ' +
	          'properties is deprecated. Pass it to one of the React.Children ' +
	          'helpers.'
	        ) : null);
	        this[didWarnKey] = true;
	        return this[fragmentKey][key];
	      },
	      set: function(value) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this[didWarnKey],
	          'A ReactFragment is an immutable opaque type. Mutating its ' +
	          'properties is deprecated.'
	        ) : null);
	        this[didWarnKey] = true;
	        this[fragmentKey][key] = value;
	      }
	    });
	  };
	
	  var issuedWarnings = {};
	
	  var didWarnForFragment = function(fragment) {
	    // We use the keys and the type of the value as a heuristic to dedupe the
	    // warning to avoid spamming too much.
	    var fragmentCacheKey = '';
	    for (var key in fragment) {
	      fragmentCacheKey += key + ':' + (typeof fragment[key]) + ',';
	    }
	    var alreadyWarnedOnce = !!issuedWarnings[fragmentCacheKey];
	    issuedWarnings[fragmentCacheKey] = true;
	    return alreadyWarnedOnce;
	  };
	}
	
	var ReactFragment = {
	  // Wrap a keyed object in an opaque proxy that warns you if you access any
	  // of its properties.
	  create: function(object) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (typeof object !== 'object' || !object || Array.isArray(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment only accepts a single object.',
	          object
	        ) : null);
	        return object;
	      }
	      if (ReactElement.isValidElement(object)) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'React.addons.createFragment does not accept a ReactElement ' +
	          'without a wrapper object.'
	        ) : null);
	        return object;
	      }
	      if (canWarnForReactFragment) {
	        var proxy = {};
	        Object.defineProperty(proxy, fragmentKey, {
	          enumerable: false,
	          value: object
	        });
	        Object.defineProperty(proxy, didWarnKey, {
	          writable: true,
	          enumerable: false,
	          value: false
	        });
	        for (var key in object) {
	          proxyPropertyAccessWithWarning(proxy, key);
	        }
	        Object.preventExtensions(proxy);
	        return proxy;
	      }
	    }
	    return object;
	  },
	  // Extract the original keyed object from the fragment opaque type. Warn if
	  // a plain object is passed here.
	  extract: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        if (!fragment[fragmentKey]) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnForFragment(fragment),
	            'Any use of a keyed object should be wrapped in ' +
	            'React.addons.createFragment(object) before being passed as a ' +
	            'child.'
	          ) : null);
	          return fragment;
	        }
	        return fragment[fragmentKey];
	      }
	    }
	    return fragment;
	  },
	  // Check if this is a fragment and if so, extract the keyed object. If it
	  // is a fragment-like object, warn that it should be wrapped. Ignore if we
	  // can't determine what kind of object this is.
	  extractIfFragment: function(fragment) {
	    if ("production" !== process.env.NODE_ENV) {
	      if (canWarnForReactFragment) {
	        // If it is the opaque type, return the keyed object.
	        if (fragment[fragmentKey]) {
	          return fragment[fragmentKey];
	        }
	        // Otherwise, check each property if it has an element, if it does
	        // it is probably meant as a fragment, so we can warn early. Defer,
	        // the warning to extract.
	        for (var key in fragment) {
	          if (fragment.hasOwnProperty(key) &&
	              ReactElement.isValidElement(fragment[key])) {
	            // This looks like a fragment object, we should provide an
	            // early warning.
	            return ReactFragment.extract(fragment);
	          }
	        }
	      }
	    }
	    return fragment;
	  }
	};
	
	module.exports = ReactFragment;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */
	
	'use strict';
	
	var ReactContext = __webpack_require__(17);
	var ReactCurrentOwner = __webpack_require__(22);
	
	var assign = __webpack_require__(18);
	var warning = __webpack_require__(20);
	
	var RESERVED_PROPS = {
	  key: true,
	  ref: true
	};
	
	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} object
	 * @param {string} key
	 */
	function defineWarningProperty(object, key) {
	  Object.defineProperty(object, key, {
	
	    configurable: false,
	    enumerable: true,
	
	    get: function() {
	      if (!this._store) {
	        return null;
	      }
	      return this._store[key];
	    },
	
	    set: function(value) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        false,
	        'Don\'t set the %s property of the React element. Instead, ' +
	        'specify the correct value when initially creating the element.',
	        key
	      ) : null);
	      this._store[key] = value;
	    }
	
	  });
	}
	
	/**
	 * This is updated to true if the membrane is successfully created.
	 */
	var useMutationMembrane = false;
	
	/**
	 * Warn for mutations.
	 *
	 * @internal
	 * @param {object} element
	 */
	function defineMutationMembrane(prototype) {
	  try {
	    var pseudoFrozenProperties = {
	      props: true
	    };
	    for (var key in pseudoFrozenProperties) {
	      defineWarningProperty(prototype, key);
	    }
	    useMutationMembrane = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}
	
	/**
	 * Base constructor for all React elements. This is only used to make this
	 * work with a dynamic instanceof check. Nothing should live on this prototype.
	 *
	 * @param {*} type
	 * @param {string|object} ref
	 * @param {*} key
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function(type, key, ref, owner, context, props) {
	  // Built-in properties that belong on the element
	  this.type = type;
	  this.key = key;
	  this.ref = ref;
	
	  // Record the component responsible for creating this element.
	  this._owner = owner;
	
	  // TODO: Deprecate withContext, and then the context becomes accessible
	  // through the owner.
	  this._context = context;
	
	  if ("production" !== process.env.NODE_ENV) {
	    // The validation flag and props are currently mutative. We put them on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    this._store = {props: props, originalProps: assign({}, props)};
	
	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    try {
	      Object.defineProperty(this._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true
	      });
	    } catch (x) {
	    }
	    this._store.validated = false;
	
	    // We're not allowed to set props directly on the object so we early
	    // return and rely on the prototype membrane to forward to the backing
	    // store.
	    if (useMutationMembrane) {
	      Object.freeze(this);
	      return;
	    }
	  }
	
	  this.props = props;
	};
	
	// We intentionally don't expose the function on the constructor property.
	// ReactElement should be indistinguishable from a plain object.
	ReactElement.prototype = {
	  _isReactElement: true
	};
	
	if ("production" !== process.env.NODE_ENV) {
	  defineMutationMembrane(ReactElement.prototype);
	}
	
	ReactElement.createElement = function(type, config, children) {
	  var propName;
	
	  // Reserved names are extracted
	  var props = {};
	
	  var key = null;
	  var ref = null;
	
	  if (config != null) {
	    ref = config.ref === undefined ? null : config.ref;
	    key = config.key === undefined ? null : '' + config.key;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (typeof props[propName] === 'undefined') {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	
	  return new ReactElement(
	    type,
	    key,
	    ref,
	    ReactCurrentOwner.current,
	    ReactContext.current,
	    props
	  );
	};
	
	ReactElement.createFactory = function(type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};
	
	ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
	  var newElement = new ReactElement(
	    oldElement.type,
	    oldElement.key,
	    oldElement.ref,
	    oldElement._owner,
	    oldElement._context,
	    newProps
	  );
	
	  if ("production" !== process.env.NODE_ENV) {
	    // If the key on the original is valid, then the clone is valid
	    newElement._store.validated = oldElement._store.validated;
	  }
	  return newElement;
	};
	
	ReactElement.cloneElement = function(element, config, children) {
	  var propName;
	
	  // Original props are copied
	  var props = assign({}, element.props);
	
	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	
	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;
	
	  if (config != null) {
	    if (config.ref !== undefined) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (config.key !== undefined) {
	      key = '' + config.key;
	    }
	    // Remaining properties override existing props
	    for (propName in config) {
	      if (config.hasOwnProperty(propName) &&
	          !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }
	
	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }
	
	  return new ReactElement(
	    element.type,
	    key,
	    ref,
	    owner,
	    element._context,
	    props
	  );
	};
	
	/**
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function(object) {
	  // ReactTestUtils is often used outside of beforeEach where as React is
	  // within it. This leads to two different instances of React on the same
	  // page. To identify a element from a different React instance we use
	  // a flag instead of an instanceof check.
	  var isElement = !!(object && object._isReactElement);
	  // if (isElement && !(object instanceof ReactElement)) {
	  // This is an indicator that you're using multiple versions of React at the
	  // same time. This will screw with ownership and stuff. Fix it, please.
	  // TODO: We could possibly warn here.
	  // }
	  return isElement;
	};
	
	module.exports = ReactElement;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactContext
	 */
	
	'use strict';
	
	var assign = __webpack_require__(18);
	var emptyObject = __webpack_require__(19);
	var warning = __webpack_require__(20);
	
	var didWarn = false;
	
	/**
	 * Keeps track of the current context.
	 *
	 * The context is automatically passed down the component ownership hierarchy
	 * and is accessible via `this.context` on ReactCompositeComponents.
	 */
	var ReactContext = {
	
	  /**
	   * @internal
	   * @type {object}
	   */
	  current: emptyObject,
	
	  /**
	   * Temporarily extends the current context while executing scopedCallback.
	   *
	   * A typical use case might look like
	   *
	   *  render: function() {
	   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
	   *
	   *    ));
	   *    return <div>{children}</div>;
	   *  }
	   *
	   * @param {object} newContext New context to merge into the existing context
	   * @param {function} scopedCallback Callback to run with the new context
	   * @return {ReactComponent|array<ReactComponent>}
	   */
	  withContext: function(newContext, scopedCallback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        didWarn,
	        'withContext is deprecated and will be removed in a future version. ' +
	        'Use a wrapper component with getChildContext instead.'
	      ) : null);
	
	      didWarn = true;
	    }
	
	    var result;
	    var previousContext = ReactContext.current;
	    ReactContext.current = assign({}, previousContext, newContext);
	    try {
	      result = scopedCallback();
	    } finally {
	      ReactContext.current = previousContext;
	    }
	    return result;
	  }
	
	};
	
	module.exports = ReactContext;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 18 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Object.assign
	 */
	
	// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign
	
	'use strict';
	
	function assign(target, sources) {
	  if (target == null) {
	    throw new TypeError('Object.assign target cannot be null or undefined');
	  }
	
	  var to = Object(target);
	  var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
	    var nextSource = arguments[nextIndex];
	    if (nextSource == null) {
	      continue;
	    }
	
	    var from = Object(nextSource);
	
	    // We don't currently support accessors nor proxies. Therefore this
	    // copy cannot throw. If we ever supported this then we must handle
	    // exceptions and side-effects. We don't support symbols so they won't
	    // be transferred.
	
	    for (var key in from) {
	      if (hasOwnProperty.call(from, key)) {
	        to[key] = from[key];
	      }
	    }
	  }
	
	  return to;
	}
	
	module.exports = assign;


/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyObject
	 */
	
	"use strict";
	
	var emptyObject = {};
	
	if ("production" !== process.env.NODE_ENV) {
	  Object.freeze(emptyObject);
	}
	
	module.exports = emptyObject;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule warning
	 */
	
	"use strict";
	
	var emptyFunction = __webpack_require__(21);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if ("production" !== process.env.NODE_ENV) {
	  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }
	
	    if (format.length < 10 || /^[s\W]*$/.test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }
	
	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];});
	      console.warn(message);
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}
	
	module.exports = warning;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 21 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule emptyFunction
	 */
	
	function makeEmptyFunction(arg) {
	  return function() {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	function emptyFunction() {}
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function() { return this; };
	emptyFunction.thatReturnsArgument = function(arg) { return arg; };
	
	module.exports = emptyFunction;


/***/ },
/* 22 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */
	
	'use strict';
	
	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 *
	 * The depth indicate how many composite components are above this render level.
	 */
	var ReactCurrentOwner = {
	
	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null
	
	};
	
	module.exports = ReactCurrentOwner;


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactFragment = __webpack_require__(15);
	var ReactInstanceHandles = __webpack_require__(24);
	
	var getIteratorFn = __webpack_require__(26);
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	var SUBSEPARATOR = ':';
	
	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */
	
	var userProvidedKeyEscaperLookup = {
	  '=': '=0',
	  '.': '=1',
	  ':': '=2'
	};
	
	var userProvidedKeyEscapeRegex = /[=.:]/g;
	
	var didWarnAboutMaps = false;
	
	function userProvidedKeyEscaper(match) {
	  return userProvidedKeyEscaperLookup[match];
	}
	
	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  if (component && component.key != null) {
	    // Explicit key
	    return wrapUserProvidedKey(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}
	
	/**
	 * Escape a component key so that it is safe to use in a reactid.
	 *
	 * @param {*} key Component key to be escaped.
	 * @return {string} An escaped string.
	 */
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(
	    userProvidedKeyEscapeRegex,
	    userProvidedKeyEscaper
	  );
	}
	
	/**
	 * Wrap a `key` value explicitly provided by the user to distinguish it from
	 * implicitly-generated keys generated by a component's index in its parent.
	 *
	 * @param {string} key Value of a user-provided `key` attribute
	 * @return {string}
	 */
	function wrapUserProvidedKey(key) {
	  return '$' + escapeUserProvidedKey(key);
	}
	
	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!number} indexSoFar Number of children encountered until this point.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(
	  children,
	  nameSoFar,
	  indexSoFar,
	  callback,
	  traverseContext
	) {
	  var type = typeof children;
	
	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }
	
	  if (children === null ||
	      type === 'string' ||
	      type === 'number' ||
	      ReactElement.isValidElement(children)) {
	    callback(
	      traverseContext,
	      children,
	      // If it's the only child, treat the name as if it was wrapped in an array
	      // so that it's consistent if the number of children grows.
	      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar,
	      indexSoFar
	    );
	    return 1;
	  }
	
	  var child, nextName, nextIndex;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	
	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = (
	        (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	        getComponentKey(child, i)
	      );
	      nextIndex = indexSoFar + subtreeCount;
	      subtreeCount += traverseAllChildrenImpl(
	        child,
	        nextName,
	        nextIndex,
	        callback,
	        traverseContext
	      );
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            getComponentKey(child, ii++)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      } else {
	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            didWarnAboutMaps,
	            'Using Maps as children is not yet fully supported. It is an ' +
	            'experimental feature that might be removed. Convert it to a ' +
	            'sequence / iterable of keyed ReactElements instead.'
	          ) : null);
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = (
	              (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	              wrapUserProvidedKey(entry[0]) + SUBSEPARATOR +
	              getComponentKey(child, 0)
	            );
	            nextIndex = indexSoFar + subtreeCount;
	            subtreeCount += traverseAllChildrenImpl(
	              child,
	              nextName,
	              nextIndex,
	              callback,
	              traverseContext
	            );
	          }
	        }
	      }
	    } else if (type === 'object') {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        children.nodeType !== 1,
	        'traverseAllChildren(...): Encountered an invalid child; DOM ' +
	        'elements are not valid children of React components.'
	      ) : invariant(children.nodeType !== 1));
	      var fragment = ReactFragment.extract(children);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          child = fragment[key];
	          nextName = (
	            (nameSoFar !== '' ? nameSoFar + SUBSEPARATOR : SEPARATOR) +
	            wrapUserProvidedKey(key) + SUBSEPARATOR +
	            getComponentKey(child, 0)
	          );
	          nextIndex = indexSoFar + subtreeCount;
	          subtreeCount += traverseAllChildrenImpl(
	            child,
	            nextName,
	            nextIndex,
	            callback,
	            traverseContext
	          );
	        }
	      }
	    }
	  }
	
	  return subtreeCount;
	}
	
	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }
	
	  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
	}
	
	module.exports = traverseAllChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceHandles
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactRootIndex = __webpack_require__(25);
	
	var invariant = __webpack_require__(12);
	
	var SEPARATOR = '.';
	var SEPARATOR_LENGTH = SEPARATOR.length;
	
	/**
	 * Maximum depth of traversals before we consider the possibility of a bad ID.
	 */
	var MAX_TREE_DEPTH = 100;
	
	/**
	 * Creates a DOM ID prefix to use when mounting React components.
	 *
	 * @param {number} index A unique integer
	 * @return {string} React root ID.
	 * @internal
	 */
	function getReactRootIDString(index) {
	  return SEPARATOR + index.toString(36);
	}
	
	/**
	 * Checks if a character in the supplied ID is a separator or the end.
	 *
	 * @param {string} id A React DOM ID.
	 * @param {number} index Index of the character to check.
	 * @return {boolean} True if the character is a separator or end of the ID.
	 * @private
	 */
	function isBoundary(id, index) {
	  return id.charAt(index) === SEPARATOR || index === id.length;
	}
	
	/**
	 * Checks if the supplied string is a valid React DOM ID.
	 *
	 * @param {string} id A React DOM ID, maybe.
	 * @return {boolean} True if the string is a valid React DOM ID.
	 * @private
	 */
	function isValidID(id) {
	  return id === '' || (
	    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
	  );
	}
	
	/**
	 * Checks if the first ID is an ancestor of or equal to the second ID.
	 *
	 * @param {string} ancestorID
	 * @param {string} descendantID
	 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
	 * @internal
	 */
	function isAncestorIDOf(ancestorID, descendantID) {
	  return (
	    descendantID.indexOf(ancestorID) === 0 &&
	    isBoundary(descendantID, ancestorID.length)
	  );
	}
	
	/**
	 * Gets the parent ID of the supplied React DOM ID, `id`.
	 *
	 * @param {string} id ID of a component.
	 * @return {string} ID of the parent, or an empty string.
	 * @private
	 */
	function getParentID(id) {
	  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
	}
	
	/**
	 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
	 * supplied `destinationID`. If they are equal, the ID is returned.
	 *
	 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
	 * @param {string} destinationID ID of the destination node.
	 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
	 * @private
	 */
	function getNextDescendantID(ancestorID, destinationID) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(ancestorID) && isValidID(destinationID),
	    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
	    ancestorID,
	    destinationID
	  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isAncestorIDOf(ancestorID, destinationID),
	    'getNextDescendantID(...): React has made an invalid assumption about ' +
	    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
	    ancestorID,
	    destinationID
	  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
	  if (ancestorID === destinationID) {
	    return ancestorID;
	  }
	  // Skip over the ancestor and the immediate separator. Traverse until we hit
	  // another separator or we reach the end of `destinationID`.
	  var start = ancestorID.length + SEPARATOR_LENGTH;
	  var i;
	  for (i = start; i < destinationID.length; i++) {
	    if (isBoundary(destinationID, i)) {
	      break;
	    }
	  }
	  return destinationID.substr(0, i);
	}
	
	/**
	 * Gets the nearest common ancestor ID of two IDs.
	 *
	 * Using this ID scheme, the nearest common ancestor ID is the longest common
	 * prefix of the two IDs that immediately preceded a "marker" in both strings.
	 *
	 * @param {string} oneID
	 * @param {string} twoID
	 * @return {string} Nearest common ancestor ID, or the empty string if none.
	 * @private
	 */
	function getFirstCommonAncestorID(oneID, twoID) {
	  var minLength = Math.min(oneID.length, twoID.length);
	  if (minLength === 0) {
	    return '';
	  }
	  var lastCommonMarkerIndex = 0;
	  // Use `<=` to traverse until the "EOL" of the shorter string.
	  for (var i = 0; i <= minLength; i++) {
	    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
	      lastCommonMarkerIndex = i;
	    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
	      break;
	    }
	  }
	  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    isValidID(longestCommonID),
	    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
	    oneID,
	    twoID,
	    longestCommonID
	  ) : invariant(isValidID(longestCommonID)));
	  return longestCommonID;
	}
	
	/**
	 * Traverses the parent path between two IDs (either up or down). The IDs must
	 * not be the same, and there must exist a parent path between them. If the
	 * callback returns `false`, traversal is stopped.
	 *
	 * @param {?string} start ID at which to start traversal.
	 * @param {?string} stop ID at which to end traversal.
	 * @param {function} cb Callback to invoke each ID with.
	 * @param {?boolean} skipFirst Whether or not to skip the first node.
	 * @param {?boolean} skipLast Whether or not to skip the last node.
	 * @private
	 */
	function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
	  start = start || '';
	  stop = stop || '';
	  ("production" !== process.env.NODE_ENV ? invariant(
	    start !== stop,
	    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
	    start
	  ) : invariant(start !== stop));
	  var traverseUp = isAncestorIDOf(stop, start);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    traverseUp || isAncestorIDOf(start, stop),
	    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
	    'not have a parent path.',
	    start,
	    stop
	  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
	  // Traverse from `start` to `stop` one depth at a time.
	  var depth = 0;
	  var traverse = traverseUp ? getParentID : getNextDescendantID;
	  for (var id = start; /* until break */; id = traverse(id, stop)) {
	    var ret;
	    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
	      ret = cb(id, traverseUp, arg);
	    }
	    if (ret === false || id === stop) {
	      // Only break //after// visiting `stop`.
	      break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      depth++ < MAX_TREE_DEPTH,
	      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
	      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
	      start, stop
	    ) : invariant(depth++ < MAX_TREE_DEPTH));
	  }
	}
	
	/**
	 * Manages the IDs assigned to DOM representations of React components. This
	 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
	 * order to simulate events).
	 *
	 * @internal
	 */
	var ReactInstanceHandles = {
	
	  /**
	   * Constructs a React root ID
	   * @return {string} A React root ID.
	   */
	  createReactRootID: function() {
	    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
	  },
	
	  /**
	   * Constructs a React ID by joining a root ID with a name.
	   *
	   * @param {string} rootID Root ID of a parent component.
	   * @param {string} name A component's name (as flattened children).
	   * @return {string} A React ID.
	   * @internal
	   */
	  createReactID: function(rootID, name) {
	    return rootID + name;
	  },
	
	  /**
	   * Gets the DOM ID of the React component that is the root of the tree that
	   * contains the React component with the supplied DOM ID.
	   *
	   * @param {string} id DOM ID of a React component.
	   * @return {?string} DOM ID of the React component that is the root.
	   * @internal
	   */
	  getReactRootIDFromNodeID: function(id) {
	    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
	      var index = id.indexOf(SEPARATOR, 1);
	      return index > -1 ? id.substr(0, index) : id;
	    }
	    return null;
	  },
	
	  /**
	   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	   * should would receive a `mouseEnter` or `mouseLeave` event.
	   *
	   * NOTE: Does not invoke the callback on the nearest common ancestor because
	   * nothing "entered" or "left" that element.
	   *
	   * @param {string} leaveID ID being left.
	   * @param {string} enterID ID being entered.
	   * @param {function} cb Callback to invoke on each entered/left ID.
	   * @param {*} upArg Argument to invoke the callback with on left IDs.
	   * @param {*} downArg Argument to invoke the callback with on entered IDs.
	   * @internal
	   */
	  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
	    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
	    if (ancestorID !== leaveID) {
	      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
	    }
	    if (ancestorID !== enterID) {
	      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
	    }
	  },
	
	  /**
	   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseTwoPhase: function(targetID, cb, arg) {
	    if (targetID) {
	      traverseParentPath('', targetID, cb, arg, true, false);
	      traverseParentPath(targetID, '', cb, arg, false, true);
	    }
	  },
	
	  /**
	   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
	   * example, passing `.0.$row-0.1` would result in `cb` getting called
	   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
	   *
	   * NOTE: This traversal happens on IDs without touching the DOM.
	   *
	   * @param {string} targetID ID of the target node.
	   * @param {function} cb Callback to invoke.
	   * @param {*} arg Argument to invoke the callback with.
	   * @internal
	   */
	  traverseAncestors: function(targetID, cb, arg) {
	    traverseParentPath('', targetID, cb, arg, true, false);
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getFirstCommonAncestorID: getFirstCommonAncestorID,
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _getNextDescendantID: getNextDescendantID,
	
	  isAncestorIDOf: isAncestorIDOf,
	
	  SEPARATOR: SEPARATOR
	
	};
	
	module.exports = ReactInstanceHandles;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 25 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var ReactRootIndexInjection = {
	  /**
	   * @param {function} _createReactRootIndex
	   */
	  injectCreateReactRootIndex: function(_createReactRootIndex) {
	    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
	  }
	};
	
	var ReactRootIndex = {
	  createReactRootIndex: null,
	  injection: ReactRootIndexInjection
	};
	
	module.exports = ReactRootIndex;


/***/ },
/* 26 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/* global Symbol */
	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
	
	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (
	    (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL])
	  );
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}
	
	module.exports = getIteratorFn;


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */
	
	'use strict';
	
	var ReactUpdateQueue = __webpack_require__(28);
	
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context) {
	  this.props = props;
	  this.context = context;
	}
	
	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function(partialState, callback) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof partialState === 'object' ||
	    typeof partialState === 'function' ||
	    partialState == null,
	    'setState(...): takes an object of state variables to update or a ' +
	    'function which returns an object of state variables.'
	  ) : invariant(typeof partialState === 'object' ||
	  typeof partialState === 'function' ||
	  partialState == null));
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      partialState != null,
	      'setState(...): You passed an undefined or null state object; ' +
	      'instead, use forceUpdate().'
	    ) : null);
	  }
	  ReactUpdateQueue.enqueueSetState(this, partialState);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function(callback) {
	  ReactUpdateQueue.enqueueForceUpdate(this);
	  if (callback) {
	    ReactUpdateQueue.enqueueCallback(this, callback);
	  }
	};
	
	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if ("production" !== process.env.NODE_ENV) {
	  var deprecatedAPIs = {
	    getDOMNode: [
	      'getDOMNode',
	      'Use React.findDOMNode(component) instead.'
	    ],
	    isMounted: [
	      'isMounted',
	      'Instead, make sure to clean up subscriptions and pending requests in ' +
	      'componentWillUnmount to prevent memory leaks.'
	    ],
	    replaceProps: [
	      'replaceProps',
	      'Instead, call React.render again at the top level.'
	    ],
	    replaceState: [
	      'replaceState',
	      'Refactor your code to use setState instead (see ' +
	      'https://github.com/facebook/react/issues/3236).'
	    ],
	    setProps: [
	      'setProps',
	      'Instead, call React.render again at the top level.'
	    ]
	  };
	  var defineDeprecationWarning = function(methodName, info) {
	    try {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function() {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            '%s(...) is deprecated in plain JavaScript React classes. %s',
	            info[0],
	            info[1]
	          ) : null);
	          return undefined;
	        }
	      });
	    } catch (x) {
	      // IE will fail on defineProperty (es5-shim/sham too)
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}
	
	module.exports = ReactComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */
	
	'use strict';
	
	var ReactLifeCycle = __webpack_require__(29);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactElement = __webpack_require__(16);
	var ReactInstanceMap = __webpack_require__(30);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	function enqueueUpdate(internalInstance) {
	  if (internalInstance !== ReactLifeCycle.currentlyMountingInstance) {
	    // If we're in a componentWillMount handler, don't enqueue a rerender
	    // because ReactUpdates assumes we're in a browser context (which is
	    // wrong for server rendering) and we're about to do a render anyway.
	    // See bug in #1740.
	    ReactUpdates.enqueueUpdate(internalInstance);
	  }
	}
	
	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactCurrentOwner.current == null,
	    '%s(...): Cannot update during an existing state transition ' +
	    '(such as within `render`). Render methods should be a pure function ' +
	    'of props and state.',
	    callerName
	  ) : invariant(ReactCurrentOwner.current == null));
	
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if ("production" !== process.env.NODE_ENV) {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !callerName,
	        '%s(...): Can only update a mounted or mounting component. ' +
	        'This usually means you called %s() on an unmounted ' +
	        'component. This is a no-op.',
	        callerName,
	        callerName
	      ) : null);
	    }
	    return null;
	  }
	
	  if (internalInstance === ReactLifeCycle.currentlyUnmountingInstance) {
	    return null;
	  }
	
	  return internalInstance;
	}
	
	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {
	
	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function(publicInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);
	
	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance ||
	        internalInstance === ReactLifeCycle.currentlyMountingInstance) {
	      return null;
	    }
	
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueCallbackInternal: function(internalInstance, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof callback === 'function',
	      'enqueueCallback(...): You called `setProps`, `replaceProps`, ' +
	      '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
	      'isn\'t callable.'
	    ) : invariant(typeof callback === 'function'));
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldUpdateComponent`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function(publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'forceUpdate'
	    );
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingForceUpdate = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function(publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceState'
	    );
	
	    if (!internalInstance) {
	      return;
	    }
	
	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function(publicInstance, partialState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setState'
	    );
	
	    if (!internalInstance) {
	      return;
	    }
	
	    var queue =
	      internalInstance._pendingStateQueue ||
	      (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialProps Subset of the next props.
	   * @internal
	   */
	  enqueueSetProps: function(publicInstance, partialProps) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'setProps'
	    );
	
	    if (!internalInstance) {
	      return;
	    }
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'setProps(...): You called `setProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    var props = assign({}, element.props, partialProps);
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );
	
	    enqueueUpdate(internalInstance);
	  },
	
	  /**
	   * Replaces all of the props.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} props New props.
	   * @internal
	   */
	  enqueueReplaceProps: function(publicInstance, props) {
	    var internalInstance = getInternalInstanceReadyForUpdate(
	      publicInstance,
	      'replaceProps'
	    );
	
	    if (!internalInstance) {
	      return;
	    }
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalInstance._isTopLevel,
	      'replaceProps(...): You called `replaceProps` on a ' +
	      'component with a parent. This is an anti-pattern since props will ' +
	      'get reactively updated when rendered. Instead, change the owner\'s ' +
	      '`render` method to pass the correct value as props to the component ' +
	      'where it is created.'
	    ) : invariant(internalInstance._isTopLevel));
	
	    // Merge with the pending element if it exists, otherwise with existing
	    // element props.
	    var element = internalInstance._pendingElement ||
	                  internalInstance._currentElement;
	    internalInstance._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      props
	    );
	
	    enqueueUpdate(internalInstance);
	  },
	
	  enqueueElementInternal: function(internalInstance, newElement) {
	    internalInstance._pendingElement = newElement;
	    enqueueUpdate(internalInstance);
	  }
	
	};
	
	module.exports = ReactUpdateQueue;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 29 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactLifeCycle
	 */
	
	'use strict';
	
	/**
	 * This module manages the bookkeeping when a component is in the process
	 * of being mounted or being unmounted. This is used as a way to enforce
	 * invariants (or warnings) when it is not recommended to call
	 * setState/forceUpdate.
	 *
	 * currentlyMountingInstance: During the construction phase, it is not possible
	 * to trigger an update since the instance is not fully mounted yet. However, we
	 * currently allow this as a convenience for mutating the initial state.
	 *
	 * currentlyUnmountingInstance: During the unmounting phase, the instance is
	 * still mounted and can therefore schedule an update. However, this is not
	 * recommended and probably an error since it's about to be unmounted.
	 * Therefore we still want to trigger in an error for that case.
	 */
	
	var ReactLifeCycle = {
	  currentlyMountingInstance: null,
	  currentlyUnmountingInstance: null
	};
	
	module.exports = ReactLifeCycle;


/***/ },
/* 30 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */
	
	'use strict';
	
	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */
	
	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();
	var ReactInstanceMap = {
	
	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function(key) {
	    key._reactInternalInstance = undefined;
	  },
	
	  get: function(key) {
	    return key._reactInternalInstance;
	  },
	
	  has: function(key) {
	    return key._reactInternalInstance !== undefined;
	  },
	
	  set: function(key, value) {
	    key._reactInternalInstance = value;
	  }
	
	};
	
	module.exports = ReactInstanceMap;


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(32);
	var PooledClass = __webpack_require__(14);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactPerf = __webpack_require__(33);
	var ReactReconciler = __webpack_require__(34);
	var Transaction = __webpack_require__(41);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	var dirtyComponents = [];
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;
	
	var batchingStrategy = null;
	
	function ensureInjected() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
	    'ReactUpdates: must inject a reconcile transaction class and batching ' +
	    'strategy'
	  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
	}
	
	var NESTED_UPDATES = {
	  initialize: function() {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function() {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};
	
	var UPDATE_QUEUEING = {
	  initialize: function() {
	    this.callbackQueue.reset();
	  },
	  close: function() {
	    this.callbackQueue.notifyAll();
	  }
	};
	
	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];
	
	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction =
	    ReactUpdates.ReactReconcileTransaction.getPooled();
	}
	
	assign(
	  ReactUpdatesFlushTransaction.prototype,
	  Transaction.Mixin, {
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  destructor: function() {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },
	
	  perform: function(method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(
	      this,
	      this.reconcileTransaction.perform,
	      this.reconcileTransaction,
	      method,
	      scope,
	      a
	    );
	  }
	});
	
	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);
	
	function batchedUpdates(callback, a, b, c, d) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d);
	}
	
	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}
	
	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    len === dirtyComponents.length,
	    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
	    'match dirty-components array length (%s).',
	    len,
	    dirtyComponents.length
	  ) : invariant(len === dirtyComponents.length));
	
	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);
	
	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];
	
	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;
	
	    ReactReconciler.performUpdateIfNecessary(
	      component,
	      transaction.reconcileTransaction
	    );
	
	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(
	          callbacks[j],
	          component.getPublicInstance()
	        );
	      }
	    }
	  }
	}
	
	var flushBatchedUpdates = function() {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }
	
	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};
	flushBatchedUpdates = ReactPerf.measure(
	  'ReactUpdates',
	  'flushBatchedUpdates',
	  flushBatchedUpdates
	);
	
	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();
	
	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setProps, setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)
	  ("production" !== process.env.NODE_ENV ? warning(
	    ReactCurrentOwner.current == null,
	    'enqueueUpdate(): Render methods should be a pure function of props ' +
	    'and state; triggering nested component updates from render is not ' +
	    'allowed. If necessary, trigger nested updates in ' +
	    'componentDidUpdate.'
	  ) : null);
	
	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }
	
	  dirtyComponents.push(component);
	}
	
	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    batchingStrategy.isBatchingUpdates,
	    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
	    'updates are not being batched.'
	  ) : invariant(batchingStrategy.isBatchingUpdates));
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}
	
	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function(ReconcileTransaction) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReconcileTransaction,
	      'ReactUpdates: must provide a reconcile transaction class'
	    ) : invariant(ReconcileTransaction));
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },
	
	  injectBatchingStrategy: function(_batchingStrategy) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      _batchingStrategy,
	      'ReactUpdates: must provide a batching strategy'
	    ) : invariant(_batchingStrategy));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.batchedUpdates === 'function',
	      'ReactUpdates: must provide a batchedUpdates() function'
	    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
	      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
	    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
	    batchingStrategy = _batchingStrategy;
	  }
	};
	
	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,
	
	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};
	
	module.exports = ReactUpdates;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	
	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}
	
	assign(CallbackQueue.prototype, {
	
	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function(callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },
	
	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function() {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        callbacks.length === contexts.length,
	        'Mismatched list of contexts in callback queue'
	      ) : invariant(callbacks.length === contexts.length));
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0, l = callbacks.length; i < l; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },
	
	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function() {
	    this._callbacks = null;
	    this._contexts = null;
	  },
	
	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function() {
	    this.reset();
	  }
	
	});
	
	PooledClass.addPoolingTo(CallbackQueue);
	
	module.exports = CallbackQueue;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * ReactPerf is a general AOP system designed to measure performance. This
	 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
	 */
	var ReactPerf = {
	  /**
	   * Boolean to enable/disable measurement. Set to false by default to prevent
	   * accidental logging and perf loss.
	   */
	  enableMeasure: false,
	
	  /**
	   * Holds onto the measure function in use. By default, don't measure
	   * anything, but we'll override this if we inject a measure function.
	   */
	  storedMeasure: _noMeasure,
	
	  /**
	   * @param {object} object
	   * @param {string} objectName
	   * @param {object<string>} methodNames
	   */
	  measureMethods: function(object, objectName, methodNames) {
	    if ("production" !== process.env.NODE_ENV) {
	      for (var key in methodNames) {
	        if (!methodNames.hasOwnProperty(key)) {
	          continue;
	        }
	        object[key] = ReactPerf.measure(
	          objectName,
	          methodNames[key],
	          object[key]
	        );
	      }
	    }
	  },
	
	  /**
	   * Use this to wrap methods you want to measure. Zero overhead in production.
	   *
	   * @param {string} objName
	   * @param {string} fnName
	   * @param {function} func
	   * @return {function}
	   */
	  measure: function(objName, fnName, func) {
	    if ("production" !== process.env.NODE_ENV) {
	      var measuredFunc = null;
	      var wrapper = function() {
	        if (ReactPerf.enableMeasure) {
	          if (!measuredFunc) {
	            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
	          }
	          return measuredFunc.apply(this, arguments);
	        }
	        return func.apply(this, arguments);
	      };
	      wrapper.displayName = objName + '_' + fnName;
	      return wrapper;
	    }
	    return func;
	  },
	
	  injection: {
	    /**
	     * @param {function} measure
	     */
	    injectMeasure: function(measure) {
	      ReactPerf.storedMeasure = measure;
	    }
	  }
	};
	
	/**
	 * Simply passes through the measured function, without measuring it.
	 *
	 * @param {string} objName
	 * @param {string} fnName
	 * @param {function} func
	 * @return {function}
	 */
	function _noMeasure(objName, fnName, func) {
	  return func;
	}
	
	module.exports = ReactPerf;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */
	
	'use strict';
	
	var ReactRef = __webpack_require__(35);
	var ReactElementValidator = __webpack_require__(37);
	
	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}
	
	var ReactReconciler = {
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(internalInstance, rootID, transaction, context) {
	    var markup = internalInstance.mountComponent(rootID, transaction, context);
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(
	        internalInstance._currentElement
	      );
	    }
	    transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function(internalInstance) {
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent();
	  },
	
	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function(
	    internalInstance, nextElement, transaction, context
	  ) {
	    var prevElement = internalInstance._currentElement;
	
	    if (nextElement === prevElement && nextElement._owner != null) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.
	      return;
	    }
	
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }
	
	    var refsChanged = ReactRef.shouldUpdateRefs(
	      prevElement,
	      nextElement
	    );
	
	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }
	
	    internalInstance.receiveComponent(nextElement, transaction, context);
	
	    if (refsChanged) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	  },
	
	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(
	    internalInstance,
	    transaction
	  ) {
	    internalInstance.performUpdateIfNecessary(transaction);
	  }
	
	};
	
	module.exports = ReactReconciler;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */
	
	'use strict';
	
	var ReactOwner = __webpack_require__(36);
	
	var ReactRef = {};
	
	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}
	
	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}
	
	ReactRef.attachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};
	
	ReactRef.shouldUpdateRefs = function(prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.
	
	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.
	
	  return (
	    nextElement._owner !== prevElement._owner ||
	    nextElement.ref !== prevElement.ref
	  );
	};
	
	ReactRef.detachRefs = function(instance, element) {
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};
	
	module.exports = ReactRef;


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {
	
	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function(object) {
	    return !!(
	      (object &&
	      typeof object.attachRef === 'function' && typeof object.detachRef === 'function')
	    );
	  },
	
	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to add a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    owner.attachRef(ref, component);
	  },
	
	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function(component, ref, owner) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactOwner.isValidOwner(owner),
	      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
	      'usually means that you\'re trying to remove a ref to a component that ' +
	      'doesn\'t have an owner (that is, was not created inside of another ' +
	      'component\'s `render` method). Try rendering this component inside of ' +
	      'a new top-level component which will hold the ref.'
	    ) : invariant(ReactOwner.isValidOwner(owner)));
	    // Check that `component` is still the current ref because we do not want to
	    // detach the ref if another component stole it.
	    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }
	
	};
	
	module.exports = ReactOwner;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */
	
	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactFragment = __webpack_require__(15);
	var ReactPropTypeLocations = __webpack_require__(38);
	var ReactPropTypeLocationNames = __webpack_require__(39);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactNativeComponent = __webpack_require__(40);
	
	var getIteratorFn = __webpack_require__(26);
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};
	
	var loggedTypeFailures = {};
	
	var NUMERIC_PROPERTY_REGEX = /^\d+$/;
	
	/**
	 * Gets the instance's name for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getName(instance) {
	  var publicInstance = instance && instance.getPublicInstance();
	  if (!publicInstance) {
	    return undefined;
	  }
	  var constructor = publicInstance.constructor;
	  if (!constructor) {
	    return undefined;
	  }
	  return constructor.displayName || constructor.name || undefined;
	}
	
	/**
	 * Gets the current owner's displayName for use in warnings.
	 *
	 * @internal
	 * @return {?string} Display name or undefined
	 */
	function getCurrentOwnerDisplayName() {
	  var current = ReactCurrentOwner.current;
	  return (
	    current && getName(current) || undefined
	  );
	}
	
	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;
	
	  warnAndMonitorForKeyUse(
	    'Each child in an array or iterator should have a unique "key" prop.',
	    element,
	    parentType
	  );
	}
	
	/**
	 * Warn if the key is being defined as an object property but has an incorrect
	 * value.
	 *
	 * @internal
	 * @param {string} name Property name of the key.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validatePropertyKey(name, element, parentType) {
	  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
	    return;
	  }
	  warnAndMonitorForKeyUse(
	    'Child objects should have non-numeric keys so ordering is preserved.',
	    element,
	    parentType
	  );
	}
	
	/**
	 * Shared warning and monitoring code for the key warnings.
	 *
	 * @internal
	 * @param {string} message The base warning that gets output.
	 * @param {ReactElement} element Component that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function warnAndMonitorForKeyUse(message, element, parentType) {
	  var ownerName = getCurrentOwnerDisplayName();
	  var parentName = typeof parentType === 'string' ?
	    parentType : parentType.displayName || parentType.name;
	
	  var useName = ownerName || parentName;
	  var memoizer = ownerHasKeyUseWarning[message] || (
	    (ownerHasKeyUseWarning[message] = {})
	  );
	  if (memoizer.hasOwnProperty(useName)) {
	    return;
	  }
	  memoizer[useName] = true;
	
	  var parentOrOwnerAddendum =
	    ownerName ? (" Check the render method of " + ownerName + ".") :
	    parentName ? (" Check the React.render call using <" + parentName + ">.") :
	    '';
	
	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwnerAddendum = '';
	  if (element &&
	      element._owner &&
	      element._owner !== ReactCurrentOwner.current) {
	    // Name of the component that originally created this child.
	    var childOwnerName = getName(element._owner);
	
	    childOwnerAddendum = (" It was passed a child from " + childOwnerName + ".");
	  }
	
	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    message + '%s%s See https://fb.me/react-warning-keys for more information.',
	    parentOrOwnerAddendum,
	    childOwnerAddendum
	  ) : null);
	}
	
	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    node._store.validated = true;
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    } else if (typeof node === 'object') {
	      var fragment = ReactFragment.extractIfFragment(node);
	      for (var key in fragment) {
	        if (fragment.hasOwnProperty(key)) {
	          validatePropertyKey(key, fragment[key], parentType);
	        }
	      }
	    }
	  }
	}
	
	/**
	 * Assert that the props are valid
	 *
	 * @param {string} componentName Name of the component for error messages.
	 * @param {object} propTypes Map of prop name to a ReactPropType
	 * @param {object} props
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @private
	 */
	function checkPropTypes(componentName, propTypes, props, location) {
	  for (var propName in propTypes) {
	    if (propTypes.hasOwnProperty(propName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        ("production" !== process.env.NODE_ENV ? invariant(
	          typeof propTypes[propName] === 'function',
	          '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	          'React.PropTypes.',
	          componentName || 'React class',
	          ReactPropTypeLocationNames[location],
	          propName
	        ) : invariant(typeof propTypes[propName] === 'function'));
	        error = propTypes[propName](props, propName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;
	
	        var addendum = getDeclarationErrorAddendum(this);
	        ("production" !== process.env.NODE_ENV ? warning(false, 'Failed propType: %s%s', error.message, addendum) : null);
	      }
	    }
	  }
	}
	
	var warnedPropsMutations = {};
	
	/**
	 * Warn about mutating props when setting `propName` on `element`.
	 *
	 * @param {string} propName The string key within props that was set
	 * @param {ReactElement} element
	 */
	function warnForPropsMutation(propName, element) {
	  var type = element.type;
	  var elementName = typeof type === 'string' ? type : type.displayName;
	  var ownerName = element._owner ?
	    element._owner.getPublicInstance().constructor.displayName : null;
	
	  var warningKey = propName + '|' + elementName + '|' + ownerName;
	  if (warnedPropsMutations.hasOwnProperty(warningKey)) {
	    return;
	  }
	  warnedPropsMutations[warningKey] = true;
	
	  var elementInfo = '';
	  if (elementName) {
	    elementInfo = ' <' + elementName + ' />';
	  }
	  var ownerInfo = '';
	  if (ownerName) {
	    ownerInfo = ' The element was created by ' + ownerName + '.';
	  }
	
	  ("production" !== process.env.NODE_ENV ? warning(
	    false,
	    'Don\'t set .props.%s of the React component%s. Instead, specify the ' +
	    'correct value when initially creating the element or use ' +
	    'React.cloneElement to make a new element with updated props.%s',
	    propName,
	    elementInfo,
	    ownerInfo
	  ) : null);
	}
	
	// Inline Object.is polyfill
	function is(a, b) {
	  if (a !== a) {
	    // NaN
	    return b !== b;
	  }
	  if (a === 0 && b === 0) {
	    // +-0
	    return 1 / a === 1 / b;
	  }
	  return a === b;
	}
	
	/**
	 * Given an element, check if its props have been mutated since element
	 * creation (or the last call to this function). In particular, check if any
	 * new props have been added, which we can't directly catch by defining warning
	 * properties on the props object.
	 *
	 * @param {ReactElement} element
	 */
	function checkAndWarnForMutatedProps(element) {
	  if (!element._store) {
	    // Element was created using `new ReactElement` directly or with
	    // `ReactElement.createElement`; skip mutation checking
	    return;
	  }
	
	  var originalProps = element._store.originalProps;
	  var props = element.props;
	
	  for (var propName in props) {
	    if (props.hasOwnProperty(propName)) {
	      if (!originalProps.hasOwnProperty(propName) ||
	          !is(originalProps[propName], props[propName])) {
	        warnForPropsMutation(propName, element);
	
	        // Copy over the new value so that the two props objects match again
	        originalProps[propName] = props[propName];
	      }
	    }
	  }
	}
	
	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  if (element.type == null) {
	    // This has already warned. Don't throw.
	    return;
	  }
	  // Extract the component class from the element. Converts string types
	  // to a composite class which may have propTypes.
	  // TODO: Validating a string's propTypes is not decoupled from the
	  // rendering target which is problematic.
	  var componentClass = ReactNativeComponent.getComponentClassForElement(
	    element
	  );
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkPropTypes(
	      name,
	      componentClass.propTypes,
	      element.props,
	      ReactPropTypeLocations.prop
	    );
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    ("production" !== process.env.NODE_ENV ? warning(
	      componentClass.getDefaultProps.isReactClassApproved,
	      'getDefaultProps is only used on classic React.createClass ' +
	      'definitions. Use a static property named `defaultProps` instead.'
	    ) : null);
	  }
	}
	
	var ReactElementValidator = {
	
	  checkAndWarnForMutatedProps: checkAndWarnForMutatedProps,
	
	  createElement: function(type, props, children) {
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    ("production" !== process.env.NODE_ENV ? warning(
	      type != null,
	      'React.createElement: type should not be null or undefined. It should ' +
	        'be a string (for DOM elements) or a ReactClass (for composite ' +
	        'components).'
	    ) : null);
	
	    var element = ReactElement.createElement.apply(this, arguments);
	
	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }
	
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], type);
	    }
	
	    validatePropTypes(element);
	
	    return element;
	  },
	
	  createFactory: function(type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(
	      null,
	      type
	    );
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;
	
	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(
	          validatedFactory,
	          'type',
	          {
	            enumerable: false,
	            get: function() {
	              ("production" !== process.env.NODE_ENV ? warning(
	                false,
	                'Factory.type is deprecated. Access the class directly ' +
	                'before passing it to createFactory.'
	              ) : null);
	              Object.defineProperty(this, 'type', {
	                value: type
	              });
	              return type;
	            }
	          }
	        );
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }
	
	
	    return validatedFactory;
	  },
	
	  cloneElement: function(element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }
	
	};
	
	module.exports = ReactElementValidator;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(11);
	
	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});
	
	module.exports = ReactPropTypeLocations;


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */
	
	'use strict';
	
	var ReactPropTypeLocationNames = {};
	
	if ("production" !== process.env.NODE_ENV) {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}
	
	module.exports = ReactPropTypeLocationNames;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNativeComponent
	 */
	
	'use strict';
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	
	var autoGenerateWrapperClass = null;
	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around native tags
	var tagToComponentClass = {};
	var textComponentClass = null;
	
	var ReactNativeComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function(componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function(componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function(componentClasses) {
	    assign(tagToComponentClass, componentClasses);
	  },
	  // Temporary hack since we expect DOM refs to behave like composites,
	  // for this release.
	  injectAutoWrapper: function(wrapperFactory) {
	    autoGenerateWrapperClass = wrapperFactory;
	  }
	};
	
	/**
	 * Get a composite component wrapper class for a specific tag.
	 *
	 * @param {ReactElement} element The tag for which to get the class.
	 * @return {function} The React class constructor function.
	 */
	function getComponentClassForElement(element) {
	  if (typeof element.type === 'function') {
	    return element.type;
	  }
	  var tag = element.type;
	  var componentClass = tagToComponentClass[tag];
	  if (componentClass == null) {
	    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);
	  }
	  return componentClass;
	}
	
	/**
	 * Get a native internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    genericComponentClass,
	    'There is no registered component for the tag %s',
	    element.type
	  ) : invariant(genericComponentClass));
	  return new genericComponentClass(element.type, element.props);
	}
	
	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}
	
	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}
	
	var ReactNativeComponent = {
	  getComponentClassForElement: getComponentClassForElement,
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactNativeComponentInjection
	};
	
	module.exports = ReactNativeComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function() {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (!this.wrapperInitData) {
	      this.wrapperInitData = [];
	    } else {
	      this.wrapperInitData.length = 0;
	    }
	    this._isInTransaction = false;
	  },
	
	  _isInTransaction: false,
	
	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,
	
	  isInTransaction: function() {
	    return !!this._isInTransaction;
	  },
	
	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} args... Arguments to pass to the method (optional).
	   *                           Helps prevent need to bind in many cases.
	   * @return Return value from `method`.
	   */
	  perform: function(method, scope, a, b, c, d, e, f) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !this.isInTransaction(),
	      'Transaction.perform(...): Cannot initialize a transaction when there ' +
	      'is already an outstanding transaction.'
	    ) : invariant(!this.isInTransaction()));
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {
	          }
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },
	
	  initializeAll: function(startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ?
	          wrapper.initialize.call(this) :
	          null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {
	          }
	        }
	      }
	    }
	  },
	
	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function(startIndex) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      this.isInTransaction(),
	      'Transaction.closeAll(): Cannot close transaction when none are open.'
	    ) : invariant(this.isInTransaction()));
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {
	          }
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};
	
	var Transaction = {
	
	  Mixin: Mixin,
	
	  /**
	   * Token to look for to determine if an error occured.
	   */
	  OBSERVED_ERROR: {}
	
	};
	
	module.exports = Transaction;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */
	
	'use strict';
	
	var ReactComponent = __webpack_require__(27);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactElement = __webpack_require__(16);
	var ReactErrorUtils = __webpack_require__(43);
	var ReactInstanceMap = __webpack_require__(30);
	var ReactLifeCycle = __webpack_require__(29);
	var ReactPropTypeLocations = __webpack_require__(38);
	var ReactPropTypeLocationNames = __webpack_require__(39);
	var ReactUpdateQueue = __webpack_require__(28);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	var keyMirror = __webpack_require__(11);
	var keyOf = __webpack_require__(44);
	var warning = __webpack_require__(20);
	
	var MIXINS_KEY = keyOf({mixins: null});
	
	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});
	
	
	var injectedMixins = [];
	
	/**
	 * Composite components are higher-level components that compose other composite
	 * or native components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {
	
	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,
	
	  // ==== Definition methods ====
	
	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,
	
	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,
	
	
	
	  // ==== Delegate methods ====
	
	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,
	
	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,
	
	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,
	
	
	
	  // ==== Advanced methods ====
	
	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE
	
	};
	
	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function(Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function(Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function(Constructor, childContextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        childContextTypes,
	        ReactPropTypeLocations.childContext
	      );
	    }
	    Constructor.childContextTypes = assign(
	      {},
	      Constructor.childContextTypes,
	      childContextTypes
	    );
	  },
	  contextTypes: function(Constructor, contextTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        contextTypes,
	        ReactPropTypeLocations.context
	      );
	    }
	    Constructor.contextTypes = assign(
	      {},
	      Constructor.contextTypes,
	      contextTypes
	    );
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function(Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(
	        Constructor.getDefaultProps,
	        getDefaultProps
	      );
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function(Constructor, propTypes) {
	    if ("production" !== process.env.NODE_ENV) {
	      validateTypeDef(
	        Constructor,
	        propTypes,
	        ReactPropTypeLocations.prop
	      );
	    }
	    Constructor.propTypes = assign(
	      {},
	      Constructor.propTypes,
	      propTypes
	    );
	  },
	  statics: function(Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  }
	};
	
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but not in __DEV__
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof typeDef[propName] === 'function',
	        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
	        'React.PropTypes.',
	        Constructor.displayName || 'ReactClass',
	        ReactPropTypeLocationNames[location],
	        propName
	      ) : null);
	    }
	  }
	}
	
	function validateMethodOverride(proto, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ?
	    ReactClassInterface[name] :
	    null;
	
	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.OVERRIDE_BASE,
	      'ReactClassInterface: You are attempting to override ' +
	      '`%s` from your class specification. Ensure that your method names ' +
	      'do not overlap with React methods.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
	  }
	
	  // Disallow defining methods more than once unless explicitly allowed.
	  if (proto.hasOwnProperty(name)) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      specPolicy === SpecPolicy.DEFINE_MANY ||
	      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
	      'ReactClassInterface: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be due ' +
	      'to a mixin.',
	      name
	    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
	    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
	  }
	}
	
	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classses.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }
	
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof spec !== 'function',
	    'ReactClass: You\'re attempting to ' +
	    'use a component class as a mixin. Instead, just use a regular object.'
	  ) : invariant(typeof spec !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !ReactElement.isValidElement(spec),
	    'ReactClass: You\'re attempting to ' +
	    'use a component as a mixin. Instead, just use a regular object.'
	  ) : invariant(!ReactElement.isValidElement(spec)));
	
	  var proto = Constructor.prototype;
	
	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }
	
	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }
	
	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above
	      continue;
	    }
	
	    var property = spec[name];
	    validateMethodOverride(proto, name);
	
	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod =
	        ReactClassInterface.hasOwnProperty(name);
	      var isAlreadyDefined = proto.hasOwnProperty(name);
	      var markedDontBind = property && property.__reactDontBind;
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind =
	        isFunction &&
	        !isReactClassMethod &&
	        !isAlreadyDefined &&
	        !markedDontBind;
	
	      if (shouldAutoBind) {
	        if (!proto.__reactAutoBindMap) {
	          proto.__reactAutoBindMap = {};
	        }
	        proto.__reactAutoBindMap[name] = property;
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];
	
	          // These cases should already be caught by validateMethodOverride
	          ("production" !== process.env.NODE_ENV ? invariant(
	            isReactClassMethod && (
	              (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	            ),
	            'ReactClass: Unexpected spec policy %s for key %s ' +
	            'when mixing in component specs.',
	            specPolicy,
	            name
	          ) : invariant(isReactClassMethod && (
	            (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)
	          )));
	
	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if ("production" !== process.env.NODE_ENV) {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}
	
	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }
	
	    var isReserved = name in RESERVED_SPEC_KEYS;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isReserved,
	      'ReactClass: You are attempting to define a reserved ' +
	      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
	      'as an instance property instead; it will still be accessible on the ' +
	      'constructor.',
	      name
	    ) : invariant(!isReserved));
	
	    var isInherited = name in Constructor;
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !isInherited,
	      'ReactClass: You are attempting to define ' +
	      '`%s` on your component more than once. This conflict may be ' +
	      'due to a mixin.',
	      name
	    ) : invariant(!isInherited));
	    Constructor[name] = property;
	  }
	}
	
	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    one && two && typeof one === 'object' && typeof two === 'object',
	    'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
	  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));
	
	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        one[key] === undefined,
	        'mergeIntoWithNoDuplicateKeys(): ' +
	        'Tried to merge two objects with the same key: `%s`. This conflict ' +
	        'may be due to a mixin; in particular, this may be caused by two ' +
	        'getInitialState() or getDefaultProps() methods returning objects ' +
	        'with clashing keys.',
	        key
	      ) : invariant(one[key] === undefined));
	      one[key] = two[key];
	    }
	  }
	  return one;
	}
	
	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}
	
	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}
	
	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if ("production" !== process.env.NODE_ENV) {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    /* eslint-disable block-scoped-var, no-undef */
	    boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): React component methods may only be bound to the ' +
	          'component instance. See %s',
	          componentName
	        ) : null);
	      } else if (!args.length) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'bind(): You are binding a component method to the component. ' +
	          'React does this for you automatically in a high-performance ' +
	          'way, so you can safely remove this call. See %s',
	          componentName
	        ) : null);
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	      /* eslint-enable */
	    };
	  }
	  return boundMethod;
	}
	
	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  for (var autoBindKey in component.__reactAutoBindMap) {
	    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
	      var method = component.__reactAutoBindMap[autoBindKey];
	      component[autoBindKey] = bindAutoBindMethod(
	        component,
	        ReactErrorUtils.guard(
	          method,
	          component.constructor.displayName + '.' + autoBindKey
	        )
	      );
	    }
	  }
	}
	
	var typeDeprecationDescriptor = {
	  enumerable: false,
	  get: function() {
	    var displayName = this.displayName || this.name || 'Component';
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      '%s.type is deprecated. Use %s directly to access the class.',
	      displayName,
	      displayName
	    ) : null);
	    Object.defineProperty(this, 'type', {
	      value: this
	    });
	    return this;
	  }
	};
	
	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {
	
	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function(newState, callback) {
	    ReactUpdateQueue.enqueueReplaceState(this, newState);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function() {
	    if ("production" !== process.env.NODE_ENV) {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          owner._warnedAboutRefsInRender,
	          '%s is accessing isMounted inside its render() function. ' +
	          'render() should be a pure function of props and state. It should ' +
	          'never access something that requires stale data from the previous ' +
	          'render, such as refs. Move this logic to componentDidMount and ' +
	          'componentDidUpdate instead.',
	          owner.getName() || 'A component'
	        ) : null);
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(this);
	    return (
	      internalInstance &&
	      internalInstance !== ReactLifeCycle.currentlyMountingInstance
	    );
	  },
	
	  /**
	   * Sets a subset of the props.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  setProps: function(partialProps, callback) {
	    ReactUpdateQueue.enqueueSetProps(this, partialProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  },
	
	  /**
	   * Replace all the props.
	   *
	   * @param {object} newProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @public
	   * @deprecated
	   */
	  replaceProps: function(newProps, callback) {
	    ReactUpdateQueue.enqueueReplaceProps(this, newProps);
	    if (callback) {
	      ReactUpdateQueue.enqueueCallback(this, callback);
	    }
	  }
	};
	
	var ReactClassComponent = function() {};
	assign(
	  ReactClassComponent.prototype,
	  ReactComponent.prototype,
	  ReactClassMixin
	);
	
	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {
	
	  /**
	   * Creates a composite component class given a class specification.
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function(spec) {
	    var Constructor = function(props, context) {
	      // This constructor is overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.
	
	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          this instanceof Constructor,
	          'Something is calling a React component directly. Use a factory or ' +
	          'JSX instead. See: https://fb.me/react-legacyfactory'
	        ) : null);
	      }
	
	      // Wire up auto-binding
	      if (this.__reactAutoBindMap) {
	        bindAutoBindMethods(this);
	      }
	
	      this.props = props;
	      this.context = context;
	      this.state = null;
	
	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.
	
	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if ("production" !== process.env.NODE_ENV) {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (typeof initialState === 'undefined' &&
	            this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof initialState === 'object' && !Array.isArray(initialState),
	        '%s.getInitialState(): must return an object or null',
	        Constructor.displayName || 'ReactCompositeComponent'
	      ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));
	
	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	
	    injectedMixins.forEach(
	      mixSpecIntoComponent.bind(null, Constructor)
	    );
	
	    mixSpecIntoComponent(Constructor, spec);
	
	    // Initialize the defaultProps property after all mixins have been merged
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }
	
	    if ("production" !== process.env.NODE_ENV) {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      Constructor.prototype.render,
	      'createClass(...): Class specification must implement a `render` method.'
	    ) : invariant(Constructor.prototype.render));
	
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        !Constructor.prototype.componentShouldUpdate,
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        spec.displayName || 'A component'
	      ) : null);
	    }
	
	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }
	
	    // Legacy hook
	    Constructor.type = Constructor;
	    if ("production" !== process.env.NODE_ENV) {
	      try {
	        Object.defineProperty(Constructor, 'type', typeDeprecationDescriptor);
	      } catch (x) {
	        // IE will fail on defineProperty (es5-shim/sham too)
	      }
	    }
	
	    return Constructor;
	  },
	
	  injection: {
	    injectMixin: function(mixin) {
	      injectedMixins.push(mixin);
	    }
	  }
	
	};
	
	module.exports = ReactClass;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 43 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 * @typechecks
	 */
	
	"use strict";
	
	var ReactErrorUtils = {
	  /**
	   * Creates a guarded version of a function. This is supposed to make debugging
	   * of event handlers easier. To aid debugging with the browser's debugger,
	   * this currently simply returns the original function.
	   *
	   * @param {function} func Function to be executed
	   * @param {string} name The name of the guard
	   * @return {function}
	   */
	  guard: function(func, name) {
	    return func;
	  }
	};
	
	module.exports = ReactErrorUtils;


/***/ },
/* 44 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule keyOf
	 */
	
	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without loosing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};
	
	
	module.exports = keyOf;


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactElementValidator = __webpack_require__(37);
	
	var mapObject = __webpack_require__(46);
	
	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if ("production" !== process.env.NODE_ENV) {
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}
	
	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOM = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',
	
	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'
	
	}, createDOMFactory);
	
	module.exports = ReactDOM;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 46 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule mapObject
	 */
	
	'use strict';
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}
	
	module.exports = mapObject;


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMPropertyOperations = __webpack_require__(48);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(52);
	var ReactDOMComponent = __webpack_require__(92);
	
	var assign = __webpack_require__(18);
	var escapeTextContentForBrowser = __webpack_require__(51);
	
	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings in elements so that they can undergo
	 * the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function(props) {
	  // This constructor and its argument is currently used by mocks.
	};
	
	assign(ReactDOMTextComponent.prototype, {
	
	  /**
	   * @param {ReactText} text
	   * @internal
	   */
	  construct: function(text) {
	    // TODO: This is really a ReactText (ReactNode), not a ReactElement
	    this._currentElement = text;
	    this._stringText = '' + text;
	
	    // Properties
	    this._rootNodeID = null;
	    this._mountIndex = 0;
	  },
	
	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    var escapedText = escapeTextContentForBrowser(this._stringText);
	
	    if (transaction.renderToStaticMarkup) {
	      // Normally we'd wrap this in a `span` for the reasons stated above, but
	      // since this is a situation where React won't take over (static pages),
	      // we can simply return the text as it is.
	      return escapedText;
	    }
	
	    return (
	      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
	        escapedText +
	      '</span>'
	    );
	  },
	
	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function(nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        ReactDOMComponent.BackendIDOperations.updateTextContentByID(
	          this._rootNodeID,
	          nextStringText
	        );
	      }
	    }
	  },
	
	  unmountComponent: function() {
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	  }
	
	});
	
	module.exports = ReactDOMTextComponent;


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	
	var quoteAttributeValueForBrowser = __webpack_require__(50);
	var warning = __webpack_require__(20);
	
	function shouldIgnoreValue(name, value) {
	  return value == null ||
	    (DOMProperty.hasBooleanValue[name] && !value) ||
	    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
	    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
	    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
	}
	
	if ("production" !== process.env.NODE_ENV) {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true
	  };
	  var warnedProperties = {};
	
	  var warnUnknownProperty = function(name) {
	    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
	        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return;
	    }
	
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();
	
	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = (
	      DOMProperty.isCustomAttribute(lowerCasedName) ?
	        lowerCasedName :
	      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
	        DOMProperty.getPossibleStandardName[lowerCasedName] :
	        null
	    );
	
	    // For now, only warn when we have a suggested correction. This prevents
	    // logging too much when using transferPropsTo.
	    ("production" !== process.env.NODE_ENV ? warning(
	      standardName == null,
	      'Unknown DOM property %s. Did you mean %s?',
	      name,
	      standardName
	    ) : null);
	
	  };
	}
	
	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {
	
	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function(id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' +
	      quoteAttributeValueForBrowser(id);
	  },
	
	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function(name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      if (shouldIgnoreValue(name, value)) {
	        return '';
	      }
	      var attributeName = DOMProperty.getAttributeName[name];
	      if (DOMProperty.hasBooleanValue[name] ||
	          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
	        return attributeName;
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	    return null;
	  },
	
	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function(node, name, value) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(name, value)) {
	        this.deleteValueForProperty(node, name);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
	        // property type before comparing; only `value` does and is string.
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== ('' + value)) {
	          // Contrary to `setAttribute`, object properties are properly
	          // `toString`ed by IE8/9.
	          node[propName] = value;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        node.removeAttribute(name);
	      } else {
	        node.setAttribute(name, '' + value);
	      }
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  },
	
	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function(node, name) {
	    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
	        DOMProperty.isStandardName[name]) {
	      var mutationMethod = DOMProperty.getMutationMethod[name];
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (DOMProperty.mustUseAttribute[name]) {
	        node.removeAttribute(DOMProperty.getAttributeName[name]);
	      } else {
	        var propName = DOMProperty.getPropertyName[name];
	        var defaultValue = DOMProperty.getDefaultValueForProperty(
	          node.nodeName,
	          propName
	        );
	        if (!DOMProperty.hasSideEffects[name] ||
	            ('' + node[propName]) !== defaultValue) {
	          node[propName] = defaultValue;
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    } else if ("production" !== process.env.NODE_ENV) {
	      warnUnknownProperty(name);
	    }
	  }
	
	};
	
	module.exports = DOMPropertyOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 * @typechecks static-only
	 */
	
	/*jslint bitwise: true */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}
	
	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_ATTRIBUTE: 0x1,
	  MUST_USE_PROPERTY: 0x2,
	  HAS_SIDE_EFFECTS: 0x4,
	  HAS_BOOLEAN_VALUE: 0x8,
	  HAS_NUMERIC_VALUE: 0x10,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,
	
	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function(domPropertyConfig) {
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};
	
	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(
	        domPropertyConfig.isCustomAttribute
	      );
	    }
	
	    for (var propName in Properties) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.isStandardName.hasOwnProperty(propName),
	        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
	        '\'%s\' which has already been injected. You may be accidentally ' +
	        'injecting the same DOM property config twice, or you may be ' +
	        'injecting two configs that have conflicting property names.',
	        propName
	      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));
	
	      DOMProperty.isStandardName[propName] = true;
	
	      var lowerCased = propName.toLowerCase();
	      DOMProperty.getPossibleStandardName[lowerCased] = propName;
	
	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        DOMProperty.getPossibleStandardName[attributeName] = propName;
	        DOMProperty.getAttributeName[propName] = attributeName;
	      } else {
	        DOMProperty.getAttributeName[propName] = lowerCased;
	      }
	
	      DOMProperty.getPropertyName[propName] =
	        DOMPropertyNames.hasOwnProperty(propName) ?
	          DOMPropertyNames[propName] :
	          propName;
	
	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
	      } else {
	        DOMProperty.getMutationMethod[propName] = null;
	      }
	
	      var propConfig = Properties[propName];
	      DOMProperty.mustUseAttribute[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
	      DOMProperty.mustUseProperty[propName] =
	        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
	      DOMProperty.hasSideEffects[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
	      DOMProperty.hasBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
	      DOMProperty.hasNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
	      DOMProperty.hasPositiveNumericValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
	      DOMProperty.hasOverloadedBooleanValue[propName] =
	        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);
	
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !DOMProperty.mustUseAttribute[propName] ||
	          !DOMProperty.mustUseProperty[propName],
	        'DOMProperty: Cannot require using both attribute and property: %s',
	        propName
	      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
	        !DOMProperty.mustUseProperty[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        DOMProperty.mustUseProperty[propName] ||
	          !DOMProperty.hasSideEffects[propName],
	        'DOMProperty: Properties that have side effects must use property: %s',
	        propName
	      ) : invariant(DOMProperty.mustUseProperty[propName] ||
	        !DOMProperty.hasSideEffects[propName]));
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !!DOMProperty.hasBooleanValue[propName] +
	          !!DOMProperty.hasNumericValue[propName] +
	          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
	        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
	        'numeric value, but not a combination: %s',
	        propName
	      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
	        !!DOMProperty.hasNumericValue[propName] +
	        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
	    }
	  }
	};
	var defaultValueCache = {};
	
	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {
	
	  ID_ATTRIBUTE_NAME: 'data-reactid',
	
	  /**
	   * Checks whether a property name is a standard property.
	   * @type {Object}
	   */
	  isStandardName: {},
	
	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties.
	   * @type {Object}
	   */
	  getPossibleStandardName: {},
	
	  /**
	   * Mapping from normalized names to attribute names that differ. Attribute
	   * names are used when rendering markup or with `*Attribute()`.
	   * @type {Object}
	   */
	  getAttributeName: {},
	
	  /**
	   * Mapping from normalized names to properties on DOM node instances.
	   * (This includes properties that mutate due to external factors.)
	   * @type {Object}
	   */
	  getPropertyName: {},
	
	  /**
	   * Mapping from normalized names to mutation methods. This will only exist if
	   * mutation cannot be set simply by the property or `setAttribute()`.
	   * @type {Object}
	   */
	  getMutationMethod: {},
	
	  /**
	   * Whether the property must be accessed and mutated as an object property.
	   * @type {Object}
	   */
	  mustUseAttribute: {},
	
	  /**
	   * Whether the property must be accessed and mutated using `*Attribute()`.
	   * (This includes anything that fails `<propName> in <element>`.)
	   * @type {Object}
	   */
	  mustUseProperty: {},
	
	  /**
	   * Whether or not setting a value causes side effects such as triggering
	   * resources to be loaded or text selection changes. We must ensure that
	   * the value is only set if it has changed.
	   * @type {Object}
	   */
	  hasSideEffects: {},
	
	  /**
	   * Whether the property should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasBooleanValue: {},
	
	  /**
	   * Whether the property must be numeric or parse as a
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasNumericValue: {},
	
	  /**
	   * Whether the property must be positive numeric or parse as a positive
	   * numeric and should be removed when set to a falsey value.
	   * @type {Object}
	   */
	  hasPositiveNumericValue: {},
	
	  /**
	   * Whether the property can be used as a flag as well as with a value. Removed
	   * when strictly equal to false; present without a value when strictly equal
	   * to true; present with a value otherwise.
	   * @type {Object}
	   */
	  hasOverloadedBooleanValue: {},
	
	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],
	
	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function(attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },
	
	  /**
	   * Returns the default property value for a DOM property (i.e., not an
	   * attribute). Most default values are '' or false, but not all. Worse yet,
	   * some (in particular, `type`) vary depending on the type of element.
	   *
	   * TODO: Is it better to grab all the possible properties when creating an
	   * element to avoid having to create the same element twice?
	   */
	  getDefaultValueForProperty: function(nodeName, prop) {
	    var nodeDefaults = defaultValueCache[nodeName];
	    var testElement;
	    if (!nodeDefaults) {
	      defaultValueCache[nodeName] = nodeDefaults = {};
	    }
	    if (!(prop in nodeDefaults)) {
	      testElement = document.createElement(nodeName);
	      nodeDefaults[prop] = testElement[prop];
	    }
	    return nodeDefaults[prop];
	  },
	
	  injection: DOMPropertyInjection
	};
	
	module.exports = DOMProperty;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */
	
	'use strict';
	
	var escapeTextContentForBrowser = __webpack_require__(51);
	
	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}
	
	module.exports = quoteAttributeValueForBrowser;


/***/ },
/* 51 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */
	
	'use strict';
	
	var ESCAPE_LOOKUP = {
	  '&': '&amp;',
	  '>': '&gt;',
	  '<': '&lt;',
	  '"': '&quot;',
	  '\'': '&#x27;'
	};
	
	var ESCAPE_REGEX = /[&><"']/g;
	
	function escaper(match) {
	  return ESCAPE_LOOKUP[match];
	}
	
	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  return ('' + text).replace(ESCAPE_REGEX, escaper);
	}
	
	module.exports = escapeTextContentForBrowser;


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */
	
	/*jslint evil: true */
	
	'use strict';
	
	var ReactDOMIDOperations = __webpack_require__(53);
	var ReactMount = __webpack_require__(72);
	
	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {
	
	  processChildrenUpdates:
	    ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,
	
	  replaceNodeWithMarkupByID:
	    ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,
	
	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function(rootNodeID) {
	    ReactMount.purgeID(rootNodeID);
	  }
	
	};
	
	module.exports = ReactComponentBrowserEnvironment;


/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 * @typechecks static-only
	 */
	
	/*jslint evil: true */
	
	'use strict';
	
	var CSSPropertyOperations = __webpack_require__(54);
	var DOMChildrenOperations = __webpack_require__(63);
	var DOMPropertyOperations = __webpack_require__(48);
	var ReactMount = __webpack_require__(72);
	var ReactPerf = __webpack_require__(33);
	
	var invariant = __webpack_require__(12);
	var setInnerHTML = __webpack_require__(71);
	
	/**
	 * Errors for properties that should not be updated with `updatePropertyById()`.
	 *
	 * @type {object}
	 * @private
	 */
	var INVALID_PROPERTY_ERRORS = {
	  dangerouslySetInnerHTML:
	    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
	  style: '`style` must be set using `updateStylesByID()`.'
	};
	
	/**
	 * Operations used to process updates to DOM nodes. This is made injectable via
	 * `ReactDOMComponent.BackendIDOperations`.
	 */
	var ReactDOMIDOperations = {
	
	  /**
	   * Updates a DOM node with new property values. This should only be used to
	   * update DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A valid property name, see `DOMProperty`.
	   * @param {*} value New value of the property.
	   * @internal
	   */
	  updatePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
	
	    // If we're updating to null or undefined, we should remove the property
	    // from the DOM node instead of inadvertantly setting to a string. This
	    // brings us in line with the same behavior we have on initial render.
	    if (value != null) {
	      DOMPropertyOperations.setValueForProperty(node, name, value);
	    } else {
	      DOMPropertyOperations.deleteValueForProperty(node, name);
	    }
	  },
	
	  /**
	   * Updates a DOM node to remove a property. This should only be used to remove
	   * DOM properties in `DOMProperty`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} name A property name to remove, see `DOMProperty`.
	   * @internal
	   */
	  deletePropertyByID: function(id, name, value) {
	    var node = ReactMount.getNode(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
	      'updatePropertyByID(...): %s',
	      INVALID_PROPERTY_ERRORS[name]
	    ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
	    DOMPropertyOperations.deleteValueForProperty(node, name, value);
	  },
	
	  /**
	   * Updates a DOM node with new style values. If a value is specified as '',
	   * the corresponding style property will be unset.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {object} styles Mapping from styles to values.
	   * @internal
	   */
	  updateStylesByID: function(id, styles) {
	    var node = ReactMount.getNode(id);
	    CSSPropertyOperations.setValueForStyles(node, styles);
	  },
	
	  /**
	   * Updates a DOM node's innerHTML.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} html An HTML string.
	   * @internal
	   */
	  updateInnerHTMLByID: function(id, html) {
	    var node = ReactMount.getNode(id);
	    setInnerHTML(node, html);
	  },
	
	  /**
	   * Updates a DOM node's text content set by `props.content`.
	   *
	   * @param {string} id ID of the node to update.
	   * @param {string} content Text content.
	   * @internal
	   */
	  updateTextContentByID: function(id, content) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.updateTextContent(node, content);
	  },
	
	  /**
	   * Replaces a DOM node that exists in the document with markup.
	   *
	   * @param {string} id ID of child to be replaced.
	   * @param {string} markup Dangerous markup to inject in place of child.
	   * @internal
	   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
	   */
	  dangerouslyReplaceNodeWithMarkupByID: function(id, markup) {
	    var node = ReactMount.getNode(id);
	    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
	  },
	
	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markup List of markup strings.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function(updates, markup) {
	    for (var i = 0; i < updates.length; i++) {
	      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
	    }
	    DOMChildrenOperations.processUpdates(updates, markup);
	  }
	};
	
	ReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {
	  updatePropertyByID: 'updatePropertyByID',
	  deletePropertyByID: 'deletePropertyByID',
	  updateStylesByID: 'updateStylesByID',
	  updateInnerHTMLByID: 'updateInnerHTMLByID',
	  updateTextContentByID: 'updateTextContentByID',
	  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',
	  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'
	});
	
	module.exports = ReactDOMIDOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(55);
	var ExecutionEnvironment = __webpack_require__(56);
	
	var camelizeStyleName = __webpack_require__(57);
	var dangerousStyleValue = __webpack_require__(59);
	var hyphenateStyleName = __webpack_require__(60);
	var memoizeStringOnly = __webpack_require__(62);
	var warning = __webpack_require__(20);
	
	var processStyleName = memoizeStringOnly(function(styleName) {
	  return hyphenateStyleName(styleName);
	});
	
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}
	
	if ("production" !== process.env.NODE_ENV) {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	
	  var warnHyphenatedStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported style property %s. Did you mean %s?',
	      name,
	      camelizeStyleName(name)
	    ) : null);
	  };
	
	  var warnBadVendoredStyleName = function(name) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }
	
	    warnedStyleNames[name] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Unsupported vendor-prefixed style property %s. Did you mean %s?',
	      name,
	      name.charAt(0).toUpperCase() + name.slice(1)
	    ) : null);
	  };
	
	  var warnStyleValueWithSemicolon = function(name, value) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }
	
	    warnedStyleValues[value] = true;
	    ("production" !== process.env.NODE_ENV ? warning(
	      false,
	      'Style property values shouldn\'t contain a semicolon. ' +
	      'Try "%s: %s" instead.',
	      name,
	      value.replace(badStyleValueWithSemicolonPattern, '')
	    ) : null);
	  };
	
	  /**
	   * @param {string} name
	   * @param {*} value
	   */
	  var warnValidStyle = function(name, value) {
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value);
	    }
	  };
	}
	
	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {
	
	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @return {?string}
	   */
	  createMarkupForStyles: function(styles) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styleValue);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue) + ';';
	      }
	    }
	    return serialized || null;
	  },
	
	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   */
	  setValueForStyles: function(node, styles) {
	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if ("production" !== process.env.NODE_ENV) {
	        warnValidStyle(styleName, styles[styleName]);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
	      if (styleName === 'float') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }
	
	};
	
	module.exports = CSSPropertyOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 55 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	'use strict';
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	var isUnitlessNumber = {
	  boxFlex: true,
	  boxFlexGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  strokeDashoffset: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function(prop) {
	  prefixes.forEach(function(prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundImage: true,
	    backgroundPosition: true,
	    backgroundRepeat: true,
	    backgroundColor: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	module.exports = CSSProperty;


/***/ },
/* 56 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ExecutionEnvironment
	 */
	
	/*jslint evil: true */
	
	"use strict";
	
	var canUseDOM = !!(
	  (typeof window !== 'undefined' &&
	  window.document && window.document.createElement)
	);
	
	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {
	
	  canUseDOM: canUseDOM,
	
	  canUseWorkers: typeof Worker !== 'undefined',
	
	  canUseEventListeners:
	    canUseDOM && !!(window.addEventListener || window.attachEvent),
	
	  canUseViewport: canUseDOM && !!window.screen,
	
	  isInWorker: !canUseDOM // For now, this is true - might change in the future.
	
	};
	
	module.exports = ExecutionEnvironment;


/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelizeStyleName
	 * @typechecks
	 */
	
	"use strict";
	
	var camelize = __webpack_require__(58);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;


/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule camelize
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function(_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;


/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CSSProperty = __webpack_require__(55);
	
	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 ||
	      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	module.exports = dangerousStyleValue;


/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenateStyleName
	 * @typechecks
	 */
	
	"use strict";
	
	var hyphenate = __webpack_require__(61);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;


/***/ },
/* 61 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule hyphenate
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;


/***/ },
/* 62 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule memoizeStringOnly
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 *
	 * @param {function} callback
	 * @return {function}
	 */
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function(string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var Danger = __webpack_require__(64);
	var ReactMultiChildUpdateTypes = __webpack_require__(69);
	
	var setTextContent = __webpack_require__(70);
	var invariant = __webpack_require__(12);
	
	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	function insertChildAt(parentNode, childNode, index) {
	  // By exploiting arrays returning `undefined` for an undefined index, we can
	  // rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. However, using `undefined` is not allowed by all
	  // browsers so we must replace it with `null`.
	  parentNode.insertBefore(
	    childNode,
	    parentNode.childNodes[index] || null
	  );
	}
	
	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {
	
	  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,
	
	  updateTextContent: setTextContent,
	
	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @param {array<string>} markupList List of markup strings.
	   * @internal
	   */
	  processUpdates: function(updates, markupList) {
	    var update;
	    // Mapping from parent IDs to initial child orderings.
	    var initialChildren = null;
	    // List of children that will be moved or removed.
	    var updatedChildren = null;
	
	    for (var i = 0; i < updates.length; i++) {
	      update = updates[i];
	      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
	          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
	        var updatedIndex = update.fromIndex;
	        var updatedChild = update.parentNode.childNodes[updatedIndex];
	        var parentID = update.parentID;
	
	        ("production" !== process.env.NODE_ENV ? invariant(
	          updatedChild,
	          'processUpdates(): Unable to find child %s of element. This ' +
	          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
	          'browser), usually due to forgetting a <tbody> when using tables, ' +
	          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' +
	          'in an <svg> parent. Try inspecting the child nodes of the element ' +
	          'with React ID `%s`.',
	          updatedIndex,
	          parentID
	        ) : invariant(updatedChild));
	
	        initialChildren = initialChildren || {};
	        initialChildren[parentID] = initialChildren[parentID] || [];
	        initialChildren[parentID][updatedIndex] = updatedChild;
	
	        updatedChildren = updatedChildren || [];
	        updatedChildren.push(updatedChild);
	      }
	    }
	
	    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);
	
	    // Remove updated children first so that `toIndex` is consistent.
	    if (updatedChildren) {
	      for (var j = 0; j < updatedChildren.length; j++) {
	        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
	      }
	    }
	
	    for (var k = 0; k < updates.length; k++) {
	      update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertChildAt(
	            update.parentNode,
	            renderedMarkup[update.markupIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          insertChildAt(
	            update.parentNode,
	            initialChildren[update.parentID][update.fromIndex],
	            update.toIndex
	          );
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(
	            update.parentNode,
	            update.textContent
	          );
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          // Already removed by the for-loop above.
	          break;
	      }
	    }
	  }
	
	};
	
	module.exports = DOMChildrenOperations;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 * @typechecks static-only
	 */
	
	/*jslint evil: true, sub: true */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var createNodesFromMarkup = __webpack_require__(65);
	var emptyFunction = __webpack_require__(21);
	var getMarkupWrap = __webpack_require__(68);
	var invariant = __webpack_require__(12);
	
	var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
	var RESULT_INDEX_ATTR = 'data-danger-index';
	
	/**
	 * Extracts the `nodeName` from a string of markup.
	 *
	 * NOTE: Extracting the `nodeName` does not require a regular expression match
	 * because we make assumptions about React-generated markup (i.e. there are no
	 * spaces surrounding the opening tag and there is at least one attribute).
	 *
	 * @param {string} markup String of markup.
	 * @return {string} Node name of the supplied markup.
	 * @see http://jsperf.com/extract-nodename
	 */
	function getNodeName(markup) {
	  return markup.substring(1, markup.indexOf(' '));
	}
	
	var Danger = {
	
	  /**
	   * Renders markup into an array of nodes. The markup is expected to render
	   * into a list of root nodes. Also, the length of `resultList` and
	   * `markupList` should be the same.
	   *
	   * @param {array<string>} markupList List of markup strings to render.
	   * @return {array<DOMElement>} List of rendered nodes.
	   * @internal
	   */
	  dangerouslyRenderMarkup: function(markupList) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
	      'thread. Make sure `window` and `document` are available globally ' +
	      'before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    var nodeName;
	    var markupByNodeName = {};
	    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
	    for (var i = 0; i < markupList.length; i++) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        markupList[i],
	        'dangerouslyRenderMarkup(...): Missing markup.'
	      ) : invariant(markupList[i]));
	      nodeName = getNodeName(markupList[i]);
	      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
	      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
	      markupByNodeName[nodeName][i] = markupList[i];
	    }
	    var resultList = [];
	    var resultListAssignmentCount = 0;
	    for (nodeName in markupByNodeName) {
	      if (!markupByNodeName.hasOwnProperty(nodeName)) {
	        continue;
	      }
	      var markupListByNodeName = markupByNodeName[nodeName];
	
	      // This for-in loop skips the holes of the sparse array. The order of
	      // iteration should follow the order of assignment, which happens to match
	      // numerical index order, but we don't rely on that.
	      var resultIndex;
	      for (resultIndex in markupListByNodeName) {
	        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
	          var markup = markupListByNodeName[resultIndex];
	
	          // Push the requested markup with an additional RESULT_INDEX_ATTR
	          // attribute.  If the markup does not start with a < character, it
	          // will be discarded below (with an appropriate console.error).
	          markupListByNodeName[resultIndex] = markup.replace(
	            OPEN_TAG_NAME_EXP,
	            // This index will be parsed back out below.
	            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
	          );
	        }
	      }
	
	      // Render each group of markup with similar wrapping `nodeName`.
	      var renderNodes = createNodesFromMarkup(
	        markupListByNodeName.join(''),
	        emptyFunction // Do nothing special with <script> tags.
	      );
	
	      for (var j = 0; j < renderNodes.length; ++j) {
	        var renderNode = renderNodes[j];
	        if (renderNode.hasAttribute &&
	            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {
	
	          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
	          renderNode.removeAttribute(RESULT_INDEX_ATTR);
	
	          ("production" !== process.env.NODE_ENV ? invariant(
	            !resultList.hasOwnProperty(resultIndex),
	            'Danger: Assigning to an already-occupied result index.'
	          ) : invariant(!resultList.hasOwnProperty(resultIndex)));
	
	          resultList[resultIndex] = renderNode;
	
	          // This should match resultList.length and markupList.length when
	          // we're done.
	          resultListAssignmentCount += 1;
	
	        } else if ("production" !== process.env.NODE_ENV) {
	          console.error(
	            'Danger: Discarding unexpected node:',
	            renderNode
	          );
	        }
	      }
	    }
	
	    // Although resultList was populated out of order, it should now be a dense
	    // array.
	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultListAssignmentCount === resultList.length,
	      'Danger: Did not assign to every index of resultList.'
	    ) : invariant(resultListAssignmentCount === resultList.length));
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      resultList.length === markupList.length,
	      'Danger: Expected markup to render %s nodes, but rendered %s.',
	      markupList.length,
	      resultList.length
	    ) : invariant(resultList.length === markupList.length));
	
	    return resultList;
	  },
	
	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ExecutionEnvironment.canUseDOM,
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
	      'worker thread. Make sure `window` and `document` are available ' +
	      'globally before requiring React when unit testing or use ' +
	      'React.renderToString for server rendering.'
	    ) : invariant(ExecutionEnvironment.canUseDOM));
	    ("production" !== process.env.NODE_ENV ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      oldChild.tagName.toLowerCase() !== 'html',
	      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
	      '<html> node. This is because browser quirks make this unreliable ' +
	      'and/or slow. If you want to render to the root you must use ' +
	      'server rendering. See React.renderToString().'
	    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));
	
	    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	    oldChild.parentNode.replaceChild(newChild, oldChild);
	  }
	
	};
	
	module.exports = Danger;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createNodesFromMarkup
	 * @typechecks
	 */
	
	/*jslint evil: true, sub: true */
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var createArrayFromMixed = __webpack_require__(66);
	var getMarkupWrap = __webpack_require__(68);
	var invariant = __webpack_require__(12);
	
	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;
	
	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}
	
	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
	  var nodeName = getNodeName(markup);
	
	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];
	
	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }
	
	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      handleScript,
	      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
	    ) : invariant(handleScript));
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }
	
	  var nodes = createArrayFromMixed(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}
	
	module.exports = createNodesFromMarkup;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createArrayFromMixed
	 * @typechecks
	 */
	
	var toArray = __webpack_require__(67);
	
	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return (
	    // not null/false
	    !!obj &&
	    // arrays are objects, NodeLists are functions in Safari
	    (typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    ('length' in obj) &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    (typeof obj.nodeType != 'number') &&
	    (
	      // a real array
	      (// HTMLCollection/NodeList
	      (Array.isArray(obj) ||
	      // arguments
	      ('callee' in obj) || 'item' in obj))
	    )
	  );
	}
	
	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}
	
	module.exports = createArrayFromMixed;


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule toArray
	 * @typechecks
	 */
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;
	
	  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
	  // old versions of Safari).
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !Array.isArray(obj) &&
	    (typeof obj === 'object' || typeof obj === 'function'),
	    'toArray: Array-like object expected'
	  ) : invariant(!Array.isArray(obj) &&
	  (typeof obj === 'object' || typeof obj === 'function')));
	
	  ("production" !== process.env.NODE_ENV ? invariant(
	    typeof length === 'number',
	    'toArray: Object needs a length property'
	  ) : invariant(typeof length === 'number'));
	
	  ("production" !== process.env.NODE_ENV ? invariant(
	    length === 0 ||
	    (length - 1) in obj,
	    'toArray: Object should have keys for indices'
	  ) : invariant(length === 0 ||
	  (length - 1) in obj));
	
	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }
	
	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}
	
	module.exports = toArray;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getMarkupWrap
	 */
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode =
	  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;
	
	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */
	var shouldWrap = {
	  // Force wrapping for SVG elements because if they get created inside a <div>,
	  // they will be initialized in the wrong namespace (and will not display).
	  'circle': true,
	  'clipPath': true,
	  'defs': true,
	  'ellipse': true,
	  'g': true,
	  'line': true,
	  'linearGradient': true,
	  'path': true,
	  'polygon': true,
	  'polyline': true,
	  'radialGradient': true,
	  'rect': true,
	  'stop': true,
	  'text': true
	};
	
	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];
	
	var svgWrap = [1, '<svg>', '</svg>'];
	
	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],
	
	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],
	
	  'optgroup': selectWrap,
	  'option': selectWrap,
	
	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,
	
	  'td': trWrap,
	  'th': trWrap,
	
	  'circle': svgWrap,
	  'clipPath': svgWrap,
	  'defs': svgWrap,
	  'ellipse': svgWrap,
	  'g': svgWrap,
	  'line': svgWrap,
	  'linearGradient': svgWrap,
	  'path': svgWrap,
	  'polygon': svgWrap,
	  'polyline': svgWrap,
	  'radialGradient': svgWrap,
	  'rect': svgWrap,
	  'stop': svgWrap,
	  'text': svgWrap
	};
	
	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  ("production" !== process.env.NODE_ENV ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}
	
	
	module.exports = getMarkupWrap;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */
	
	'use strict';
	
	var keyMirror = __webpack_require__(11);
	
	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  TEXT_CONTENT: null
	});
	
	module.exports = ReactMultiChildUpdateTypes;


/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	var escapeTextContentForBrowser = __webpack_require__(51);
	var setInnerHTML = __webpack_require__(71);
	
	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function(node, text) {
	  node.textContent = text;
	};
	
	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function(node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}
	
	module.exports = setTextContent;


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */
	
	/* globals MSApp */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;
	
	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = function(node, html) {
	  node.innerHTML = html;
	};
	
	// Win8 apps: Allow all html to be inserted
	if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	  setInnerHTML = function(node, html) {
	    MSApp.execUnsafeLocalFunction(function() {
	      node.innerHTML = html;
	    });
	  };
	}
	
	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html
	
	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function(node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }
	
	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) ||
	          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        node.innerHTML = '\uFEFF' + html;
	
	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	}
	
	module.exports = setInnerHTML;


/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var ReactBrowserEventEmitter = __webpack_require__(73);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactElement = __webpack_require__(16);
	var ReactElementValidator = __webpack_require__(37);
	var ReactEmptyComponent = __webpack_require__(81);
	var ReactInstanceHandles = __webpack_require__(24);
	var ReactInstanceMap = __webpack_require__(30);
	var ReactMarkupChecksum = __webpack_require__(82);
	var ReactPerf = __webpack_require__(33);
	var ReactReconciler = __webpack_require__(34);
	var ReactUpdateQueue = __webpack_require__(28);
	var ReactUpdates = __webpack_require__(31);
	
	var emptyObject = __webpack_require__(19);
	var containsNode = __webpack_require__(84);
	var getReactRootElementInContainer = __webpack_require__(87);
	var instantiateReactComponent = __webpack_require__(88);
	var invariant = __webpack_require__(12);
	var setInnerHTML = __webpack_require__(71);
	var shouldUpdateReactComponent = __webpack_require__(91);
	var warning = __webpack_require__(20);
	
	var SEPARATOR = ReactInstanceHandles.SEPARATOR;
	
	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var nodeCache = {};
	
	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	
	/** Mapping from reactRootID to React component instance. */
	var instancesByReactRootID = {};
	
	/** Mapping from reactRootID to `container` nodes. */
	var containersByReactRootID = {};
	
	if ("production" !== process.env.NODE_ENV) {
	  /** __DEV__-only mapping from reactRootID to root elements. */
	  var rootElementsByReactRootID = {};
	}
	
	// Used to store breadth-first search state in findComponentRoot.
	var findComponentRootReusableArray = [];
	
	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}
	
	/**
	 * @param {DOMElement} container DOM element that may contain a React component.
	 * @return {?string} A "reactRoot" ID, if a React component is rendered.
	 */
	function getReactRootID(container) {
	  var rootElement = getReactRootElementInContainer(container);
	  return rootElement && ReactMount.getID(rootElement);
	}
	
	/**
	 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
	 * element can return its control whose name or ID equals ATTR_NAME. All
	 * DOM nodes support `getAttributeNode` but this can also get called on
	 * other objects so just return '' if we're given something other than a
	 * DOM node (such as window).
	 *
	 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
	 * @return {string} ID of the supplied `domNode`.
	 */
	function getID(node) {
	  var id = internalGetID(node);
	  if (id) {
	    if (nodeCache.hasOwnProperty(id)) {
	      var cached = nodeCache[id];
	      if (cached !== node) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !isValid(cached, id),
	          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
	          ATTR_NAME, id
	        ) : invariant(!isValid(cached, id)));
	
	        nodeCache[id] = node;
	      }
	    } else {
	      nodeCache[id] = node;
	    }
	  }
	
	  return id;
	}
	
	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}
	
	/**
	 * Sets the React-specific ID of the given node.
	 *
	 * @param {DOMElement} node The DOM node whose ID will be set.
	 * @param {string} id The value of the ID attribute.
	 */
	function setID(node, id) {
	  var oldID = internalGetID(node);
	  if (oldID !== id) {
	    delete nodeCache[oldID];
	  }
	  node.setAttribute(ATTR_NAME, id);
	  nodeCache[id] = node;
	}
	
	/**
	 * Finds the node with the supplied React-generated DOM ID.
	 *
	 * @param {string} id A React-generated DOM ID.
	 * @return {DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNode(id) {
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * Finds the node with the supplied public React instance.
	 *
	 * @param {*} instance A public React instance.
	 * @return {?DOMElement} DOM node with the suppled `id`.
	 * @internal
	 */
	function getNodeFromInstance(instance) {
	  var id = ReactInstanceMap.get(instance)._rootNodeID;
	  if (ReactEmptyComponent.isNullComponentID(id)) {
	    return null;
	  }
	  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
	    nodeCache[id] = ReactMount.findReactNodeByID(id);
	  }
	  return nodeCache[id];
	}
	
	/**
	 * A node is "valid" if it is contained by a currently mounted container.
	 *
	 * This means that the node does not have to be contained by a document in
	 * order to be considered valid.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @param {string} id The expected ID of the node.
	 * @return {boolean} Whether the node is contained by a mounted container.
	 */
	function isValid(node, id) {
	  if (node) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      internalGetID(node) === id,
	      'ReactMount: Unexpected modification of `%s`',
	      ATTR_NAME
	    ) : invariant(internalGetID(node) === id));
	
	    var container = ReactMount.findReactContainerForID(id);
	    if (container && containsNode(container, node)) {
	      return true;
	    }
	  }
	
	  return false;
	}
	
	/**
	 * Causes the cache to forget about one React-specific ID.
	 *
	 * @param {string} id The ID to forget.
	 */
	function purgeID(id) {
	  delete nodeCache[id];
	}
	
	var deepestNodeSoFar = null;
	function findDeepestCachedAncestorImpl(ancestorID) {
	  var ancestor = nodeCache[ancestorID];
	  if (ancestor && isValid(ancestor, ancestorID)) {
	    deepestNodeSoFar = ancestor;
	  } else {
	    // This node isn't populated in the cache, so presumably none of its
	    // descendants are. Break out of the loop.
	    return false;
	  }
	}
	
	/**
	 * Return the deepest cached node whose ID is a prefix of `targetID`.
	 */
	function findDeepestCachedAncestor(targetID) {
	  deepestNodeSoFar = null;
	  ReactInstanceHandles.traverseAncestors(
	    targetID,
	    findDeepestCachedAncestorImpl
	  );
	
	  var foundNode = deepestNodeSoFar;
	  deepestNodeSoFar = null;
	  return foundNode;
	}
	
	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup) {
	  var markup = ReactReconciler.mountComponent(
	    componentInstance, rootID, transaction, emptyObject
	  );
	  componentInstance._isTopLevel = true;
	  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup);
	}
	
	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {string} rootID DOM ID of the root node.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(
	    componentInstance,
	    rootID,
	    container,
	    shouldReuseMarkup) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
	  transaction.perform(
	    mountComponentIntoNode,
	    null,
	    componentInstance,
	    rootID,
	    container,
	    transaction,
	    shouldReuseMarkup
	  );
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}
	
	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {
	  /** Exposed for debugging purposes **/
	  _instancesByReactRootID: instancesByReactRootID,
	
	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function(container, renderCallback) {
	    renderCallback();
	  },
	
	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function(
	      prevComponent,
	      nextElement,
	      container,
	      callback) {
	    if ("production" !== process.env.NODE_ENV) {
	      ReactElementValidator.checkAndWarnForMutatedProps(nextElement);
	    }
	
	    ReactMount.scrollMonitor(container, function() {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });
	
	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[getReactRootID(container)] =
	        getReactRootElementInContainer(container);
	    }
	
	    return prevComponent;
	  },
	
	  /**
	   * Register a component into the instance map and starts scroll value
	   * monitoring
	   * @param {ReactComponent} nextComponent component instance to render
	   * @param {DOMElement} container container to render into
	   * @return {string} reactRoot ID prefix
	   */
	  _registerComponent: function(nextComponent, container) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      '_registerComponent(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));
	
	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	
	    var reactRootID = ReactMount.registerContainer(container);
	    instancesByReactRootID[reactRootID] = nextComponent;
	    return reactRootID;
	  },
	
	  /**
	   * Render a new component into the DOM.
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function(
	    nextElement,
	    container,
	    shouldReuseMarkup
	  ) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      '_renderNewRootComponent(): Render methods should be a pure function ' +
	      'of props and state; triggering nested component updates from ' +
	      'render is not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);
	
	    var componentInstance = instantiateReactComponent(nextElement, null);
	    var reactRootID = ReactMount._registerComponent(
	      componentInstance,
	      container
	    );
	
	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.
	
	    ReactUpdates.batchedUpdates(
	      batchedMountComponentIntoNode,
	      componentInstance,
	      reactRootID,
	      container,
	      shouldReuseMarkup
	    );
	
	    if ("production" !== process.env.NODE_ENV) {
	      // Record the root element in case it later gets transplanted.
	      rootElementsByReactRootID[reactRootID] =
	        getReactRootElementInContainer(container);
	    }
	
	    return componentInstance;
	  },
	
	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function(nextElement, container, callback) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      ReactElement.isValidElement(nextElement),
	      'React.render(): Invalid component element.%s',
	      (
	        typeof nextElement === 'string' ?
	          ' Instead of passing an element string, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        typeof nextElement === 'function' ?
	          ' Instead of passing a component class, make sure to instantiate ' +
	          'it by passing it to React.createElement.' :
	        // Check if it quacks like an element
	        nextElement != null && nextElement.props !== undefined ?
	          ' This may be caused by unintentionally loading two independent ' +
	          'copies of React.' :
	          ''
	      )
	    ) : invariant(ReactElement.isValidElement(nextElement)));
	
	    var prevComponent = instancesByReactRootID[getReactRootID(container)];
	
	    if (prevComponent) {
	      var prevElement = prevComponent._currentElement;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        return ReactMount._updateRootComponent(
	          prevComponent,
	          nextElement,
	          container,
	          callback
	        ).getPublicInstance();
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }
	
	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup =
	      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);
	
	    if ("production" !== process.env.NODE_ENV) {
	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (ReactMount.isRenderedByReact(rootElementSibling)) {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'render(): Target node has markup rendered by React, but there ' +
	              'are unrelated nodes as well. This is most commonly caused by ' +
	              'white-space inserted around server-rendered markup.'
	            ) : null);
	            break;
	          }
	
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }
	
	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;
	
	    var component = ReactMount._renderNewRootComponent(
	      nextElement,
	      container,
	      shouldReuseMarkup
	    ).getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },
	
	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into the supplied `container`.
	   *
	   * @param {function} constructor React component constructor.
	   * @param {?object} props Initial props of the component instance.
	   * @param {DOMElement} container DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  constructAndRenderComponent: function(constructor, props, container) {
	    var element = ReactElement.createElement(constructor, props);
	    return ReactMount.render(element, container);
	  },
	
	  /**
	   * Constructs a component instance of `constructor` with `initialProps` and
	   * renders it into a container node identified by supplied `id`.
	   *
	   * @param {function} componentConstructor React component constructor
	   * @param {?object} props Initial props of the component instance.
	   * @param {string} id ID of the DOM element to render into.
	   * @return {ReactComponent} Component instance rendered in the container node.
	   */
	  constructAndRenderComponentByID: function(constructor, props, id) {
	    var domNode = document.getElementById(id);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      domNode,
	      'Tried to get element with id of "%s" but it is not present on the page.',
	      id
	    ) : invariant(domNode));
	    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
	  },
	
	  /**
	   * Registers a container node into which React components will be rendered.
	   * This also creates the "reactRoot" ID that will be assigned to the element
	   * rendered within.
	   *
	   * @param {DOMElement} container DOM element to register as a container.
	   * @return {string} The "reactRoot" ID of elements rendered within.
	   */
	  registerContainer: function(container) {
	    var reactRootID = getReactRootID(container);
	    if (reactRootID) {
	      // If one exists, make sure it is a valid "reactRoot" ID.
	      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
	    }
	    if (!reactRootID) {
	      // No valid "reactRoot" ID found, create one.
	      reactRootID = ReactInstanceHandles.createReactRootID();
	    }
	    containersByReactRootID[reactRootID] = container;
	    return reactRootID;
	  },
	
	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function(container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    ("production" !== process.env.NODE_ENV ? warning(
	      ReactCurrentOwner.current == null,
	      'unmountComponentAtNode(): Render methods should be a pure function of ' +
	      'props and state; triggering nested component updates from render is ' +
	      'not allowed. If necessary, trigger nested updates in ' +
	      'componentDidUpdate.'
	    ) : null);
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'unmountComponentAtNode(...): Target container is not a DOM element.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));
	
	    var reactRootID = getReactRootID(container);
	    var component = instancesByReactRootID[reactRootID];
	    if (!component) {
	      return false;
	    }
	    ReactMount.unmountComponentFromNode(component, container);
	    delete instancesByReactRootID[reactRootID];
	    delete containersByReactRootID[reactRootID];
	    if ("production" !== process.env.NODE_ENV) {
	      delete rootElementsByReactRootID[reactRootID];
	    }
	    return true;
	  },
	
	  /**
	   * Unmounts a component and removes it from the DOM.
	   *
	   * @param {ReactComponent} instance React component instance.
	   * @param {DOMElement} container DOM element to unmount from.
	   * @final
	   * @internal
	   * @see {ReactMount.unmountComponentAtNode}
	   */
	  unmountComponentFromNode: function(instance, container) {
	    ReactReconciler.unmountComponent(instance);
	
	    if (container.nodeType === DOC_NODE_TYPE) {
	      container = container.documentElement;
	    }
	
	    // http://jsperf.com/emptying-a-node
	    while (container.lastChild) {
	      container.removeChild(container.lastChild);
	    }
	  },
	
	  /**
	   * Finds the container DOM element that contains React component to which the
	   * supplied DOM `id` belongs.
	   *
	   * @param {string} id The ID of an element rendered by a React component.
	   * @return {?DOMElement} DOM element that contains the `id`.
	   */
	  findReactContainerForID: function(id) {
	    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
	    var container = containersByReactRootID[reactRootID];
	
	    if ("production" !== process.env.NODE_ENV) {
	      var rootElement = rootElementsByReactRootID[reactRootID];
	      if (rootElement && rootElement.parentNode !== container) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          // Call internalGetID here because getID calls isValid which calls
	          // findReactContainerForID (this function).
	          internalGetID(rootElement) === reactRootID,
	          'ReactMount: Root element ID differed from reactRootID.'
	        ) : invariant(// Call internalGetID here because getID calls isValid which calls
	        // findReactContainerForID (this function).
	        internalGetID(rootElement) === reactRootID));
	
	        var containerChild = container.firstChild;
	        if (containerChild &&
	            reactRootID === internalGetID(containerChild)) {
	          // If the container has a new child with the same ID as the old
	          // root element, then rootElementsByReactRootID[reactRootID] is
	          // just stale and needs to be updated. The case that deserves a
	          // warning is when the container is empty.
	          rootElementsByReactRootID[reactRootID] = containerChild;
	        } else {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'ReactMount: Root element has been removed from its original ' +
	            'container. New container:', rootElement.parentNode
	          ) : null);
	        }
	      }
	    }
	
	    return container;
	  },
	
	  /**
	   * Finds an element rendered by React with the supplied ID.
	   *
	   * @param {string} id ID of a DOM node in the React component.
	   * @return {DOMElement} Root DOM node of the React component.
	   */
	  findReactNodeByID: function(id) {
	    var reactRoot = ReactMount.findReactContainerForID(id);
	    return ReactMount.findComponentRoot(reactRoot, id);
	  },
	
	  /**
	   * True if the supplied `node` is rendered by React.
	   *
	   * @param {*} node DOM Element to check.
	   * @return {boolean} True if the DOM Element appears to be rendered by React.
	   * @internal
	   */
	  isRenderedByReact: function(node) {
	    if (node.nodeType !== 1) {
	      // Not a DOMElement, therefore not a React component
	      return false;
	    }
	    var id = ReactMount.getID(node);
	    return id ? id.charAt(0) === SEPARATOR : false;
	  },
	
	  /**
	   * Traverses up the ancestors of the supplied node to find a node that is a
	   * DOM representation of a React component.
	   *
	   * @param {*} node
	   * @return {?DOMEventTarget}
	   * @internal
	   */
	  getFirstReactDOM: function(node) {
	    var current = node;
	    while (current && current.parentNode !== current) {
	      if (ReactMount.isRenderedByReact(current)) {
	        return current;
	      }
	      current = current.parentNode;
	    }
	    return null;
	  },
	
	  /**
	   * Finds a node with the supplied `targetID` inside of the supplied
	   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
	   * quickly.
	   *
	   * @param {DOMEventTarget} ancestorNode Search from this root.
	   * @pararm {string} targetID ID of the DOM representation of the component.
	   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
	   * @internal
	   */
	  findComponentRoot: function(ancestorNode, targetID) {
	    var firstChildren = findComponentRootReusableArray;
	    var childIndex = 0;
	
	    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;
	
	    firstChildren[0] = deepestAncestor.firstChild;
	    firstChildren.length = 1;
	
	    while (childIndex < firstChildren.length) {
	      var child = firstChildren[childIndex++];
	      var targetChild;
	
	      while (child) {
	        var childID = ReactMount.getID(child);
	        if (childID) {
	          // Even if we find the node we're looking for, we finish looping
	          // through its siblings to ensure they're cached so that we don't have
	          // to revisit this node again. Otherwise, we make n^2 calls to getID
	          // when visiting the many children of a single node in order.
	
	          if (targetID === childID) {
	            targetChild = child;
	          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
	            // If we find a child whose ID is an ancestor of the given ID,
	            // then we can be sure that we only want to search the subtree
	            // rooted at this child, so we can throw out the rest of the
	            // search state.
	            firstChildren.length = childIndex = 0;
	            firstChildren.push(child.firstChild);
	          }
	
	        } else {
	          // If this child had no ID, then there's a chance that it was
	          // injected automatically by the browser, as when a `<table>`
	          // element sprouts an extra `<tbody>` child as a side effect of
	          // `.innerHTML` parsing. Optimistically continue down this
	          // branch, but not before examining the other siblings.
	          firstChildren.push(child.firstChild);
	        }
	
	        child = child.nextSibling;
	      }
	
	      if (targetChild) {
	        // Emptying firstChildren/findComponentRootReusableArray is
	        // not necessary for correctness, but it helps the GC reclaim
	        // any nodes that were left at the end of the search.
	        firstChildren.length = 0;
	
	        return targetChild;
	      }
	    }
	
	    firstChildren.length = 0;
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'findComponentRoot(..., %s): Unable to find element. This probably ' +
	      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
	      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
	      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
	      'parent. ' +
	      'Try inspecting the child nodes of the element with React ID `%s`.',
	      targetID,
	      ReactMount.getID(ancestorNode)
	    ) : invariant(false));
	  },
	
	  _mountImageIntoNode: function(markup, container, shouldReuseMarkup) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container && (
	        (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	      ),
	      'mountComponentIntoNode(...): Target container is not valid.'
	    ) : invariant(container && (
	      (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE)
	    )));
	
	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	        );
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	
	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(
	          ReactMarkupChecksum.CHECKSUM_ATTR_NAME,
	          checksum
	        );
	
	        var diffIndex = firstDifferenceIndex(markup, rootMarkup);
	        var difference = ' (client) ' +
	          markup.substring(diffIndex - 20, diffIndex + 20) +
	          '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);
	
	        ("production" !== process.env.NODE_ENV ? invariant(
	          container.nodeType !== DOC_NODE_TYPE,
	          'You\'re trying to render a component to the document using ' +
	          'server rendering but the checksum was invalid. This usually ' +
	          'means you rendered a different component type or props on ' +
	          'the client from the one on the server, or your render() ' +
	          'methods are impure. React cannot handle this case due to ' +
	          'cross-browser quirks by rendering at the document root. You ' +
	          'should look for environment dependent code in your components ' +
	          'and ensure the props are the same client and server side:\n%s',
	          difference
	        ) : invariant(container.nodeType !== DOC_NODE_TYPE));
	
	        if ("production" !== process.env.NODE_ENV) {
	          ("production" !== process.env.NODE_ENV ? warning(
	            false,
	            'React attempted to reuse markup in a container but the ' +
	            'checksum was invalid. This generally means that you are ' +
	            'using server rendering and the markup generated on the ' +
	            'server was not what the client was expecting. React injected ' +
	            'new markup to compensate which works but you have lost many ' +
	            'of the benefits of server rendering. Instead, figure out ' +
	            'why the markup being generated is different on the client ' +
	            'or server:\n%s',
	            difference
	          ) : null);
	        }
	      }
	    }
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      container.nodeType !== DOC_NODE_TYPE,
	      'You\'re trying to render a component to the document but ' +
	        'you didn\'t use server rendering. We can\'t do this ' +
	        'without using server rendering due to cross-browser quirks. ' +
	        'See React.renderToString() for server rendering.'
	    ) : invariant(container.nodeType !== DOC_NODE_TYPE));
	
	    setInnerHTML(container, markup);
	  },
	
	  /**
	   * React ID utilities.
	   */
	
	  getReactRootID: getReactRootID,
	
	  getID: getID,
	
	  setID: setID,
	
	  getNode: getNode,
	
	  getNodeFromInstance: getNodeFromInstance,
	
	  purgeID: purgeID
	};
	
	ReactPerf.measureMethods(ReactMount, 'ReactMount', {
	  _renderNewRootComponent: '_renderNewRootComponent',
	  _mountImageIntoNode: '_mountImageIntoNode'
	});
	
	module.exports = ReactMount;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPluginHub = __webpack_require__(74);
	var EventPluginRegistry = __webpack_require__(75);
	var ReactEventEmitterMixin = __webpack_require__(78);
	var ViewportMetrics = __webpack_require__(79);
	
	var assign = __webpack_require__(18);
	var isEventSupported = __webpack_require__(80);
	
	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */
	
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;
	
	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topBlur: 'blur',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topScroll: 'scroll',
	  topSelectionChange: 'selectionchange',
	  topTextInput: 'textInput',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topWheel: 'wheel'
	};
	
	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);
	
	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}
	
	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {
	
	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,
	
	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function(ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(
	        ReactBrowserEventEmitter.handleTopLevel
	      );
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },
	
	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function(enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },
	
	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function() {
	    return !!(
	      (ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled())
	    );
	  },
	
	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function(registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.
	      registrationNameDependencies[registrationName];
	
	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0, l = dependencies.length; i < l; i++) {
	      var dependency = dependencies[i];
	      if (!(
	            (isListening.hasOwnProperty(dependency) && isListening[dependency])
	          )) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'wheel',
	              mountAt
	            );
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'mousewheel',
	              mountAt
	            );
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topWheel,
	              'DOMMouseScroll',
	              mountAt
	            );
	          }
	        } else if (dependency === topLevelTypes.topScroll) {
	
	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              mountAt
	            );
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topScroll,
	              'scroll',
	              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
	            );
	          }
	        } else if (dependency === topLevelTypes.topFocus ||
	            dependency === topLevelTypes.topBlur) {
	
	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topFocus,
	              'focus',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	              topLevelTypes.topBlur,
	              'blur',
	              mountAt
	            );
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topFocus,
	              'focusin',
	              mountAt
	            );
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	              topLevelTypes.topBlur,
	              'focusout',
	              mountAt
	            );
	          }
	
	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	            dependency,
	            topEventMapping[dependency],
	            mountAt
	          );
	        }
	
	        isListening[dependency] = true;
	      }
	    }
	  },
	
	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },
	
	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
	      topLevelType,
	      handlerBaseName,
	      handle
	    );
	  },
	
	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function() {
	    if (!isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  },
	
	  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginHub.registrationNameModules,
	
	  putListener: EventPluginHub.putListener,
	
	  getListener: EventPluginHub.getListener,
	
	  deleteListener: EventPluginHub.deleteListener,
	
	  deleteAllListeners: EventPluginHub.deleteAllListeners
	
	});
	
	module.exports = ReactBrowserEventEmitter;


/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */
	
	'use strict';
	
	var EventPluginRegistry = __webpack_require__(75);
	var EventPluginUtils = __webpack_require__(9);
	
	var accumulateInto = __webpack_require__(76);
	var forEachAccumulated = __webpack_require__(77);
	var invariant = __webpack_require__(12);
	
	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};
	
	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;
	
	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @private
	 */
	var executeDispatchesAndRelease = function(event) {
	  if (event) {
	    var executeDispatch = EventPluginUtils.executeDispatch;
	    // Plugins can provide custom behavior when dispatching events.
	    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
	    if (PluginModule && PluginModule.executeDispatch) {
	      executeDispatch = PluginModule.executeDispatch;
	    }
	    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);
	
	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	
	/**
	 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
	 *   hierarchy given ids of the logical DOM elements involved.
	 */
	var InstanceHandle = null;
	
	function validateInstanceHandle() {
	  var valid =
	    InstanceHandle &&
	    InstanceHandle.traverseTwoPhase &&
	    InstanceHandle.traverseEnterLeave;
	  ("production" !== process.env.NODE_ENV ? invariant(
	    valid,
	    'InstanceHandle not injected before use!'
	  ) : invariant(valid));
	}
	
	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {
	
	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {
	
	    /**
	     * @param {object} InjectedMount
	     * @public
	     */
	    injectMount: EventPluginUtils.injection.injectMount,
	
	    /**
	     * @param {object} InjectedInstanceHandle
	     * @public
	     */
	    injectInstanceHandle: function(InjectedInstanceHandle) {
	      InstanceHandle = InjectedInstanceHandle;
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	    },
	
	    getInstanceHandle: function() {
	      if ("production" !== process.env.NODE_ENV) {
	        validateInstanceHandle();
	      }
	      return InstanceHandle;
	    },
	
	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,
	
	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
	
	  },
	
	  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,
	
	  registrationNameModules: EventPluginRegistry.registrationNameModules,
	
	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {?function} listener The callback to store.
	   */
	  putListener: function(id, registrationName, listener) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !listener || typeof listener === 'function',
	      'Expected %s listener to be a function, instead got type %s',
	      registrationName, typeof listener
	    ) : invariant(!listener || typeof listener === 'function'));
	
	    var bankForRegistrationName =
	      listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[id] = listener;
	  },
	
	  /**
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[id];
	  },
	
	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {string} id ID of the DOM element.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function(id, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[id];
	    }
	  },
	
	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {string} id ID of the DOM element.
	   */
	  deleteAllListeners: function(id) {
	    for (var registrationName in listenerBank) {
	      delete listenerBank[registrationName][id];
	    }
	  },
	
	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0, l = plugins.length; i < l; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(
	          topLevelType,
	          topLevelTarget,
	          topLevelTargetID,
	          nativeEvent
	        );
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },
	
	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function(events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },
	
	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function() {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !eventQueue,
	      'processEventQueue(): Additional events were enqueued while processing ' +
	      'an event queue. Support for this has not yet been implemented.'
	    ) : invariant(!eventQueue));
	  },
	
	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function() {
	    listenerBank = {};
	  },
	
	  __getListenerBank: function() {
	    return listenerBank;
	  }
	
	};
	
	module.exports = EventPluginHub;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;
	
	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};
	
	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    ("production" !== process.env.NODE_ENV ? invariant(
	      pluginIndex > -1,
	      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
	      'the plugin ordering, `%s`.',
	      pluginName
	    ) : invariant(pluginIndex > -1));
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      PluginModule.extractEvents,
	      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
	      'method, but `%s` does not.',
	      pluginName
	    ) : invariant(PluginModule.extractEvents));
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        publishEventForPlugin(
	          publishedEvents[eventName],
	          PluginModule,
	          eventName
	        ),
	        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
	        eventName,
	        pluginName
	      ) : invariant(publishEventForPlugin(
	        publishedEvents[eventName],
	        PluginModule,
	        eventName
	      )));
	    }
	  }
	}
	
	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'event name, `%s`.',
	    eventName
	  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;
	
	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(
	          phasedRegistrationName,
	          PluginModule,
	          eventName
	        );
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(
	      dispatchConfig.registrationName,
	      PluginModule,
	      eventName
	    );
	    return true;
	  }
	  return false;
	}
	
	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    !EventPluginRegistry.registrationNameModules[registrationName],
	    'EventPluginHub: More than one plugin attempted to publish the same ' +
	    'registration name, `%s`.',
	    registrationName
	  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] =
	    PluginModule.eventTypes[eventName].dependencies;
	}
	
	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {
	
	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],
	
	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},
	
	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},
	
	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},
	
	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function(InjectedEventPluginOrder) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      !EventPluginOrder,
	      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
	      'once. You are likely trying to load more than one copy of React.'
	    ) : invariant(!EventPluginOrder));
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },
	
	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function(injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) ||
	          namesToPlugins[pluginName] !== PluginModule) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          !namesToPlugins[pluginName],
	          'EventPluginRegistry: Cannot inject two different event plugins ' +
	          'using the same name, `%s`.',
	          pluginName
	        ) : invariant(!namesToPlugins[pluginName]));
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },
	
	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function(event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[
	        dispatchConfig.registrationName
	      ] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[
	        dispatchConfig.phasedRegistrationNames[phase]
	      ];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },
	
	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function() {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;
	
	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }
	
	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }
	  }
	
	};
	
	module.exports = EventPluginRegistry;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	/**
	 *
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */
	
	function accumulateInto(current, next) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    next != null,
	    'accumulateInto(...): Accumulated items must not be null or undefined.'
	  ) : invariant(next != null));
	  if (current == null) {
	    return next;
	  }
	
	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  var currentIsArray = Array.isArray(current);
	  var nextIsArray = Array.isArray(next);
	
	  if (currentIsArray && nextIsArray) {
	    current.push.apply(current, next);
	    return current;
	  }
	
	  if (currentIsArray) {
	    current.push(next);
	    return current;
	  }
	
	  if (nextIsArray) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }
	
	  return [current, next];
	}
	
	module.exports = accumulateInto;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 */
	
	'use strict';
	
	/**
	 * @param {array} an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */
	var forEachAccumulated = function(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	};
	
	module.exports = forEachAccumulated;


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */
	
	'use strict';
	
	var EventPluginHub = __webpack_require__(74);
	
	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue();
	}
	
	var ReactEventEmitterMixin = {
	
	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {object} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native environment event.
	   */
	  handleTopLevel: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var events = EventPluginHub.extractEvents(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent
	    );
	
	    runEventQueueInBatch(events);
	  }
	};
	
	module.exports = ReactEventEmitterMixin;


/***/ },
/* 79 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */
	
	'use strict';
	
	var ViewportMetrics = {
	
	  currentScrollLeft: 0,
	
	  currentScrollTop: 0,
	
	  refreshScrollValues: function(scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }
	
	};
	
	module.exports = ViewportMetrics;


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature =
	    document.implementation &&
	    document.implementation.hasFeature &&
	    // always returns true in newer browsers as per the standard.
	    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	    document.implementation.hasFeature('', '') !== true;
	}
	
	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM ||
	      capture && !('addEventListener' in document)) {
	    return false;
	  }
	
	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;
	
	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }
	
	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }
	
	  return isSupported;
	}
	
	module.exports = isEventSupported;


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactInstanceMap = __webpack_require__(30);
	
	var invariant = __webpack_require__(12);
	
	var component;
	// This registry keeps track of the React IDs of the components that rendered to
	// `null` (in reality a placeholder such as `noscript`)
	var nullComponentIDsRegistry = {};
	
	var ReactEmptyComponentInjection = {
	  injectEmptyComponent: function(emptyComponent) {
	    component = ReactElement.createFactory(emptyComponent);
	  }
	};
	
	var ReactEmptyComponentType = function() {};
	ReactEmptyComponentType.prototype.componentDidMount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Make sure we run these methods in the correct order, we shouldn't
	  // need this check. We're going to assume if we're here it means we ran
	  // componentWillUnmount already so there is no internal instance (it gets
	  // removed as part of the unmounting process).
	  if (!internalInstance) {
	    return;
	  }
	  registerNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.componentWillUnmount = function() {
	  var internalInstance = ReactInstanceMap.get(this);
	  // TODO: Get rid of this check. See TODO in componentDidMount.
	  if (!internalInstance) {
	    return;
	  }
	  deregisterNullComponentID(internalInstance._rootNodeID);
	};
	ReactEmptyComponentType.prototype.render = function() {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    component,
	    'Trying to return null from a render, but no null placeholder component ' +
	    'was injected.'
	  ) : invariant(component));
	  return component();
	};
	
	var emptyElement = ReactElement.createElement(ReactEmptyComponentType);
	
	/**
	 * Mark the component as having rendered to null.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function registerNullComponentID(id) {
	  nullComponentIDsRegistry[id] = true;
	}
	
	/**
	 * Unmark the component as having rendered to null: it renders to something now.
	 * @param {string} id Component's `_rootNodeID`.
	 */
	function deregisterNullComponentID(id) {
	  delete nullComponentIDsRegistry[id];
	}
	
	/**
	 * @param {string} id Component's `_rootNodeID`.
	 * @return {boolean} True if the component is rendered to null.
	 */
	function isNullComponentID(id) {
	  return !!nullComponentIDsRegistry[id];
	}
	
	var ReactEmptyComponent = {
	  emptyElement: emptyElement,
	  injection: ReactEmptyComponentInjection,
	  isNullComponentID: isNullComponentID
	};
	
	module.exports = ReactEmptyComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */
	
	'use strict';
	
	var adler32 = __webpack_require__(83);
	
	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',
	
	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function(markup) {
	    var checksum = adler32(markup);
	    return markup.replace(
	      '>',
	      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
	    );
	  },
	
	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function(markup, element) {
	    var existingChecksum = element.getAttribute(
	      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
	    );
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};
	
	module.exports = ReactMarkupChecksum;


/***/ },
/* 83 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 */
	
	/* jslint bitwise:true */
	
	'use strict';
	
	var MOD = 65521;
	
	// This is a clean-room implementation of adler32 designed for detecting
	// if markup is not what we expect it to be. It does not need to be
	// cryptographically strong, only reasonably good at detecting if markup
	// generated on the server is different than that on the client.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  for (var i = 0; i < data.length; i++) {
	    a = (a + data.charCodeAt(i)) % MOD;
	    b = (b + a) % MOD;
	  }
	  return a | (b << 16);
	}
	
	module.exports = adler32;


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule containsNode
	 * @typechecks
	 */
	
	var isTextNode = __webpack_require__(85);
	
	/*jslint bitwise:true */
	
	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 *
	 * @param {?DOMNode} outerNode Outer DOM node.
	 * @param {?DOMNode} innerNode Inner DOM node.
	 * @return {boolean} True if `outerNode` contains or is `innerNode`.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if (outerNode.contains) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}
	
	module.exports = containsNode;


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextNode
	 * @typechecks
	 */
	
	var isNode = __webpack_require__(86);
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}
	
	module.exports = isTextNode;


/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isNode
	 * @typechecks
	 */
	
	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (
	    ((typeof Node === 'function' ? object instanceof Node : typeof object === 'object' &&
	    typeof object.nodeType === 'number' &&
	    typeof object.nodeName === 'string'))
	  ));
	}
	
	module.exports = isNode;


/***/ },
/* 87 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getReactRootElementInContainer
	 */
	
	'use strict';
	
	var DOC_NODE_TYPE = 9;
	
	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 *                                           a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }
	
	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}
	
	module.exports = getReactRootElementInContainer;


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCompositeComponent = __webpack_require__(89);
	var ReactEmptyComponent = __webpack_require__(81);
	var ReactNativeComponent = __webpack_require__(40);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	var warning = __webpack_require__(20);
	
	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function() { };
	assign(
	  ReactCompositeComponentWrapper.prototype,
	  ReactCompositeComponent.Mixin,
	  {
	    _instantiateReactComponent: instantiateReactComponent
	  }
	);
	
	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return (
	    typeof type === 'function' &&
	    typeof type.prototype !== 'undefined' &&
	    typeof type.prototype.mountComponent === 'function' &&
	    typeof type.prototype.receiveComponent === 'function'
	  );
	}
	
	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {*} parentCompositeType The composite type that resolved this.
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, parentCompositeType) {
	  var instance;
	
	  if (node === null || node === false) {
	    node = ReactEmptyComponent.emptyElement;
	  }
	
	  if (typeof node === 'object') {
	    var element = node;
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        element && (typeof element.type === 'function' ||
	                    typeof element.type === 'string'),
	        'Only functions or strings can be mounted as React components.'
	      ) : null);
	    }
	
	    // Special case string values
	    if (parentCompositeType === element.type &&
	        typeof element.type === 'string') {
	      // Avoid recursion if the wrapper renders itself.
	      instance = ReactNativeComponent.createInternalComponent(element);
	      // All native components are currently wrapped in a composite so we're
	      // safe to assume that this is what we should instantiate.
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // represenations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);
	    } else {
	      instance = new ReactCompositeComponentWrapper();
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactNativeComponent.createInstanceForText(node);
	  } else {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      false,
	      'Encountered invalid React node of type %s',
	      typeof node
	    ) : invariant(false));
	  }
	
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof instance.construct === 'function' &&
	      typeof instance.mountComponent === 'function' &&
	      typeof instance.receiveComponent === 'function' &&
	      typeof instance.unmountComponent === 'function',
	      'Only React Components can be mounted.'
	    ) : null);
	  }
	
	  // Sets up the instance. This can probably just move into the constructor now.
	  instance.construct(node);
	
	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;
	
	  if ("production" !== process.env.NODE_ENV) {
	    instance._isOwnerNecessary = false;
	    instance._warnedAboutRefsInRender = false;
	  }
	
	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if ("production" !== process.env.NODE_ENV) {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }
	
	  return instance;
	}
	
	module.exports = instantiateReactComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(90);
	var ReactContext = __webpack_require__(17);
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactElement = __webpack_require__(16);
	var ReactElementValidator = __webpack_require__(37);
	var ReactInstanceMap = __webpack_require__(30);
	var ReactLifeCycle = __webpack_require__(29);
	var ReactNativeComponent = __webpack_require__(40);
	var ReactPerf = __webpack_require__(33);
	var ReactPropTypeLocations = __webpack_require__(38);
	var ReactPropTypeLocationNames = __webpack_require__(39);
	var ReactReconciler = __webpack_require__(34);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	var emptyObject = __webpack_require__(19);
	var invariant = __webpack_require__(12);
	var shouldUpdateReactComponent = __webpack_require__(91);
	var warning = __webpack_require__(20);
	
	function getDeclarationErrorAddendum(component) {
	  var owner = component._currentElement._owner || null;
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}
	
	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */
	
	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;
	
	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {
	
	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function(element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	
	    // See ReactUpdateQueue
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    this._renderedComponent = null;
	
	    this._context = null;
	    this._mountOrder = 0;
	    this._isTopLevel = false;
	
	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;
	  },
	
	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {string} rootID DOM ID of the root node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._rootNodeID = rootID;
	
	    var publicProps = this._processProps(this._currentElement.props);
	    var publicContext = this._processContext(this._currentElement._context);
	
	    var Component = ReactNativeComponent.getComponentClassForElement(
	      this._currentElement
	    );
	
	    // Initialize the public class
	    var inst = new Component(publicProps, publicContext);
	
	    if ("production" !== process.env.NODE_ENV) {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      ("production" !== process.env.NODE_ENV ? warning(
	        inst.render != null,
	        '%s(...): No `render` method found on the returned component ' +
	        'instance: you may have forgotten to define `render` in your ' +
	        'component or you may have accidentally tried to render an element ' +
	        'whose type is a function that isn\'t a React component.',
	        Component.displayName || Component.name || 'Component'
	      ) : null);
	    }
	
	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	
	    this._instance = inst;
	
	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);
	
	    if ("production" !== process.env.NODE_ENV) {
	      this._warnIfContextsDiffer(this._currentElement._context, context);
	    }
	
	    if ("production" !== process.env.NODE_ENV) {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getInitialState ||
	        inst.getInitialState.isReactClassApproved,
	        'getInitialState was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Did you mean to define a state property instead?',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.getDefaultProps ||
	        inst.getDefaultProps.isReactClassApproved,
	        'getDefaultProps was defined on %s, a plain JavaScript class. ' +
	        'This is only supported for classes created using React.createClass. ' +
	        'Use a static property to define defaultProps instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.propTypes,
	        'propTypes was defined as an instance property on %s. Use a static ' +
	        'property to define propTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        !inst.contextTypes,
	        'contextTypes was defined as an instance property on %s. Use a ' +
	        'static property to define contextTypes instead.',
	        this.getName() || 'a component'
	      ) : null);
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof inst.componentShouldUpdate !== 'function',
	        '%s has a method called ' +
	        'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
	        'The name is phrased as a question because the function is ' +
	        'expected to return a value.',
	        (this.getName() || 'A component')
	      ) : null);
	    }
	
	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof initialState === 'object' && !Array.isArray(initialState),
	      '%s.state: must be set to an object or null',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(typeof initialState === 'object' && !Array.isArray(initialState)));
	
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	
	    var childContext;
	    var renderedElement;
	
	    var previouslyMounting = ReactLifeCycle.currentlyMountingInstance;
	    ReactLifeCycle.currentlyMountingInstance = this;
	    try {
	      if (inst.componentWillMount) {
	        inst.componentWillMount();
	        // When mounting, calls to `setState` by `componentWillMount` will set
	        // `this._pendingStateQueue` without triggering a re-render.
	        if (this._pendingStateQueue) {
	          inst.state = this._processPendingState(inst.props, inst.context);
	        }
	      }
	
	      childContext = this._getValidatedChildContext(context);
	      renderedElement = this._renderValidatedComponent(childContext);
	    } finally {
	      ReactLifeCycle.currentlyMountingInstance = previouslyMounting;
	    }
	
	    this._renderedComponent = this._instantiateReactComponent(
	      renderedElement,
	      this._currentElement.type // The wrapping type
	    );
	
	    var markup = ReactReconciler.mountComponent(
	      this._renderedComponent,
	      rootID,
	      transaction,
	      this._mergeChildContext(context, childContext)
	    );
	    if (inst.componentDidMount) {
	      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	    }
	
	    return markup;
	  },
	
	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function() {
	    var inst = this._instance;
	
	    if (inst.componentWillUnmount) {
	      var previouslyUnmounting = ReactLifeCycle.currentlyUnmountingInstance;
	      ReactLifeCycle.currentlyUnmountingInstance = this;
	      try {
	        inst.componentWillUnmount();
	      } finally {
	        ReactLifeCycle.currentlyUnmountingInstance = previouslyUnmounting;
	      }
	    }
	
	    ReactReconciler.unmountComponent(this._renderedComponent);
	    this._renderedComponent = null;
	
	    // Reset pending fields
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;
	
	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	
	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);
	
	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },
	
	  /**
	   * Schedule a partial update to the props. Only used for internal testing.
	   *
	   * @param {object} partialProps Subset of the next props.
	   * @param {?function} callback Called after props are updated.
	   * @final
	   * @internal
	   */
	  _setPropsInternal: function(partialProps, callback) {
	    // This is a deoptimized path. We optimize for always having an element.
	    // This creates an extra internal element.
	    var element = this._pendingElement || this._currentElement;
	    this._pendingElement = ReactElement.cloneAndReplaceProps(
	      element,
	      assign({}, element.props, partialProps)
	    );
	    ReactUpdates.enqueueUpdate(this, callback);
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function(context) {
	    var maskedContext = null;
	    // This really should be getting the component class for the element,
	    // but we know that we're not going to need it for built-ins.
	    if (typeof this._currentElement.type === 'string') {
	      return emptyObject;
	    }
	    var contextTypes = this._currentElement.type.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },
	
	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function(context) {
	    var maskedContext = this._maskContext(context);
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.contextTypes) {
	        this._checkPropTypes(
	          Component.contextTypes,
	          maskedContext,
	          ReactPropTypeLocations.context
	        );
	      }
	    }
	    return maskedContext;
	  },
	
	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _getValidatedChildContext: function(currentContext) {
	    var inst = this._instance;
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (childContext) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        typeof inst.constructor.childContextTypes === 'object',
	        '%s.getChildContext(): childContextTypes must be defined in order to ' +
	        'use getChildContext().',
	        this.getName() || 'ReactCompositeComponent'
	      ) : invariant(typeof inst.constructor.childContextTypes === 'object'));
	      if ("production" !== process.env.NODE_ENV) {
	        this._checkPropTypes(
	          inst.constructor.childContextTypes,
	          childContext,
	          ReactPropTypeLocations.childContext
	        );
	      }
	      for (var name in childContext) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          name in inst.constructor.childContextTypes,
	          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
	          this.getName() || 'ReactCompositeComponent',
	          name
	        ) : invariant(name in inst.constructor.childContextTypes));
	      }
	      return childContext;
	    }
	    return null;
	  },
	
	  _mergeChildContext: function(currentContext, childContext) {
	    if (childContext) {
	      return assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },
	
	  /**
	   * Processes props by setting default values for unspecified props and
	   * asserting that the props are valid. Does not mutate its argument; returns
	   * a new props object with defaults merged in.
	   *
	   * @param {object} newProps
	   * @return {object}
	   * @private
	   */
	  _processProps: function(newProps) {
	    if ("production" !== process.env.NODE_ENV) {
	      var Component = ReactNativeComponent.getComponentClassForElement(
	        this._currentElement
	      );
	      if (Component.propTypes) {
	        this._checkPropTypes(
	          Component.propTypes,
	          newProps,
	          ReactPropTypeLocations.prop
	        );
	      }
	    }
	    return newProps;
	  },
	
	  /**
	   * Assert that the props are valid
	   *
	   * @param {object} propTypes Map of prop name to a ReactPropType
	   * @param {object} props
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkPropTypes: function(propTypes, props, location) {
	    // TODO: Stop validating prop types here and only use the element
	    // validation.
	    var componentName = this.getName();
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error;
	        try {
	          // This is intentionally an invariant that gets caught. It's the same
	          // behavior as without this statement except with a better message.
	          ("production" !== process.env.NODE_ENV ? invariant(
	            typeof propTypes[propName] === 'function',
	            '%s: %s type `%s` is invalid; it must be a function, usually ' +
	            'from React.PropTypes.',
	            componentName || 'React class',
	            ReactPropTypeLocationNames[location],
	            propName
	          ) : invariant(typeof propTypes[propName] === 'function'));
	          error = propTypes[propName](props, propName, componentName, location);
	        } catch (ex) {
	          error = ex;
	        }
	        if (error instanceof Error) {
	          // We may want to extend this logic for similar errors in
	          // React.render calls, so I'm abstracting it away into
	          // a function to minimize refactoring in the future
	          var addendum = getDeclarationErrorAddendum(this);
	
	          if (location === ReactPropTypeLocations.prop) {
	            // Preface gives us something to blacklist in warning module
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Composite propType: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          } else {
	            ("production" !== process.env.NODE_ENV ? warning(
	              false,
	              'Failed Context Types: %s%s',
	              error.message,
	              addendum
	            ) : null);
	          }
	        }
	      }
	    }
	  },
	
	  receiveComponent: function(nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;
	
	    this._pendingElement = null;
	
	    this.updateComponent(
	      transaction,
	      prevElement,
	      nextElement,
	      prevContext,
	      nextContext
	    );
	  },
	
	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function(transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(
	        this,
	        this._pendingElement || this._currentElement,
	        transaction,
	        this._context
	      );
	    }
	
	    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      if ("production" !== process.env.NODE_ENV) {
	        ReactElementValidator.checkAndWarnForMutatedProps(
	          this._currentElement
	        );
	      }
	
	      this.updateComponent(
	        transaction,
	        this._currentElement,
	        this._currentElement,
	        this._context,
	        this._context
	      );
	    }
	  },
	
	  /**
	   * Compare two contexts, warning if they are different
	   * TODO: Remove this check when owner-context is removed
	   */
	   _warnIfContextsDiffer: function(ownerBasedContext, parentBasedContext) {
	    ownerBasedContext = this._maskContext(ownerBasedContext);
	    parentBasedContext = this._maskContext(parentBasedContext);
	    var parentKeys = Object.keys(parentBasedContext).sort();
	    var displayName = this.getName() || 'ReactCompositeComponent';
	    for (var i = 0; i < parentKeys.length; i++) {
	      var key = parentKeys[i];
	      ("production" !== process.env.NODE_ENV ? warning(
	        ownerBasedContext[key] === parentBasedContext[key],
	        'owner-based and parent-based contexts differ '  +
	        '(values: `%s` vs `%s`) for key (%s) while mounting %s ' +
	        '(see: http://fb.me/react-context-by-parent)',
	        ownerBasedContext[key],
	        parentBasedContext[key],
	        key,
	        displayName
	      ) : null);
	    }
	  },
	
	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(
	    transaction,
	    prevParentElement,
	    nextParentElement,
	    prevUnmaskedContext,
	    nextUnmaskedContext
	  ) {
	    var inst = this._instance;
	
	    var nextContext = inst.context;
	    var nextProps = inst.props;
	
	    // Distinguish between a props update versus a simple state update
	    if (prevParentElement !== nextParentElement) {
	      nextContext = this._processContext(nextParentElement._context);
	      nextProps = this._processProps(nextParentElement.props);
	
	      if ("production" !== process.env.NODE_ENV) {
	        if (nextUnmaskedContext != null) {
	          this._warnIfContextsDiffer(
	            nextParentElement._context,
	            nextUnmaskedContext
	          );
	        }
	      }
	
	      // An update here will schedule an update but immediately set
	      // _pendingStateQueue which will ensure that any state updates gets
	      // immediately reconciled instead of waiting for the next batch.
	
	      if (inst.componentWillReceiveProps) {
	        inst.componentWillReceiveProps(nextProps, nextContext);
	      }
	    }
	
	    var nextState = this._processPendingState(nextProps, nextContext);
	
	    var shouldUpdate =
	      this._pendingForceUpdate ||
	      !inst.shouldComponentUpdate ||
	      inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        typeof shouldUpdate !== 'undefined',
	        '%s.shouldComponentUpdate(): Returned undefined instead of a ' +
	        'boolean value. Make sure to return true or false.',
	        this.getName() || 'ReactCompositeComponent'
	      ) : null);
	    }
	
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(
	        nextParentElement,
	        nextProps,
	        nextState,
	        nextContext,
	        transaction,
	        nextUnmaskedContext
	      );
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },
	
	  _processPendingState: function(props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;
	
	    if (!queue) {
	      return inst.state;
	    }
	
	    if (replace && queue.length === 1) {
	      return queue[0];
	    }
	
	    var nextState = assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      assign(
	        nextState,
	        typeof partial === 'function' ?
	          partial.call(inst, nextState, props, context) :
	          partial
	      );
	    }
	
	    return nextState;
	  },
	
	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function(
	    nextElement,
	    nextProps,
	    nextState,
	    nextContext,
	    transaction,
	    unmaskedContext
	  ) {
	    var inst = this._instance;
	
	    var prevProps = inst.props;
	    var prevState = inst.state;
	    var prevContext = inst.context;
	
	    if (inst.componentWillUpdate) {
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	    }
	
	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;
	
	    this._updateRenderedComponent(transaction, unmaskedContext);
	
	    if (inst.componentDidUpdate) {
	      transaction.getReactMountReady().enqueue(
	        inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext),
	        inst
	      );
	    }
	  },
	
	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function(transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var childContext = this._getValidatedChildContext();
	    var nextRenderedElement = this._renderValidatedComponent(childContext);
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(
	        prevComponentInstance,
	        nextRenderedElement,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	    } else {
	      // These two IDs are actually the same! But nothing should rely on that.
	      var thisID = this._rootNodeID;
	      var prevComponentID = prevComponentInstance._rootNodeID;
	      ReactReconciler.unmountComponent(prevComponentInstance);
	
	      this._renderedComponent = this._instantiateReactComponent(
	        nextRenderedElement,
	        this._currentElement.type
	      );
	      var nextMarkup = ReactReconciler.mountComponent(
	        this._renderedComponent,
	        thisID,
	        transaction,
	        this._mergeChildContext(context, childContext)
	      );
	      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);
	    }
	  },
	
	  /**
	   * @protected
	   */
	  _replaceNodeWithMarkupByID: function(prevComponentID, nextMarkup) {
	    ReactComponentEnvironment.replaceNodeWithMarkupByID(
	      prevComponentID,
	      nextMarkup
	    );
	  },
	
	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function() {
	    var inst = this._instance;
	    var renderedComponent = inst.render();
	    if ("production" !== process.env.NODE_ENV) {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (typeof renderedComponent === 'undefined' &&
	          inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }
	
	    return renderedComponent;
	  },
	
	  /**
	   * @private
	   */
	  _renderValidatedComponent: function(childContext) {
	    var renderedComponent;
	    var previousContext = ReactContext.current;
	    ReactContext.current = this._mergeChildContext(
	      this._currentElement._context,
	      childContext
	    );
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent =
	        this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactContext.current = previousContext;
	      ReactCurrentOwner.current = null;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      // TODO: An `isValidNode` function would probably be more appropriate
	      renderedComponent === null || renderedComponent === false ||
	      ReactElement.isValidElement(renderedComponent),
	      '%s.render(): A valid ReactComponent must be returned. You may have ' +
	        'returned undefined, an array or some other invalid object.',
	      this.getName() || 'ReactCompositeComponent'
	    ) : invariant(// TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false ||
	    ReactElement.isValidElement(renderedComponent)));
	    return renderedComponent;
	  },
	
	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function(ref, component) {
	    var inst = this.getPublicInstance();
	    var refs = inst.refs === emptyObject ? (inst.refs = {}) : inst.refs;
	    refs[ref] = component.getPublicInstance();
	  },
	
	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function(ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },
	
	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function() {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return (
	      type.displayName || (constructor && constructor.displayName) ||
	      type.name || (constructor && constructor.name) ||
	      null
	    );
	  },
	
	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by React.render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function() {
	    return this._instance;
	  },
	
	  // Stub
	  _instantiateReactComponent: null
	
	};
	
	ReactPerf.measureMethods(
	  ReactCompositeComponentMixin,
	  'ReactCompositeComponent',
	  {
	    mountComponent: 'mountComponent',
	    updateComponent: 'updateComponent',
	    _renderValidatedComponent: '_renderValidatedComponent'
	  }
	);
	
	var ReactCompositeComponent = {
	
	  Mixin: ReactCompositeComponentMixin
	
	};
	
	module.exports = ReactCompositeComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */
	
	'use strict';
	
	var invariant = __webpack_require__(12);
	
	var injected = false;
	
	var ReactComponentEnvironment = {
	
	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,
	
	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkupByID: null,
	
	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,
	
	  injection: {
	    injectEnvironment: function(environment) {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        !injected,
	        'ReactCompositeComponent: injectEnvironment() can only be called once.'
	      ) : invariant(!injected));
	      ReactComponentEnvironment.unmountIDFromEnvironment =
	        environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkupByID =
	        environment.replaceNodeWithMarkupByID;
	      ReactComponentEnvironment.processChildrenUpdates =
	        environment.processChildrenUpdates;
	      injected = true;
	    }
	  }
	
	};
	
	module.exports = ReactComponentEnvironment;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var warning = __webpack_require__(20);
	
	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */
	function shouldUpdateReactComponent(prevElement, nextElement) {
	  if (prevElement != null && nextElement != null) {
	    var prevType = typeof prevElement;
	    var nextType = typeof nextElement;
	    if (prevType === 'string' || prevType === 'number') {
	      return (nextType === 'string' || nextType === 'number');
	    } else {
	      if (nextType === 'object' &&
	          prevElement.type === nextElement.type &&
	          prevElement.key === nextElement.key) {
	        var ownersMatch = prevElement._owner === nextElement._owner;
	        var prevName = null;
	        var nextName = null;
	        var nextDisplayName = null;
	        if ("production" !== process.env.NODE_ENV) {
	          if (!ownersMatch) {
	            if (prevElement._owner != null &&
	                prevElement._owner.getPublicInstance() != null &&
	                prevElement._owner.getPublicInstance().constructor != null) {
	              prevName =
	                prevElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement._owner != null &&
	                nextElement._owner.getPublicInstance() != null &&
	                nextElement._owner.getPublicInstance().constructor != null) {
	              nextName =
	                nextElement._owner.getPublicInstance().constructor.displayName;
	            }
	            if (nextElement.type != null &&
	                nextElement.type.displayName != null) {
	              nextDisplayName = nextElement.type.displayName;
	            }
	            if (nextElement.type != null && typeof nextElement.type === 'string') {
	              nextDisplayName = nextElement.type;
	            }
	            if (typeof nextElement.type !== 'string' ||
	                nextElement.type === 'input' ||
	                nextElement.type === 'textarea') {
	              if ((prevElement._owner != null &&
	                  prevElement._owner._isOwnerNecessary === false) ||
	                  (nextElement._owner != null &&
	                  nextElement._owner._isOwnerNecessary === false)) {
	                if (prevElement._owner != null) {
	                  prevElement._owner._isOwnerNecessary = true;
	                }
	                if (nextElement._owner != null) {
	                  nextElement._owner._isOwnerNecessary = true;
	                }
	                ("production" !== process.env.NODE_ENV ? warning(
	                  false,
	                  '<%s /> is being rendered by both %s and %s using the same ' +
	                  'key (%s) in the same place. Currently, this means that ' +
	                  'they don\'t preserve state. This behavior should be very ' +
	                  'rare so we\'re considering deprecating it. Please contact ' +
	                  'the React team and explain your use case so that we can ' +
	                  'take that into consideration.',
	                  nextDisplayName || 'Unknown Component',
	                  prevName || '[Unknown]',
	                  nextName || '[Unknown]',
	                  prevElement.key
	                ) : null);
	              }
	            }
	          }
	        }
	        return ownersMatch;
	      }
	    }
	  }
	  return false;
	}
	
	module.exports = shouldUpdateReactComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 * @typechecks static-only
	 */
	
	/* global hasOwnProperty:true */
	
	'use strict';
	
	var CSSPropertyOperations = __webpack_require__(54);
	var DOMProperty = __webpack_require__(49);
	var DOMPropertyOperations = __webpack_require__(48);
	var ReactBrowserEventEmitter = __webpack_require__(73);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(52);
	var ReactMount = __webpack_require__(72);
	var ReactMultiChild = __webpack_require__(93);
	var ReactPerf = __webpack_require__(33);
	
	var assign = __webpack_require__(18);
	var escapeTextContentForBrowser = __webpack_require__(51);
	var invariant = __webpack_require__(12);
	var isEventSupported = __webpack_require__(80);
	var keyOf = __webpack_require__(44);
	var warning = __webpack_require__(20);
	
	var deleteListener = ReactBrowserEventEmitter.deleteListener;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;
	
	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = {'string': true, 'number': true};
	
	var STYLE = keyOf({style: null});
	
	var ELEMENT_NODE_TYPE = 1;
	
	/**
	 * Optionally injectable operations for mutating the DOM
	 */
	var BackendIDOperations = null;
	
	/**
	 * @param {?object} props
	 */
	function assertValidProps(props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (props.dangerouslySetInnerHTML != null) {
	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.children == null,
	      'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
	    ) : invariant(props.children == null));
	    ("production" !== process.env.NODE_ENV ? invariant(
	      typeof props.dangerouslySetInnerHTML === 'object' &&
	      '__html' in props.dangerouslySetInnerHTML,
	      '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' +
	      'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' +
	      'for more information.'
	    ) : invariant(typeof props.dangerouslySetInnerHTML === 'object' &&
	    '__html' in props.dangerouslySetInnerHTML));
	  }
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      props.innerHTML == null,
	      'Directly setting property `innerHTML` is not permitted. ' +
	      'For more information, lookup documentation on `dangerouslySetInnerHTML`.'
	    ) : null);
	    ("production" !== process.env.NODE_ENV ? warning(
	      !props.contentEditable || props.children == null,
	      'A component is `contentEditable` and contains `children` managed by ' +
	      'React. It is now your responsibility to guarantee that none of ' +
	      'those nodes are unexpectedly modified or duplicated. This is ' +
	      'probably not intentional.'
	    ) : null);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    props.style == null || typeof props.style === 'object',
	    'The `style` prop expects a mapping from style properties to values, ' +
	    'not a string. For example, style={{marginRight: spacing + \'em\'}} when ' +
	    'using JSX.'
	  ) : invariant(props.style == null || typeof props.style === 'object'));
	}
	
	function putListener(id, registrationName, listener, transaction) {
	  if ("production" !== process.env.NODE_ENV) {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    ("production" !== process.env.NODE_ENV ? warning(
	      registrationName !== 'onScroll' || isEventSupported('scroll', true),
	      'This browser doesn\'t support the `onScroll` event'
	    ) : null);
	  }
	  var container = ReactMount.findReactContainerForID(id);
	  if (container) {
	    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
	      container.ownerDocument :
	      container;
	    listenTo(registrationName, doc);
	  }
	  transaction.getPutListenerQueue().enqueuePutListener(
	    id,
	    registrationName,
	    listener
	  );
	}
	
	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special cased tags.
	
	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	  // NOTE: menuitem's close tag should be omitted, but that causes problems.
	};
	
	// We accept any tag to be rendered but since this gets injected into abitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name
	
	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;
	
	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    ("production" !== process.env.NODE_ENV ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
	    validatedTagCache[tag] = true;
	  }
	}
	
	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(tag) {
	  validateDangerousTag(tag);
	  this._tag = tag;
	  this._renderedChildren = null;
	  this._previousStyleCopy = null;
	  this._rootNodeID = null;
	}
	
	ReactDOMComponent.displayName = 'ReactDOMComponent';
	
	ReactDOMComponent.Mixin = {
	
	  construct: function(element) {
	    this._currentElement = element;
	  },
	
	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {string} rootID The root DOM ID for this node.
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} The computed markup.
	   */
	  mountComponent: function(rootID, transaction, context) {
	    this._rootNodeID = rootID;
	    assertValidProps(this._currentElement.props);
	    var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
	    return (
	      this._createOpenTagMarkupAndPutListeners(transaction) +
	      this._createContentMarkup(transaction, context) +
	      closeTag
	    );
	  },
	
	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function(transaction) {
	    var props = this._currentElement.props;
	    var ret = '<' + this._tag;
	
	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, propValue, transaction);
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            propValue = this._previousStyleCopy = assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
	        }
	        var markup =
	          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }
	
	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret + '>';
	    }
	
	    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
	    return ret + ' ' + markupForID + '>';
	  },
	
	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function(transaction, context) {
	    var prefix = '';
	    if (this._tag === 'listing' ||
	        this._tag === 'pre' ||
	        this._tag === 'textarea') {
	      // Add an initial newline because browsers ignore the first newline in
	      // a <listing>, <pre>, or <textarea> as an "authoring convenience" -- see
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody.
	      prefix = '\n';
	    }
	
	    var props = this._currentElement.props;
	
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        return prefix + innerHTML.__html;
	      }
	    } else {
	      var contentToUse =
	        CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        return prefix + escapeTextContentForBrowser(contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(
	          childrenToUse,
	          transaction,
	          context
	        );
	        return prefix + mountImages.join('');
	      }
	    }
	    return prefix;
	  },
	
	  receiveComponent: function(nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },
	
	  /**
	   * Updates a native DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function(transaction, prevElement, nextElement, context) {
	    assertValidProps(this._currentElement.props);
	    this._updateDOMProperties(prevElement.props, transaction);
	    this._updateDOMChildren(prevElement.props, transaction, context);
	  },
	
	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMProperties: function(lastProps, transaction) {
	    var nextProps = this._currentElement.props;
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) ||
	         !lastProps.hasOwnProperty(propKey)) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        deleteListener(this._rootNodeID, propKey);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.deletePropertyByID(
	          this._rootNodeID,
	          propKey
	        );
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ?
	        this._previousStyleCopy :
	        lastProps[propKey];
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          nextProp = this._previousStyleCopy = assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) &&
	                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) &&
	                lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        putListener(this._rootNodeID, propKey, nextProp, transaction);
	      } else if (
	          DOMProperty.isStandardName[propKey] ||
	          DOMProperty.isCustomAttribute(propKey)) {
	        BackendIDOperations.updatePropertyByID(
	          this._rootNodeID,
	          propKey,
	          nextProp
	        );
	      }
	    }
	    if (styleUpdates) {
	      BackendIDOperations.updateStylesByID(
	        this._rootNodeID,
	        styleUpdates
	      );
	    }
	  },
	
	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {ReactReconcileTransaction} transaction
	   */
	  _updateDOMChildren: function(lastProps, transaction, context) {
	    var nextProps = this._currentElement.props;
	
	    var lastContent =
	      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent =
	      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;
	
	    var lastHtml =
	      lastProps.dangerouslySetInnerHTML &&
	      lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml =
	      nextProps.dangerouslySetInnerHTML &&
	      nextProps.dangerouslySetInnerHTML.__html;
	
	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;
	
	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	    }
	
	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        BackendIDOperations.updateInnerHTMLByID(
	          this._rootNodeID,
	          nextHtml
	        );
	      }
	    } else if (nextChildren != null) {
	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },
	
	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function() {
	    this.unmountChildren();
	    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	  }
	
	};
	
	ReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {
	  mountComponent: 'mountComponent',
	  updateComponent: 'updateComponent'
	});
	
	assign(
	  ReactDOMComponent.prototype,
	  ReactDOMComponent.Mixin,
	  ReactMultiChild.Mixin
	);
	
	ReactDOMComponent.injection = {
	  injectIDOperations: function(IDOperations) {
	    ReactDOMComponent.BackendIDOperations = BackendIDOperations = IDOperations;
	  }
	};
	
	module.exports = ReactDOMComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactComponentEnvironment = __webpack_require__(90);
	var ReactMultiChildUpdateTypes = __webpack_require__(69);
	
	var ReactReconciler = __webpack_require__(34);
	var ReactChildReconciler = __webpack_require__(94);
	
	/**
	 * Updating children of a component may trigger recursive updates. The depth is
	 * used to batch recursive updates to render markup more efficiently.
	 *
	 * @type {number}
	 * @private
	 */
	var updateDepth = 0;
	
	/**
	 * Queue of update configuration objects.
	 *
	 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
	 *
	 * @type {array<object>}
	 * @private
	 */
	var updateQueue = [];
	
	/**
	 * Queue of markup to be rendered.
	 *
	 * @type {array<string>}
	 * @private
	 */
	var markupQueue = [];
	
	/**
	 * Enqueues markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function enqueueMarkup(parentID, markup, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    markupIndex: markupQueue.push(markup) - 1,
	    textContent: null,
	    fromIndex: null,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues moving an existing element to another index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function enqueueMove(parentID, fromIndex, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: toIndex
	  });
	}
	
	/**
	 * Enqueues removing an element at an index.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function enqueueRemove(parentID, fromIndex) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    markupIndex: null,
	    textContent: null,
	    fromIndex: fromIndex,
	    toIndex: null
	  });
	}
	
	/**
	 * Enqueues setting the text content.
	 *
	 * @param {string} parentID ID of the parent component.
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function enqueueTextContent(parentID, textContent) {
	  // NOTE: Null values reduce hidden classes.
	  updateQueue.push({
	    parentID: parentID,
	    parentNode: null,
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    markupIndex: null,
	    textContent: textContent,
	    fromIndex: null,
	    toIndex: null
	  });
	}
	
	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue() {
	  if (updateQueue.length) {
	    ReactComponentEnvironment.processChildrenUpdates(
	      updateQueue,
	      markupQueue
	    );
	    clearQueue();
	  }
	}
	
	/**
	 * Clears any enqueued updates.
	 *
	 * @private
	 */
	function clearQueue() {
	  updateQueue.length = 0;
	  markupQueue.length = 0;
	}
	
	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {
	
	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {
	
	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function(nestedChildren, transaction, context) {
	      var children = ReactChildReconciler.instantiateChildren(
	        nestedChildren, transaction, context
	      );
	      this._renderedChildren = children;
	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	          var rootID = this._rootNodeID + name;
	          var mountImage = ReactReconciler.mountComponent(
	            child,
	            rootID,
	            transaction,
	            context
	          );
	          child._mountIndex = index;
	          mountImages.push(mountImage);
	          index++;
	        }
	      }
	      return mountImages;
	    },
	
	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function(nextContent) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        var prevChildren = this._renderedChildren;
	        // Remove any rendered children.
	        ReactChildReconciler.unmountChildren(prevChildren);
	        // TODO: The setTextContent operation should be enough
	        for (var name in prevChildren) {
	          if (prevChildren.hasOwnProperty(name)) {
	            this._unmountChildByName(prevChildren[name], name);
	          }
	        }
	        // Set new text content.
	        this.setTextContent(nextContent);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	      }
	    },
	
	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function(nextNestedChildren, transaction, context) {
	      updateDepth++;
	      var errorThrown = true;
	      try {
	        this._updateChildren(nextNestedChildren, transaction, context);
	        errorThrown = false;
	      } finally {
	        updateDepth--;
	        if (!updateDepth) {
	          if (errorThrown) {
	            clearQueue();
	          } else {
	            processQueue();
	          }
	        }
	
	      }
	    },
	
	    /**
	     * Improve performance by isolating this hot code path from the try/catch
	     * block in `updateChildren`.
	     *
	     * @param {?object} nextNestedChildren Nested child maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function(nextNestedChildren, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var nextChildren = ReactChildReconciler.updateChildren(
	        prevChildren, nextNestedChildren, transaction, context
	      );
	      this._renderedChildren = nextChildren;
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          this.moveChild(prevChild, nextIndex, lastIndex);
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            this._unmountChildByName(prevChild, name);
	          }
	          // The child must be instantiated before it's mounted.
	          this._mountChildByNameAtIndex(
	            nextChild, name, nextIndex, transaction, context
	          );
	        }
	        nextIndex++;
	      }
	      // Remove children that are no longer present.
	      for (name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name) &&
	            !(nextChildren && nextChildren.hasOwnProperty(name))) {
	          this._unmountChildByName(prevChildren[name], name);
	        }
	      }
	    },
	
	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted.
	     *
	     * @internal
	     */
	    unmountChildren: function() {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren);
	      this._renderedChildren = null;
	    },
	
	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function(child, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
	      }
	    },
	
	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function(child, mountImage) {
	      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
	    },
	
	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function(child) {
	      enqueueRemove(this._rootNodeID, child._mountIndex);
	    },
	
	    /**
	     * Sets this text content string.
	     *
	     * @param {string} textContent Text content to set.
	     * @protected
	     */
	    setTextContent: function(textContent) {
	      enqueueTextContent(this._rootNodeID, textContent);
	    },
	
	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildByNameAtIndex: function(
	      child,
	      name,
	      index,
	      transaction,
	      context) {
	      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
	      var rootID = this._rootNodeID + name;
	      var mountImage = ReactReconciler.mountComponent(
	        child,
	        rootID,
	        transaction,
	        context
	      );
	      child._mountIndex = index;
	      this.createChild(child, mountImage);
	    },
	
	    /**
	     * Unmounts a rendered child by name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @param {string} name Name of the child in `this._renderedChildren`.
	     * @private
	     */
	    _unmountChildByName: function(child, name) {
	      this.removeChild(child);
	      child._mountIndex = null;
	    }
	
	  }
	
	};
	
	module.exports = ReactMultiChild;


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactReconciler = __webpack_require__(34);
	
	var flattenChildren = __webpack_require__(95);
	var instantiateReactComponent = __webpack_require__(88);
	var shouldUpdateReactComponent = __webpack_require__(91);
	
	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function(nestedChildNodes, transaction, context) {
	    var children = flattenChildren(nestedChildNodes);
	    for (var name in children) {
	      if (children.hasOwnProperty(name)) {
	        var child = children[name];
	        // The rendered children must be turned into instances as they're
	        // mounted.
	        var childInstance = instantiateReactComponent(child, null);
	        children[name] = childInstance;
	      }
	    }
	    return children;
	  },
	
	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextNestedChildNodes Nested child maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function(
	    prevChildren,
	    nextNestedChildNodes,
	    transaction,
	    context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    var nextChildren = flattenChildren(nextNestedChildNodes);
	    if (!nextChildren && !prevChildren) {
	      return null;
	    }
	    var name;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      var prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(
	          prevChild, nextElement, transaction, context
	        );
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          ReactReconciler.unmountComponent(prevChild, name);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(
	          nextElement,
	          null
	        );
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) &&
	          !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        ReactReconciler.unmountComponent(prevChildren[name]);
	      }
	    }
	    return nextChildren;
	  },
	
	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function(renderedChildren) {
	    for (var name in renderedChildren) {
	      var renderedChild = renderedChildren[name];
	      ReactReconciler.unmountComponent(renderedChild);
	    }
	  }
	
	};
	
	module.exports = ReactChildReconciler;


/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 */
	
	'use strict';
	
	var traverseAllChildren = __webpack_require__(23);
	var warning = __webpack_require__(20);
	
	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name) {
	  // We found a component instance.
	  var result = traverseContext;
	  var keyUnique = !result.hasOwnProperty(name);
	  if ("production" !== process.env.NODE_ENV) {
	    ("production" !== process.env.NODE_ENV ? warning(
	      keyUnique,
	      'flattenChildren(...): Encountered two children with the same key, ' +
	      '`%s`. Child keys must be unique; when two children share a key, only ' +
	      'the first child will be used.',
	      name
	    ) : null);
	  }
	  if (keyUnique && child != null) {
	    result[name] = child;
	  }
	}
	
	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};
	  traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  return result;
	}
	
	module.exports = flattenChildren;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */
	
	'use strict';
	
	var BeforeInputEventPlugin = __webpack_require__(97);
	var ChangeEventPlugin = __webpack_require__(105);
	var ClientReactRootIndex = __webpack_require__(107);
	var DefaultEventPluginOrder = __webpack_require__(108);
	var EnterLeaveEventPlugin = __webpack_require__(109);
	var ExecutionEnvironment = __webpack_require__(56);
	var HTMLDOMPropertyConfig = __webpack_require__(113);
	var MobileSafariClickEventPlugin = __webpack_require__(114);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactComponentBrowserEnvironment =
	  __webpack_require__(52);
	var ReactDefaultBatchingStrategy = __webpack_require__(117);
	var ReactDOMComponent = __webpack_require__(92);
	var ReactDOMButton = __webpack_require__(118);
	var ReactDOMForm = __webpack_require__(121);
	var ReactDOMImg = __webpack_require__(123);
	var ReactDOMIDOperations = __webpack_require__(53);
	var ReactDOMIframe = __webpack_require__(124);
	var ReactDOMInput = __webpack_require__(125);
	var ReactDOMOption = __webpack_require__(128);
	var ReactDOMSelect = __webpack_require__(129);
	var ReactDOMTextarea = __webpack_require__(130);
	var ReactDOMTextComponent = __webpack_require__(47);
	var ReactElement = __webpack_require__(16);
	var ReactEventListener = __webpack_require__(131);
	var ReactInjection = __webpack_require__(134);
	var ReactInstanceHandles = __webpack_require__(24);
	var ReactMount = __webpack_require__(72);
	var ReactReconcileTransaction = __webpack_require__(135);
	var SelectEventPlugin = __webpack_require__(141);
	var ServerReactRootIndex = __webpack_require__(143);
	var SimpleEventPlugin = __webpack_require__(144);
	var SVGDOMPropertyConfig = __webpack_require__(153);
	
	var createFullPageComponent = __webpack_require__(154);
	
	function autoGenerateWrapperClass(type) {
	  return ReactClass.createClass({
	    tagName: type.toUpperCase(),
	    render: function() {
	      return new ReactElement(
	        type,
	        null,
	        null,
	        null,
	        null,
	        this.props
	      );
	    }
	  });
	}
	
	function inject() {
	  ReactInjection.EventEmitter.injectReactEventListener(
	    ReactEventListener
	  );
	
	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
	  ReactInjection.EventPluginHub.injectMount(ReactMount);
	
	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });
	
	  ReactInjection.NativeComponent.injectGenericComponentClass(
	    ReactDOMComponent
	  );
	
	  ReactInjection.NativeComponent.injectTextComponentClass(
	    ReactDOMTextComponent
	  );
	
	  ReactInjection.NativeComponent.injectAutoWrapper(
	    autoGenerateWrapperClass
	  );
	
	  // This needs to happen before createFullPageComponent() otherwise the mixin
	  // won't be included.
	  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);
	
	  ReactInjection.NativeComponent.injectComponentClasses({
	    'button': ReactDOMButton,
	    'form': ReactDOMForm,
	    'iframe': ReactDOMIframe,
	    'img': ReactDOMImg,
	    'input': ReactDOMInput,
	    'option': ReactDOMOption,
	    'select': ReactDOMSelect,
	    'textarea': ReactDOMTextarea,
	
	    'html': createFullPageComponent('html'),
	    'head': createFullPageComponent('head'),
	    'body': createFullPageComponent('body')
	  });
	
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);
	
	  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');
	
	  ReactInjection.Updates.injectReconcileTransaction(
	    ReactReconcileTransaction
	  );
	  ReactInjection.Updates.injectBatchingStrategy(
	    ReactDefaultBatchingStrategy
	  );
	
	  ReactInjection.RootIndex.injectCreateReactRootIndex(
	    ExecutionEnvironment.canUseDOM ?
	      ClientReactRootIndex.createReactRootIndex :
	      ServerReactRootIndex.createReactRootIndex
	  );
	
	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	  ReactInjection.DOMComponent.injectIDOperations(ReactDOMIDOperations);
	
	  if ("production" !== process.env.NODE_ENV) {
	    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
	    if ((/[?&]react_perf\b/).test(url)) {
	      var ReactDefaultPerf = __webpack_require__(155);
	      ReactDefaultPerf.start();
	    }
	  }
	}
	
	module.exports = {
	  inject: inject
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015 Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPropagators = __webpack_require__(98);
	var ExecutionEnvironment = __webpack_require__(56);
	var FallbackCompositionState = __webpack_require__(99);
	var SyntheticCompositionEvent = __webpack_require__(101);
	var SyntheticInputEvent = __webpack_require__(104);
	
	var keyOf = __webpack_require__(44);
	
	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;
	
	var canUseCompositionEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'CompositionEvent' in window
	);
	
	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}
	
	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = (
	  ExecutionEnvironment.canUseDOM &&
	  'TextEvent' in window &&
	  !documentMode &&
	  !isPresto()
	);
	
	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = (
	  ExecutionEnvironment.canUseDOM &&
	  (
	    (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11)
	  )
	);
	
	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return (
	    typeof opera === 'object' &&
	    typeof opera.version === 'function' &&
	    parseInt(opera.version(), 10) <= 12
	  );
	}
	
	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBeforeInput: null}),
	      captured: keyOf({onBeforeInputCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topTextInput,
	      topLevelTypes.topPaste
	    ]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionEnd: null}),
	      captured: keyOf({onCompositionEndCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionEnd,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionStart: null}),
	      captured: keyOf({onCompositionStartCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionStart,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCompositionUpdate: null}),
	      captured: keyOf({onCompositionUpdateCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topCompositionUpdate,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyPress,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topMouseDown
	    ]
	  }
	};
	
	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;
	
	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (
	    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	    !(nativeEvent.ctrlKey && nativeEvent.altKey)
	  );
	}
	
	
	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}
	
	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return (
	    topLevelType === topLevelTypes.topKeyDown &&
	    nativeEvent.keyCode === START_KEYCODE
	  );
	}
	
	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return (nativeEvent.keyCode !== START_KEYCODE);
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}
	
	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}
	
	// Track the current IME composition fallback object, if any.
	var currentComposition = null;
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var eventType;
	  var fallbackData;
	
	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }
	
	  if (!eventType) {
	    return null;
	  }
	
	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }
	
	  var event = SyntheticCompositionEvent.getPooled(
	    eventType,
	    topLevelTargetID,
	    nativeEvent
	  );
	
	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }
	
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }
	
	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;
	
	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;
	
	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }
	
	      return chars;
	
	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}
	
	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (
	      topLevelType === topLevelTypes.topCompositionEnd ||
	      isFallbackCompositionEnd(topLevelType, nativeEvent)
	    ) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }
	
	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}
	
	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {DOMEventTarget} topLevelTarget The listening component root node.
	 * @param {string} topLevelTargetID ID of `topLevelTarget`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(
	  topLevelType,
	  topLevelTarget,
	  topLevelTargetID,
	  nativeEvent
	) {
	  var chars;
	
	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }
	
	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }
	
	  var event = SyntheticInputEvent.getPooled(
	    eventTypes.beforeInput,
	    topLevelTargetID,
	    nativeEvent
	  );
	
	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}
	
	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID,
	    nativeEvent
	  ) {
	    return [
	      extractCompositionEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      ),
	      extractBeforeInputEvent(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID,
	        nativeEvent
	      )
	    ];
	  }
	};
	
	module.exports = BeforeInputEventPlugin;


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPluginHub = __webpack_require__(74);
	
	var accumulateInto = __webpack_require__(76);
	var forEachAccumulated = __webpack_require__(77);
	
	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;
	
	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(id, event, propagationPhase) {
	  var registrationName =
	    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(id, registrationName);
	}
	
	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(domID, upwards, event) {
	  if ("production" !== process.env.NODE_ENV) {
	    if (!domID) {
	      throw new Error('Dispatching id must not be null');
	    }
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(domID, event, phase);
	  if (listener) {
	    event._dispatchListeners =
	      accumulateInto(event._dispatchListeners, listener);
	    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
	  }
	}
	
	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We can not perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
	      event.dispatchMarker,
	      accumulateDirectionalDispatches,
	      event
	    );
	  }
	}
	
	
	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(id, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(id, registrationName);
	    if (listener) {
	      event._dispatchListeners =
	        accumulateInto(event._dispatchListeners, listener);
	      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
	    }
	  }
	}
	
	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event.dispatchMarker, null, event);
	  }
	}
	
	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}
	
	function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
	  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
	    fromID,
	    toID,
	    accumulateDispatches,
	    leave,
	    enter
	  );
	}
	
	
	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}
	
	
	
	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};
	
	module.exports = EventPropagators;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	
	var assign = __webpack_require__(18);
	var getTextContentAccessor = __webpack_require__(100);
	
	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}
	
	assign(FallbackCompositionState.prototype, {
	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function() {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },
	
	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function() {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }
	
	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;
	
	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }
	
	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }
	
	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});
	
	PooledClass.addPoolingTo(FallbackCompositionState);
	
	module.exports = FallbackCompositionState;


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var contentKey = null;
	
	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ?
	      'textContent' :
	      'innerText';
	  }
	  return contentKey;
	}
	
	module.exports = getTextContentAccessor;


/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(102);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticEvent.augmentClass(
	  SyntheticCompositionEvent,
	  CompositionEventInterface
	);
	
	module.exports = SyntheticCompositionEvent;


/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	
	var assign = __webpack_require__(18);
	var emptyFunction = __webpack_require__(21);
	var getEventTarget = __webpack_require__(103);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: getEventTarget,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function(event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};
	
	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 */
	function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  this.dispatchConfig = dispatchConfig;
	  this.dispatchMarker = dispatchMarker;
	  this.nativeEvent = nativeEvent;
	
	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      this[propName] = nativeEvent[propName];
	    }
	  }
	
	  var defaultPrevented = nativeEvent.defaultPrevented != null ?
	    nativeEvent.defaultPrevented :
	    nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	}
	
	assign(SyntheticEvent.prototype, {
	
	  preventDefault: function() {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },
	
	  stopPropagation: function() {
	    var event = this.nativeEvent;
	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function() {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },
	
	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,
	
	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function() {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      this[propName] = null;
	    }
	    this.dispatchConfig = null;
	    this.dispatchMarker = null;
	    this.nativeEvent = null;
	  }
	
	});
	
	SyntheticEvent.Interface = EventInterface;
	
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function(Class, Interface) {
	  var Super = this;
	
	  var prototype = Object.create(Super.prototype);
	  assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;
	
	  Class.Interface = assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;
	
	  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
	};
	
	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);
	
	module.exports = SyntheticEvent;


/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */
	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;
	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}
	
	module.exports = getEventTarget;


/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(102);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(
	  dispatchConfig,
	  dispatchMarker,
	  nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticEvent.augmentClass(
	  SyntheticInputEvent,
	  InputEventInterface
	);
	
	module.exports = SyntheticInputEvent;


/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPluginHub = __webpack_require__(74);
	var EventPropagators = __webpack_require__(98);
	var ExecutionEnvironment = __webpack_require__(56);
	var ReactUpdates = __webpack_require__(31);
	var SyntheticEvent = __webpack_require__(102);
	
	var isEventSupported = __webpack_require__(80);
	var isTextInputElement = __webpack_require__(106);
	var keyOf = __webpack_require__(44);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onChange: null}),
	      captured: keyOf({onChangeCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topChange,
	      topLevelTypes.topClick,
	      topLevelTypes.topFocus,
	      topLevelTypes.topInput,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topKeyUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};
	
	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementID = null;
	var activeElementValue = null;
	var activeElementValueProp = null;
	
	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  return (
	    elem.nodeName === 'SELECT' ||
	    (elem.nodeName === 'INPUT' && elem.type === 'file')
	  );
	}
	
	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (
	    (!('documentMode' in document) || document.documentMode > 8)
	  );
	}
	
	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(
	    eventTypes.change,
	    activeElementID,
	    nativeEvent
	  );
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	
	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}
	
	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue();
	}
	
	function startWatchingForChangeEventIE8(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}
	
	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementID = null;
	}
	
	function getTargetIDForChangeEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return topLevelTargetID;
	  }
	}
	function handleEventsForChangeEventIE8(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}
	
	
	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events
	  isInputEventSupported = isEventSupported('input') && (
	    (!('documentMode' in document) || document.documentMode > 9)
	  );
	}
	
	/**
	 * (For old IE.) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp =  {
	  get: function() {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function(val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};
	
	/**
	 * (For old IE.) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetID) {
	  activeElement = target;
	  activeElementID = targetID;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(
	    target.constructor.prototype,
	    'value'
	  );
	
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  activeElement.attachEvent('onpropertychange', handlePropertyChange);
	}
	
	/**
	 * (For old IE.) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }
	
	  // delete restores the original property definition
	  delete activeElement.value;
	  activeElement.detachEvent('onpropertychange', handlePropertyChange);
	
	  activeElement = null;
	  activeElementID = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}
	
	/**
	 * (For old IE.) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;
	
	  manualDispatchChangeEvent(nativeEvent);
	}
	
	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetIDForInputEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return topLevelTargetID;
	  }
	}
	
	// For IE8 and IE9.
	function handleEventsForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}
	
	// For IE8 and IE9.
	function getTargetIDForInputEventIE(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topSelectionChange ||
	      topLevelType === topLevelTypes.topKeyUp ||
	      topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementID;
	    }
	  }
	}
	
	
	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return (
	    elem.nodeName === 'INPUT' &&
	    (elem.type === 'checkbox' || elem.type === 'radio')
	  );
	}
	
	function getTargetIDForClickEvent(
	    topLevelType,
	    topLevelTarget,
	    topLevelTargetID) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return topLevelTargetID;
	  }
	}
	
	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	
	    var getTargetIDFunc, handleEventFunc;
	    if (shouldUseChangeEvent(topLevelTarget)) {
	      if (doesChangeEventBubble) {
	        getTargetIDFunc = getTargetIDForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(topLevelTarget)) {
	      if (isInputEventSupported) {
	        getTargetIDFunc = getTargetIDForInputEvent;
	      } else {
	        getTargetIDFunc = getTargetIDForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(topLevelTarget)) {
	      getTargetIDFunc = getTargetIDForClickEvent;
	    }
	
	    if (getTargetIDFunc) {
	      var targetID = getTargetIDFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	      if (targetID) {
	        var event = SyntheticEvent.getPooled(
	          eventTypes.change,
	          targetID,
	          nativeEvent
	        );
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }
	
	    if (handleEventFunc) {
	      handleEventFunc(
	        topLevelType,
	        topLevelTarget,
	        topLevelTargetID
	      );
	    }
	  }
	
	};
	
	module.exports = ChangeEventPlugin;


/***/ },
/* 106 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 */
	
	'use strict';
	
	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */
	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};
	
	function isTextInputElement(elem) {
	  return elem && (
	    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type] || elem.nodeName === 'TEXTAREA')
	  );
	}
	
	module.exports = isTextInputElement;


/***/ },
/* 107 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ClientReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	var nextReactRootIndex = 0;
	
	var ClientReactRootIndex = {
	  createReactRootIndex: function() {
	    return nextReactRootIndex++;
	  }
	};
	
	module.exports = ClientReactRootIndex;


/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */
	
	'use strict';
	
	var keyOf = __webpack_require__(44);
	
	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [
	  keyOf({ResponderEventPlugin: null}),
	  keyOf({SimpleEventPlugin: null}),
	  keyOf({TapEventPlugin: null}),
	  keyOf({EnterLeaveEventPlugin: null}),
	  keyOf({ChangeEventPlugin: null}),
	  keyOf({SelectEventPlugin: null}),
	  keyOf({BeforeInputEventPlugin: null}),
	  keyOf({AnalyticsEventPlugin: null}),
	  keyOf({MobileSafariClickEventPlugin: null})
	];
	
	module.exports = DefaultEventPluginOrder;


/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPropagators = __webpack_require__(98);
	var SyntheticMouseEvent = __webpack_require__(110);
	
	var ReactMount = __webpack_require__(72);
	var keyOf = __webpack_require__(44);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	var getFirstReactDOM = ReactMount.getFirstReactDOM;
	
	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({onMouseEnter: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  },
	  mouseLeave: {
	    registrationName: keyOf({onMouseLeave: null}),
	    dependencies: [
	      topLevelTypes.topMouseOut,
	      topLevelTypes.topMouseOver
	    ]
	  }
	};
	
	var extractedEvents = [null, null];
	
	var EnterLeaveEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topMouseOver &&
	        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut &&
	        topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }
	
	    var win;
	    if (topLevelTarget.window === topLevelTarget) {
	      // `topLevelTarget` is probably a window object.
	      win = topLevelTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = topLevelTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }
	
	    var from, to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = topLevelTarget;
	      to =
	        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
	        win;
	    } else {
	      from = win;
	      to = topLevelTarget;
	    }
	
	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }
	
	    var fromID = from ? ReactMount.getID(from) : '';
	    var toID = to ? ReactMount.getID(to) : '';
	
	    var leave = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseLeave,
	      fromID,
	      nativeEvent
	    );
	    leave.type = 'mouseleave';
	    leave.target = from;
	    leave.relatedTarget = to;
	
	    var enter = SyntheticMouseEvent.getPooled(
	      eventTypes.mouseEnter,
	      toID,
	      nativeEvent
	    );
	    enter.type = 'mouseenter';
	    enter.target = to;
	    enter.relatedTarget = from;
	
	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);
	
	    extractedEvents[0] = leave;
	    extractedEvents[1] = enter;
	
	    return extractedEvents;
	  }
	
	};
	
	module.exports = EnterLeaveEventPlugin;


/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(111);
	var ViewportMetrics = __webpack_require__(79);
	
	var getEventModifierState = __webpack_require__(112);
	
	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function(event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function(event) {
	    return event.relatedTarget || (
	      ((event.fromElement === event.srcElement ? event.toElement : event.fromElement))
	    );
	  },
	  // "Proprietary" Interface.
	  pageX: function(event) {
	    return 'pageX' in event ?
	      event.pageX :
	      event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function(event) {
	    return 'pageY' in event ?
	      event.pageY :
	      event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);
	
	module.exports = SyntheticMouseEvent;


/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(102);
	
	var getEventTarget = __webpack_require__(103);
	
	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function(event) {
	    if (event.view) {
	      return event.view;
	    }
	
	    var target = getEventTarget(event);
	    if (target != null && target.window === target) {
	      // target is a window object
	      return target;
	    }
	
	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function(event) {
	    return event.detail || 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);
	
	module.exports = SyntheticUIEvent;


/***/ },
/* 112 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */
	
	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};
	
	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  /*jshint validthis:true */
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}
	
	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}
	
	module.exports = getEventModifierState;


/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */
	
	/*jslint bitwise: true*/
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var ExecutionEnvironment = __webpack_require__(56);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE =
	  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE =
	  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
	
	var hasSVG;
	if (ExecutionEnvironment.canUseDOM) {
	  var implementation = document.implementation;
	  hasSVG = (
	    implementation &&
	    implementation.hasFeature &&
	    implementation.hasFeature(
	      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
	      '1.1'
	    )
	  );
	}
	
	
	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(
	    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
	  ),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: null,
	    acceptCharset: null,
	    accessKey: null,
	    action: null,
	    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    allowTransparency: MUST_USE_ATTRIBUTE,
	    alt: null,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: null,
	    // autoFocus is polyfilled/normalized by AutoFocusMixin
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    cellPadding: null,
	    cellSpacing: null,
	    charSet: MUST_USE_ATTRIBUTE,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    classID: MUST_USE_ATTRIBUTE,
	    // To set className on SVG elements, it's necessary to use .setAttribute;
	    // this works on HTML elements too in all browsers except IE8. Conveniently,
	    // IE8 doesn't support SVG and so we can simply use the attribute in
	    // browsers that support SVG and the property in browsers that don't,
	    // regardless of whether the element is HTML or SVG.
	    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
	    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: null,
	    content: null,
	    contentEditable: null,
	    contextMenu: MUST_USE_ATTRIBUTE,
	    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    coords: null,
	    crossOrigin: null,
	    data: null, // For `<object />` acts as `src`.
	    dateTime: MUST_USE_ATTRIBUTE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: null,
	    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: null,
	    encType: null,
	    form: MUST_USE_ATTRIBUTE,
	    formAction: MUST_USE_ATTRIBUTE,
	    formEncType: MUST_USE_ATTRIBUTE,
	    formMethod: MUST_USE_ATTRIBUTE,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: MUST_USE_ATTRIBUTE,
	    frameBorder: MUST_USE_ATTRIBUTE,
	    headers: null,
	    height: MUST_USE_ATTRIBUTE,
	    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    high: null,
	    href: null,
	    hrefLang: null,
	    htmlFor: null,
	    httpEquiv: null,
	    icon: null,
	    id: MUST_USE_PROPERTY,
	    label: null,
	    lang: null,
	    list: MUST_USE_ATTRIBUTE,
	    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    low: null,
	    manifest: MUST_USE_ATTRIBUTE,
	    marginHeight: null,
	    marginWidth: null,
	    max: null,
	    maxLength: MUST_USE_ATTRIBUTE,
	    media: MUST_USE_ATTRIBUTE,
	    mediaGroup: null,
	    method: null,
	    min: null,
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: null,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: null,
	    pattern: null,
	    placeholder: null,
	    poster: null,
	    preload: null,
	    radioGroup: null,
	    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    rel: null,
	    required: HAS_BOOLEAN_VALUE,
	    role: MUST_USE_ATTRIBUTE,
	    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: null,
	    sandbox: null,
	    scope: null,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: null,
	    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: null,
	    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: MUST_USE_ATTRIBUTE,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: null,
	    src: null,
	    srcDoc: MUST_USE_PROPERTY,
	    srcSet: MUST_USE_ATTRIBUTE,
	    start: HAS_NUMERIC_VALUE,
	    step: null,
	    style: null,
	    tabIndex: null,
	    target: null,
	    title: null,
	    type: null,
	    useMap: null,
	    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
	    width: MUST_USE_ATTRIBUTE,
	    wmode: MUST_USE_ATTRIBUTE,
	
	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: null,
	    autoCorrect: null,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: MUST_USE_ATTRIBUTE,
	    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
	    itemType: MUST_USE_ATTRIBUTE,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: MUST_USE_ATTRIBUTE,
	    itemRef: MUST_USE_ATTRIBUTE,
	    // property is supported for OpenGraph in meta tags.
	    property: null,
	    // IE-only attribute that controls focus behavior
	    unselectable: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {
	    autoCapitalize: 'autocapitalize',
	    autoComplete: 'autocomplete',
	    autoCorrect: 'autocorrect',
	    autoFocus: 'autofocus',
	    autoPlay: 'autoplay',
	    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.
	    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding
	    encType: 'encoding',
	    hrefLang: 'hreflang',
	    radioGroup: 'radiogroup',
	    spellCheck: 'spellcheck',
	    srcDoc: 'srcdoc',
	    srcSet: 'srcset'
	  }
	};
	
	module.exports = HTMLDOMPropertyConfig;


/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule MobileSafariClickEventPlugin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	
	var emptyFunction = __webpack_require__(21);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	/**
	 * Mobile Safari does not fire properly bubble click events on non-interactive
	 * elements, which means delegated click listeners do not fire. The workaround
	 * for this bug involves attaching an empty click listener on the target node.
	 *
	 * This particular plugin works around the bug by attaching an empty click
	 * listener on `touchstart` (which does fire on every element).
	 */
	var MobileSafariClickEventPlugin = {
	
	  eventTypes: null,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    if (topLevelType === topLevelTypes.topTouchStart) {
	      var target = nativeEvent.target;
	      if (target && !target.onclick) {
	        target.onclick = emptyFunction;
	      }
	    }
	  }
	
	};
	
	module.exports = MobileSafariClickEventPlugin;


/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserComponentMixin
	 */
	
	'use strict';
	
	var findDOMNode = __webpack_require__(116);
	
	var ReactBrowserComponentMixin = {
	  /**
	   * Returns the DOM node rendered by this component.
	   *
	   * @return {DOMElement} The root node of this component.
	   * @final
	   * @protected
	   */
	  getDOMNode: function() {
	    return findDOMNode(this);
	  }
	};
	
	module.exports = ReactBrowserComponentMixin;


/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactCurrentOwner = __webpack_require__(22);
	var ReactInstanceMap = __webpack_require__(30);
	var ReactMount = __webpack_require__(72);
	
	var invariant = __webpack_require__(12);
	var isNode = __webpack_require__(86);
	var warning = __webpack_require__(20);
	
	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if ("production" !== process.env.NODE_ENV) {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        owner._warnedAboutRefsInRender,
	        '%s is accessing getDOMNode or findDOMNode inside its render(). ' +
	        'render() should be a pure function of props and state. It should ' +
	        'never access something that requires stale data from the previous ' +
	        'render, such as refs. Move this logic to componentDidMount and ' +
	        'componentDidUpdate instead.',
	        owner.getName() || 'A component'
	      ) : null);
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (isNode(componentOrElement)) {
	    return componentOrElement;
	  }
	  if (ReactInstanceMap.has(componentOrElement)) {
	    return ReactMount.getNodeFromInstance(componentOrElement);
	  }
	  ("production" !== process.env.NODE_ENV ? invariant(
	    componentOrElement.render == null ||
	    typeof componentOrElement.render !== 'function',
	    'Component (with keys: %s) contains `render` method ' +
	    'but is not mounted in the DOM',
	    Object.keys(componentOrElement)
	  ) : invariant(componentOrElement.render == null ||
	  typeof componentOrElement.render !== 'function'));
	  ("production" !== process.env.NODE_ENV ? invariant(
	    false,
	    'Element appears to be neither ReactComponent nor DOMNode (keys: %s)',
	    Object.keys(componentOrElement)
	  ) : invariant(false));
	}
	
	module.exports = findDOMNode;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */
	
	'use strict';
	
	var ReactUpdates = __webpack_require__(31);
	var Transaction = __webpack_require__(41);
	
	var assign = __webpack_require__(18);
	var emptyFunction = __webpack_require__(21);
	
	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function() {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};
	
	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};
	
	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];
	
	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}
	
	assign(
	  ReactDefaultBatchingStrategyTransaction.prototype,
	  Transaction.Mixin,
	  {
	    getTransactionWrappers: function() {
	      return TRANSACTION_WRAPPERS;
	    }
	  }
	);
	
	var transaction = new ReactDefaultBatchingStrategyTransaction();
	
	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,
	
	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function(callback, a, b, c, d) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;
	
	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;
	
	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d);
	    } else {
	      transaction.perform(callback, null, a, b, c, d);
	    }
	  }
	};
	
	module.exports = ReactDefaultBatchingStrategy;


/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */
	
	'use strict';
	
	var AutoFocusMixin = __webpack_require__(119);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var keyMirror = __webpack_require__(11);
	
	var button = ReactElement.createFactory('button');
	
	var mouseListenerNames = keyMirror({
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,
	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	});
	
	/**
	 * Implements a <button> native component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = ReactClass.createClass({
	  displayName: 'ReactDOMButton',
	  tagName: 'BUTTON',
	
	  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],
	
	  render: function() {
	    var props = {};
	
	    // Copy the props; except the mouse listeners if we're disabled
	    for (var key in this.props) {
	      if (this.props.hasOwnProperty(key) &&
	          (!this.props.disabled || !mouseListenerNames[key])) {
	        props[key] = this.props[key];
	      }
	    }
	
	    return button(props, this.props.children);
	  }
	
	});
	
	module.exports = ReactDOMButton;


/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusMixin
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var focusNode = __webpack_require__(120);
	
	var AutoFocusMixin = {
	  componentDidMount: function() {
	    if (this.props.autoFocus) {
	      focusNode(this.getDOMNode());
	    }
	  }
	};
	
	module.exports = AutoFocusMixin;


/***/ },
/* 120 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule focusNode
	 */
	
	"use strict";
	
	/**
	 * @param {DOMElement} node input/textarea to focus
	 */
	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch(e) {
	  }
	}
	
	module.exports = focusNode;


/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMForm
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var LocalEventTrapMixin = __webpack_require__(122);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var form = ReactElement.createFactory('form');
	
	/**
	 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
	 * to capture it on the <form> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <form> a
	 * composite component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMForm = ReactClass.createClass({
	  displayName: 'ReactDOMForm',
	  tagName: 'FORM',
	
	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],
	
	  render: function() {
	    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
	    // `jshint` fails to parse JSX so in order for linting to work in the open
	    // source repo, we need to just use `ReactDOM.form`.
	    return form(this.props);
	  },
	
	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
	  }
	});
	
	module.exports = ReactDOMForm;


/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LocalEventTrapMixin
	 */
	
	'use strict';
	
	var ReactBrowserEventEmitter = __webpack_require__(73);
	
	var accumulateInto = __webpack_require__(76);
	var forEachAccumulated = __webpack_require__(77);
	var invariant = __webpack_require__(12);
	
	function remove(event) {
	  event.remove();
	}
	
	var LocalEventTrapMixin = {
	  trapBubbledEvent:function(topLevelType, handlerBaseName) {
	    ("production" !== process.env.NODE_ENV ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
	    // If a component renders to null or if another component fatals and causes
	    // the state of the tree to be corrupted, `node` here can be null.
	    var node = this.getDOMNode();
	    ("production" !== process.env.NODE_ENV ? invariant(
	      node,
	      'LocalEventTrapMixin.trapBubbledEvent(...): Requires node to be rendered.'
	    ) : invariant(node));
	    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
	      topLevelType,
	      handlerBaseName,
	      node
	    );
	    this._localEventListeners =
	      accumulateInto(this._localEventListeners, listener);
	  },
	
	  // trapCapturedEvent would look nearly identical. We don't implement that
	  // method because it isn't currently needed.
	
	  componentWillUnmount:function() {
	    if (this._localEventListeners) {
	      forEachAccumulated(this._localEventListeners, remove);
	    }
	  }
	};
	
	module.exports = LocalEventTrapMixin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMImg
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var LocalEventTrapMixin = __webpack_require__(122);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var img = ReactElement.createFactory('img');
	
	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <img> element itself. There are lots of hacks we could do
	 * to accomplish this, but the most reliable is to make <img> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMImg = ReactClass.createClass({
	  displayName: 'ReactDOMImg',
	  tagName: 'IMG',
	
	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],
	
	  render: function() {
	    return img(this.props);
	  },
	
	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
	  }
	});
	
	module.exports = ReactDOMImg;


/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIframe
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var LocalEventTrapMixin = __webpack_require__(122);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var iframe = ReactElement.createFactory('iframe');
	
	/**
	 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
	 * capture it on the <iframe> element itself. There are lots of hacks we could
	 * do to accomplish this, but the most reliable is to make <iframe> a composite
	 * component and use `componentDidMount` to attach the event handlers.
	 */
	var ReactDOMIframe = ReactClass.createClass({
	  displayName: 'ReactDOMIframe',
	  tagName: 'IFRAME',
	
	  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],
	
	  render: function() {
	    return iframe(this.props);
	  },
	
	  componentDidMount: function() {
	    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
	  }
	});
	
	module.exports = ReactDOMIframe;


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */
	
	'use strict';
	
	var AutoFocusMixin = __webpack_require__(119);
	var DOMPropertyOperations = __webpack_require__(48);
	var LinkedValueUtils = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	var ReactMount = __webpack_require__(72);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	
	var input = ReactElement.createFactory('input');
	
	var instancesByReactID = {};
	
	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}
	
	/**
	 * Implements an <input> native component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = ReactClass.createClass({
	  displayName: 'ReactDOMInput',
	  tagName: 'INPUT',
	
	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],
	
	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    return {
	      initialChecked: this.props.defaultChecked || false,
	      initialValue: defaultValue != null ? defaultValue : null
	    };
	  },
	
	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);
	
	    props.defaultChecked = null;
	    props.defaultValue = null;
	
	    var value = LinkedValueUtils.getValue(this);
	    props.value = value != null ? value : this.state.initialValue;
	
	    var checked = LinkedValueUtils.getChecked(this);
	    props.checked = checked != null ? checked : this.state.initialChecked;
	
	    props.onChange = this._handleChange;
	
	    return input(props, this.props.children);
	  },
	
	  componentDidMount: function() {
	    var id = ReactMount.getID(this.getDOMNode());
	    instancesByReactID[id] = this;
	  },
	
	  componentWillUnmount: function() {
	    var rootNode = this.getDOMNode();
	    var id = ReactMount.getID(rootNode);
	    delete instancesByReactID[id];
	  },
	
	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var rootNode = this.getDOMNode();
	    if (this.props.checked != null) {
	      DOMPropertyOperations.setValueForProperty(
	        rootNode,
	        'checked',
	        this.props.checked || false
	      );
	    }
	
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },
	
	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    // Here we use asap to wait until all updates have propagated, which
	    // is important when using controlled components within layers:
	    // https://github.com/facebook/react/issues/1698
	    ReactUpdates.asap(forceUpdateIfMounted, this);
	
	    var name = this.props.name;
	    if (this.props.type === 'radio' && name != null) {
	      var rootNode = this.getDOMNode();
	      var queryRoot = rootNode;
	
	      while (queryRoot.parentNode) {
	        queryRoot = queryRoot.parentNode;
	      }
	
	      // If `rootNode.form` was non-null, then we could try `form.elements`,
	      // but that sometimes behaves strangely in IE8. We could also try using
	      // `form.getElementsByName`, but that will only return direct children
	      // and won't include inputs that use the HTML5 `form=` attribute. Since
	      // the input might not even be in a form, let's just use the global
	      // `querySelectorAll` to ensure we don't miss anything.
	      var group = queryRoot.querySelectorAll(
	        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');
	
	      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
	        var otherNode = group[i];
	        if (otherNode === rootNode ||
	            otherNode.form !== rootNode.form) {
	          continue;
	        }
	        var otherID = ReactMount.getID(otherNode);
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherID,
	          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
	          'same `name` is not supported.'
	        ) : invariant(otherID));
	        var otherInstance = instancesByReactID[otherID];
	        ("production" !== process.env.NODE_ENV ? invariant(
	          otherInstance,
	          'ReactDOMInput: Unknown radio button ID %s.',
	          otherID
	        ) : invariant(otherInstance));
	        // If this is a controlled radio button group, forcing the input that
	        // was previously checked to update will cause it to be come re-checked
	        // as appropriate.
	        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	      }
	    }
	
	    return returnValue;
	  }
	
	});
	
	module.exports = ReactDOMInput;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var ReactPropTypes = __webpack_require__(127);
	
	var invariant = __webpack_require__(12);
	
	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};
	
	function _assertSingleLink(input) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checkedLink == null || input.props.valueLink == null,
	    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
	    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
	  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
	}
	function _assertValueLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.value == null && input.props.onChange == null,
	    'Cannot provide a valueLink and a value or onChange event. If you want ' +
	    'to use value or onChange, you probably don\'t want to use valueLink.'
	  ) : invariant(input.props.value == null && input.props.onChange == null));
	}
	
	function _assertCheckedLink(input) {
	  _assertSingleLink(input);
	  ("production" !== process.env.NODE_ENV ? invariant(
	    input.props.checked == null && input.props.onChange == null,
	    'Cannot provide a checkedLink and a checked property or onChange event. ' +
	    'If you want to use checked or onChange, you probably don\'t want to ' +
	    'use checkedLink'
	  ) : invariant(input.props.checked == null && input.props.onChange == null));
	}
	
	/**
	 * @param {SyntheticEvent} e change event to handle
	 */
	function _handleLinkedValueChange(e) {
	  /*jshint validthis:true */
	  this.props.valueLink.requestChange(e.target.value);
	}
	
	/**
	  * @param {SyntheticEvent} e change event to handle
	  */
	function _handleLinkedCheckChange(e) {
	  /*jshint validthis:true */
	  this.props.checkedLink.requestChange(e.target.checked);
	}
	
	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  Mixin: {
	    propTypes: {
	      value: function(props, propName, componentName) {
	        if (!props[propName] ||
	            hasReadOnlyValue[props.type] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `value` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultValue`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      checked: function(props, propName, componentName) {
	        if (!props[propName] ||
	            props.onChange ||
	            props.readOnly ||
	            props.disabled) {
	          return null;
	        }
	        return new Error(
	          'You provided a `checked` prop to a form field without an ' +
	          '`onChange` handler. This will render a read-only field. If ' +
	          'the field should be mutable use `defaultChecked`. Otherwise, ' +
	          'set either `onChange` or `readOnly`.'
	        );
	      },
	      onChange: ReactPropTypes.func
	    }
	  },
	
	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return input.props.valueLink.value;
	    }
	    return input.props.value;
	  },
	
	  /**
	   * @param {ReactComponent} input Form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function(input) {
	    if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return input.props.checkedLink.value;
	    }
	    return input.props.checked;
	  },
	
	  /**
	   * @param {ReactComponent} input Form component
	   * @return {function} change callback either from onChange prop or link.
	   */
	  getOnChange: function(input) {
	    if (input.props.valueLink) {
	      _assertValueLink(input);
	      return _handleLinkedValueChange;
	    } else if (input.props.checkedLink) {
	      _assertCheckedLink(input);
	      return _handleLinkedCheckChange;
	    }
	    return input.props.onChange;
	  }
	};
	
	module.exports = LinkedValueUtils;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */
	
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactFragment = __webpack_require__(15);
	var ReactPropTypeLocationNames = __webpack_require__(39);
	
	var emptyFunction = __webpack_require__(21);
	
	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */
	
	var ANONYMOUS = '<<anonymous>>';
	
	var elementTypeChecker = createElementTypeChecker();
	var nodeTypeChecker = createNodeChecker();
	
	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	
	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: elementTypeChecker,
	  instanceOf: createInstanceTypeChecker,
	  node: nodeTypeChecker,
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};
	
	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location) {
	    componentName = componentName || ANONYMOUS;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error(
	          ("Required " + locationName + " `" + propName + "` was not specified in ") +
	          ("`" + componentName + "`.")
	        );
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location);
	    }
	  }
	
	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);
	
	  return chainedCheckType;
	}
	
	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);
	
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
	        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}
	
	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
	      );
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location);
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactElement.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createEnumTypeChecker(expectedValues) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (propValue === expectedValues[i]) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
	      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type ") +
	        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
	      );
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  function validate(props, propName, componentName, location) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location) == null) {
	        return null;
	      }
	    }
	
	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error(
	      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	      ("`" + componentName + "`.")
	    );
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createNodeChecker() {
	  function validate(props, propName, componentName, location) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
	        ("`" + componentName + "`, expected a ReactNode.")
	      );
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error(
	        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
	        ("supplied to `" + componentName + "`, expected `object`.")
	      );
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}
	
	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }
	      propValue = ReactFragment.extractIfFragment(propValue);
	      for (var k in propValue) {
	        if (!isNode(propValue[k])) {
	          return false;
	        }
	      }
	      return true;
	    default:
	      return false;
	  }
	}
	
	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  return propType;
	}
	
	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}
	
	module.exports = ReactPropTypes;


/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */
	
	'use strict';
	
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var warning = __webpack_require__(20);
	
	var option = ReactElement.createFactory('option');
	
	/**
	 * Implements an <option> native component that warns when `selected` is set.
	 */
	var ReactDOMOption = ReactClass.createClass({
	  displayName: 'ReactDOMOption',
	  tagName: 'OPTION',
	
	  mixins: [ReactBrowserComponentMixin],
	
	  componentWillMount: function() {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if ("production" !== process.env.NODE_ENV) {
	      ("production" !== process.env.NODE_ENV ? warning(
	        this.props.selected == null,
	        'Use the `defaultValue` or `value` props on <select> instead of ' +
	        'setting `selected` on <option>.'
	      ) : null);
	    }
	  },
	
	  render: function() {
	    return option(this.props, this.props.children);
	  }
	
	});
	
	module.exports = ReactDOMOption;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */
	
	'use strict';
	
	var AutoFocusMixin = __webpack_require__(119);
	var LinkedValueUtils = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	
	var select = ReactElement.createFactory('select');
	
	function updateOptionsIfPendingUpdateAndMounted() {
	  /*jshint validthis:true */
	  if (this._pendingUpdate) {
	    this._pendingUpdate = false;
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null && this.isMounted()) {
	      updateOptions(this, value);
	    }
	  }
	}
	
	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function selectValueType(props, propName, componentName) {
	  if (props[propName] == null) {
	    return null;
	  }
	  if (props.multiple) {
	    if (!Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
	        ("`multiple` is true.")
	      );
	    }
	  } else {
	    if (Array.isArray(props[propName])) {
	      return new Error(
	        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
	        ("value if `multiple` is false.")
	      );
	    }
	  }
	}
	
	/**
	 * @param {ReactComponent} component Instance of ReactDOMSelect
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(component, propValue) {
	  var selectedValue, i, l;
	  var options = component.getDOMNode().options;
	
	  if (component.props.multiple) {
	    selectedValue = {};
	    for (i = 0, l = propValue.length; i < l; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0, l = options.length; i < l; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0, l = options.length; i < l; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}
	
	/**
	 * Implements a <select> native component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = ReactClass.createClass({
	  displayName: 'ReactDOMSelect',
	  tagName: 'SELECT',
	
	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],
	
	  propTypes: {
	    defaultValue: selectValueType,
	    value: selectValueType
	  },
	
	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);
	
	    props.onChange = this._handleChange;
	    props.value = null;
	
	    return select(props, this.props.children);
	  },
	
	  componentWillMount: function() {
	    this._pendingUpdate = false;
	  },
	
	  componentDidMount: function() {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      updateOptions(this, value);
	    } else if (this.props.defaultValue != null) {
	      updateOptions(this, this.props.defaultValue);
	    }
	  },
	
	  componentDidUpdate: function(prevProps) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      this._pendingUpdate = false;
	      updateOptions(this, value);
	    } else if (!prevProps.multiple !== !this.props.multiple) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (this.props.defaultValue != null) {
	        updateOptions(this, this.props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(this, this.props.multiple ? [] : '');
	      }
	    }
	  },
	
	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	
	    this._pendingUpdate = true;
	    ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	    return returnValue;
	  }
	
	});
	
	module.exports = ReactDOMSelect;


/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */
	
	'use strict';
	
	var AutoFocusMixin = __webpack_require__(119);
	var DOMPropertyOperations = __webpack_require__(48);
	var LinkedValueUtils = __webpack_require__(126);
	var ReactBrowserComponentMixin = __webpack_require__(115);
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	var invariant = __webpack_require__(12);
	
	var warning = __webpack_require__(20);
	
	var textarea = ReactElement.createFactory('textarea');
	
	function forceUpdateIfMounted() {
	  /*jshint validthis:true */
	  if (this.isMounted()) {
	    this.forceUpdate();
	  }
	}
	
	/**
	 * Implements a <textarea> native component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = ReactClass.createClass({
	  displayName: 'ReactDOMTextarea',
	  tagName: 'TEXTAREA',
	
	  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],
	
	  getInitialState: function() {
	    var defaultValue = this.props.defaultValue;
	    // TODO (yungsters): Remove support for children content in <textarea>.
	    var children = this.props.children;
	    if (children != null) {
	      if ("production" !== process.env.NODE_ENV) {
	        ("production" !== process.env.NODE_ENV ? warning(
	          false,
	          'Use the `defaultValue` or `value` props instead of setting ' +
	          'children on <textarea>.'
	        ) : null);
	      }
	      ("production" !== process.env.NODE_ENV ? invariant(
	        defaultValue == null,
	        'If you supply `defaultValue` on a <textarea>, do not pass children.'
	      ) : invariant(defaultValue == null));
	      if (Array.isArray(children)) {
	        ("production" !== process.env.NODE_ENV ? invariant(
	          children.length <= 1,
	          '<textarea> can only have at most one child.'
	        ) : invariant(children.length <= 1));
	        children = children[0];
	      }
	
	      defaultValue = '' + children;
	    }
	    if (defaultValue == null) {
	      defaultValue = '';
	    }
	    var value = LinkedValueUtils.getValue(this);
	    return {
	      // We save the initial value so that `ReactDOMComponent` doesn't update
	      // `textContent` (unnecessary since we update value).
	      // The initial value can be a boolean or object so that's why it's
	      // forced to be a string.
	      initialValue: '' + (value != null ? value : defaultValue)
	    };
	  },
	
	  render: function() {
	    // Clone `this.props` so we don't mutate the input.
	    var props = assign({}, this.props);
	
	    ("production" !== process.env.NODE_ENV ? invariant(
	      props.dangerouslySetInnerHTML == null,
	      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
	    ) : invariant(props.dangerouslySetInnerHTML == null));
	
	    props.defaultValue = null;
	    props.value = null;
	    props.onChange = this._handleChange;
	
	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.
	    return textarea(props, this.state.initialValue);
	  },
	
	  componentDidUpdate: function(prevProps, prevState, prevContext) {
	    var value = LinkedValueUtils.getValue(this);
	    if (value != null) {
	      var rootNode = this.getDOMNode();
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
	    }
	  },
	
	  _handleChange: function(event) {
	    var returnValue;
	    var onChange = LinkedValueUtils.getOnChange(this);
	    if (onChange) {
	      returnValue = onChange.call(this, event);
	    }
	    ReactUpdates.asap(forceUpdateIfMounted, this);
	    return returnValue;
	  }
	
	});
	
	module.exports = ReactDOMTextarea;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var EventListener = __webpack_require__(132);
	var ExecutionEnvironment = __webpack_require__(56);
	var PooledClass = __webpack_require__(14);
	var ReactInstanceHandles = __webpack_require__(24);
	var ReactMount = __webpack_require__(72);
	var ReactUpdates = __webpack_require__(31);
	
	var assign = __webpack_require__(18);
	var getEventTarget = __webpack_require__(103);
	var getUnboundedScrollPosition = __webpack_require__(133);
	
	/**
	 * Finds the parent React component of `node`.
	 *
	 * @param {*} node
	 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
	 *                           is not nested.
	 */
	function findParent(node) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  var nodeID = ReactMount.getID(node);
	  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
	  var container = ReactMount.findReactContainerForID(rootID);
	  var parent = ReactMount.getFirstReactDOM(container);
	  return parent;
	}
	
	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function() {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(
	  TopLevelCallbackBookKeeping,
	  PooledClass.twoArgumentPooler
	);
	
	function handleTopLevelImpl(bookKeeping) {
	  var topLevelTarget = ReactMount.getFirstReactDOM(
	    getEventTarget(bookKeeping.nativeEvent)
	  ) || window;
	
	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = topLevelTarget;
	  while (ancestor) {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = findParent(ancestor);
	  }
	
	  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
	    topLevelTarget = bookKeeping.ancestors[i];
	    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
	    ReactEventListener._handleTopLevel(
	      bookKeeping.topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      bookKeeping.nativeEvent
	    );
	  }
	}
	
	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}
	
	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,
	
	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,
	
	  setHandleTopLevel: function(handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },
	
	  setEnabled: function(enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },
	
	  isEnabled: function() {
	    return ReactEventListener._enabled;
	  },
	
	
	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },
	
	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(
	      element,
	      handlerBaseName,
	      ReactEventListener.dispatchEvent.bind(null, topLevelType)
	    );
	  },
	
	  monitorScrollValue: function(refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },
	
	  dispatchEvent: function(topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }
	
	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
	      topLevelType,
	      nativeEvent
	    );
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};
	
	module.exports = ReactEventListener;


/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @providesModule EventListener
	 * @typechecks
	 */
	
	var emptyFunction = __webpack_require__(21);
	
	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },
	
	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function(target, eventType, callback) {
	    if (!target.addEventListener) {
	      if ("production" !== process.env.NODE_ENV) {
	        console.error(
	          'Attempted to listen to events during the capture phase on a ' +
	          'browser that does not support the capture phase. Your application ' +
	          'will not receive some events.'
	        );
	      }
	      return {
	        remove: emptyFunction
	      };
	    } else {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    }
	  },
	
	  registerDefault: function() {}
	};
	
	module.exports = EventListener;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 133 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getUnboundedScrollPosition
	 * @typechecks
	 */
	
	"use strict";
	
	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */
	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}
	
	module.exports = getUnboundedScrollPosition;


/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var EventPluginHub = __webpack_require__(74);
	var ReactComponentEnvironment = __webpack_require__(90);
	var ReactClass = __webpack_require__(42);
	var ReactEmptyComponent = __webpack_require__(81);
	var ReactBrowserEventEmitter = __webpack_require__(73);
	var ReactNativeComponent = __webpack_require__(40);
	var ReactDOMComponent = __webpack_require__(92);
	var ReactPerf = __webpack_require__(33);
	var ReactRootIndex = __webpack_require__(25);
	var ReactUpdates = __webpack_require__(31);
	
	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMComponent: ReactDOMComponent.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  NativeComponent: ReactNativeComponent.injection,
	  Perf: ReactPerf.injection,
	  RootIndex: ReactRootIndex.injection,
	  Updates: ReactUpdates.injection
	};
	
	module.exports = ReactInjection;


/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var CallbackQueue = __webpack_require__(32);
	var PooledClass = __webpack_require__(14);
	var ReactBrowserEventEmitter = __webpack_require__(73);
	var ReactInputSelection = __webpack_require__(136);
	var ReactPutListenerQueue = __webpack_require__(140);
	var Transaction = __webpack_require__(41);
	
	var assign = __webpack_require__(18);
	
	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};
	
	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function() {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },
	
	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
	   *   restores the previous value.
	   */
	  close: function(previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};
	
	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },
	
	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function() {
	    this.reactMountReady.notifyAll();
	  }
	};
	
	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },
	
	  close: function() {
	    this.putListenerQueue.putListeners();
	  }
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  SELECTION_RESTORATION,
	  EVENT_SUPPRESSION,
	  ON_DOM_READY_QUEUEING
	];
	
	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction() {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap proceedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },
	
	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	
	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};
	
	
	assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);
	
	PooledClass.addPoolingTo(ReactReconcileTransaction);
	
	module.exports = ReactReconcileTransaction;


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */
	
	'use strict';
	
	var ReactDOMSelection = __webpack_require__(137);
	
	var containsNode = __webpack_require__(84);
	var focusNode = __webpack_require__(120);
	var getActiveElement = __webpack_require__(139);
	
	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}
	
	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {
	
	  hasSelectionCapabilities: function(elem) {
	    return elem && (
	      ((elem.nodeName === 'INPUT' && elem.type === 'text') ||
	      elem.nodeName === 'TEXTAREA' || elem.contentEditable === 'true')
	    );
	  },
	
	  getSelectionInformation: function() {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange:
	          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
	          ReactInputSelection.getSelection(focusedElem) :
	          null
	    };
	  },
	
	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function(priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem &&
	        isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(
	          priorFocusedElem,
	          priorSelectionRange
	        );
	      }
	      focusNode(priorFocusedElem);
	    }
	  },
	
	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function(input) {
	    var selection;
	
	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }
	
	    return selection || {start: 0, end: 0};
	  },
	
	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function(input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (typeof end === 'undefined') {
	      end = start;
	    }
	
	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName === 'INPUT') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};
	
	module.exports = ReactInputSelection;


/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */
	
	'use strict';
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var getNodeForCharacterOffset = __webpack_require__(138);
	var getTextContentAccessor = __webpack_require__(100);
	
	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}
	
	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;
	
	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);
	
	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;
	
	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}
	
	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();
	
	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }
	
	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;
	
	  var currentRange = selection.getRangeAt(0);
	
	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(
	    selection.anchorNode,
	    selection.anchorOffset,
	    selection.focusNode,
	    selection.focusOffset
	  );
	
	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;
	
	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);
	
	  var isTempRangeCollapsed = isCollapsed(
	    tempRange.startContainer,
	    tempRange.startOffset,
	    tempRange.endContainer,
	    tempRange.endOffset
	  );
	
	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;
	
	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;
	
	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}
	
	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;
	
	  if (typeof offsets.end === 'undefined') {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }
	
	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}
	
	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }
	
	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = typeof offsets.end === 'undefined' ?
	            start : Math.min(offsets.end, length);
	
	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }
	
	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);
	
	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();
	
	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}
	
	var useIEOffsets = (
	  ExecutionEnvironment.canUseDOM &&
	  'selection' in document &&
	  !('getSelection' in window)
	);
	
	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,
	
	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};
	
	module.exports = ReactDOMSelection;


/***/ },
/* 138 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */
	
	'use strict';
	
	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */
	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}
	
	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}
	
	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;
	
	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;
	
	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }
	
	      nodeStart = nodeEnd;
	    }
	
	    node = getLeafNode(getSiblingNode(node));
	  }
	}
	
	module.exports = getNodeForCharacterOffset;


/***/ },
/* 139 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getActiveElement
	 * @typechecks
	 */
	
	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document body is not yet defined.
	 */
	function getActiveElement() /*?DOMElement*/ {
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}
	
	module.exports = getActiveElement;


/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPutListenerQueue
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	var ReactBrowserEventEmitter = __webpack_require__(73);
	
	var assign = __webpack_require__(18);
	
	function ReactPutListenerQueue() {
	  this.listenersToPut = [];
	}
	
	assign(ReactPutListenerQueue.prototype, {
	  enqueuePutListener: function(rootNodeID, propKey, propValue) {
	    this.listenersToPut.push({
	      rootNodeID: rootNodeID,
	      propKey: propKey,
	      propValue: propValue
	    });
	  },
	
	  putListeners: function() {
	    for (var i = 0; i < this.listenersToPut.length; i++) {
	      var listenerToPut = this.listenersToPut[i];
	      ReactBrowserEventEmitter.putListener(
	        listenerToPut.rootNodeID,
	        listenerToPut.propKey,
	        listenerToPut.propValue
	      );
	    }
	  },
	
	  reset: function() {
	    this.listenersToPut.length = 0;
	  },
	
	  destructor: function() {
	    this.reset();
	  }
	});
	
	PooledClass.addPoolingTo(ReactPutListenerQueue);
	
	module.exports = ReactPutListenerQueue;


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPropagators = __webpack_require__(98);
	var ReactInputSelection = __webpack_require__(136);
	var SyntheticEvent = __webpack_require__(102);
	
	var getActiveElement = __webpack_require__(139);
	var isTextInputElement = __webpack_require__(106);
	var keyOf = __webpack_require__(44);
	var shallowEqual = __webpack_require__(142);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSelect: null}),
	      captured: keyOf({onSelectCapture: null})
	    },
	    dependencies: [
	      topLevelTypes.topBlur,
	      topLevelTypes.topContextMenu,
	      topLevelTypes.topFocus,
	      topLevelTypes.topKeyDown,
	      topLevelTypes.topMouseDown,
	      topLevelTypes.topMouseUp,
	      topLevelTypes.topSelectionChange
	    ]
	  }
	};
	
	var activeElement = null;
	var activeElementID = null;
	var lastSelection = null;
	var mouseDown = false;
	
	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @param {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node &&
	      ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}
	
	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown ||
	      activeElement == null ||
	      activeElement !== getActiveElement()) {
	    return null;
	  }
	
	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;
	
	    var syntheticEvent = SyntheticEvent.getPooled(
	      eventTypes.select,
	      activeElementID,
	      nativeEvent
	    );
	
	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;
	
	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);
	
	    return syntheticEvent;
	  }
	}
	
	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	
	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(topLevelTarget) ||
	            topLevelTarget.contentEditable === 'true') {
	          activeElement = topLevelTarget;
	          activeElementID = topLevelTargetID;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementID = null;
	        lastSelection = null;
	        break;
	
	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent);
	
	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't).
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      case topLevelTypes.topSelectionChange:
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent);
	    }
	  }
	};
	
	module.exports = SelectEventPlugin;


/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shallowEqual
	 */
	
	'use strict';
	
	/**
	 * Performs equality by iterating through keys on an object and returning
	 * false when any key has values which are not strictly equal between
	 * objA and objB. Returns true when the values of all keys are strictly equal.
	 *
	 * @return {boolean}
	 */
	function shallowEqual(objA, objB) {
	  if (objA === objB) {
	    return true;
	  }
	  var key;
	  // Test for A's keys different from B.
	  for (key in objA) {
	    if (objA.hasOwnProperty(key) &&
	        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
	      return false;
	    }
	  }
	  // Test for B's keys missing from A.
	  for (key in objB) {
	    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
	      return false;
	    }
	  }
	  return true;
	}
	
	module.exports = shallowEqual;


/***/ },
/* 143 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ServerReactRootIndex
	 * @typechecks
	 */
	
	'use strict';
	
	/**
	 * Size of the reactRoot ID space. We generate random numbers for React root
	 * IDs and if there's a collision the events and DOM update system will
	 * get confused. In the future we need a way to generate GUIDs but for
	 * now this will work on a smaller scale.
	 */
	var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);
	
	var ServerReactRootIndex = {
	  createReactRootIndex: function() {
	    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
	  }
	};
	
	module.exports = ServerReactRootIndex;


/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */
	
	'use strict';
	
	var EventConstants = __webpack_require__(10);
	var EventPluginUtils = __webpack_require__(9);
	var EventPropagators = __webpack_require__(98);
	var SyntheticClipboardEvent = __webpack_require__(145);
	var SyntheticEvent = __webpack_require__(102);
	var SyntheticFocusEvent = __webpack_require__(146);
	var SyntheticKeyboardEvent = __webpack_require__(147);
	var SyntheticMouseEvent = __webpack_require__(110);
	var SyntheticDragEvent = __webpack_require__(150);
	var SyntheticTouchEvent = __webpack_require__(151);
	var SyntheticUIEvent = __webpack_require__(111);
	var SyntheticWheelEvent = __webpack_require__(152);
	
	var getEventCharCode = __webpack_require__(148);
	
	var invariant = __webpack_require__(12);
	var keyOf = __webpack_require__(44);
	var warning = __webpack_require__(20);
	
	var topLevelTypes = EventConstants.topLevelTypes;
	
	var eventTypes = {
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onBlur: true}),
	      captured: keyOf({onBlurCapture: true})
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onClick: true}),
	      captured: keyOf({onClickCapture: true})
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onContextMenu: true}),
	      captured: keyOf({onContextMenuCapture: true})
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCopy: true}),
	      captured: keyOf({onCopyCapture: true})
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onCut: true}),
	      captured: keyOf({onCutCapture: true})
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDoubleClick: true}),
	      captured: keyOf({onDoubleClickCapture: true})
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrag: true}),
	      captured: keyOf({onDragCapture: true})
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnd: true}),
	      captured: keyOf({onDragEndCapture: true})
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragEnter: true}),
	      captured: keyOf({onDragEnterCapture: true})
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragExit: true}),
	      captured: keyOf({onDragExitCapture: true})
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragLeave: true}),
	      captured: keyOf({onDragLeaveCapture: true})
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragOver: true}),
	      captured: keyOf({onDragOverCapture: true})
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDragStart: true}),
	      captured: keyOf({onDragStartCapture: true})
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onDrop: true}),
	      captured: keyOf({onDropCapture: true})
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onFocus: true}),
	      captured: keyOf({onFocusCapture: true})
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onInput: true}),
	      captured: keyOf({onInputCapture: true})
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyDown: true}),
	      captured: keyOf({onKeyDownCapture: true})
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyPress: true}),
	      captured: keyOf({onKeyPressCapture: true})
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onKeyUp: true}),
	      captured: keyOf({onKeyUpCapture: true})
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onLoad: true}),
	      captured: keyOf({onLoadCapture: true})
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onError: true}),
	      captured: keyOf({onErrorCapture: true})
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseDown: true}),
	      captured: keyOf({onMouseDownCapture: true})
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseMove: true}),
	      captured: keyOf({onMouseMoveCapture: true})
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOut: true}),
	      captured: keyOf({onMouseOutCapture: true})
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseOver: true}),
	      captured: keyOf({onMouseOverCapture: true})
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onMouseUp: true}),
	      captured: keyOf({onMouseUpCapture: true})
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onPaste: true}),
	      captured: keyOf({onPasteCapture: true})
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onReset: true}),
	      captured: keyOf({onResetCapture: true})
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onScroll: true}),
	      captured: keyOf({onScrollCapture: true})
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onSubmit: true}),
	      captured: keyOf({onSubmitCapture: true})
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchCancel: true}),
	      captured: keyOf({onTouchCancelCapture: true})
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchEnd: true}),
	      captured: keyOf({onTouchEndCapture: true})
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchMove: true}),
	      captured: keyOf({onTouchMoveCapture: true})
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onTouchStart: true}),
	      captured: keyOf({onTouchStartCapture: true})
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({onWheel: true}),
	      captured: keyOf({onWheelCapture: true})
	    }
	  }
	};
	
	var topLevelEventsToDispatchConfig = {
	  topBlur:        eventTypes.blur,
	  topClick:       eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy:        eventTypes.copy,
	  topCut:         eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag:        eventTypes.drag,
	  topDragEnd:     eventTypes.dragEnd,
	  topDragEnter:   eventTypes.dragEnter,
	  topDragExit:    eventTypes.dragExit,
	  topDragLeave:   eventTypes.dragLeave,
	  topDragOver:    eventTypes.dragOver,
	  topDragStart:   eventTypes.dragStart,
	  topDrop:        eventTypes.drop,
	  topError:       eventTypes.error,
	  topFocus:       eventTypes.focus,
	  topInput:       eventTypes.input,
	  topKeyDown:     eventTypes.keyDown,
	  topKeyPress:    eventTypes.keyPress,
	  topKeyUp:       eventTypes.keyUp,
	  topLoad:        eventTypes.load,
	  topMouseDown:   eventTypes.mouseDown,
	  topMouseMove:   eventTypes.mouseMove,
	  topMouseOut:    eventTypes.mouseOut,
	  topMouseOver:   eventTypes.mouseOver,
	  topMouseUp:     eventTypes.mouseUp,
	  topPaste:       eventTypes.paste,
	  topReset:       eventTypes.reset,
	  topScroll:      eventTypes.scroll,
	  topSubmit:      eventTypes.submit,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd:    eventTypes.touchEnd,
	  topTouchMove:   eventTypes.touchMove,
	  topTouchStart:  eventTypes.touchStart,
	  topWheel:       eventTypes.wheel
	};
	
	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}
	
	var SimpleEventPlugin = {
	
	  eventTypes: eventTypes,
	
	  /**
	   * Same as the default implementation, except cancels the event when return
	   * value is false. This behavior will be disabled in a future release.
	   *
	   * @param {object} Event to be dispatched.
	   * @param {function} Application-level callback.
	   * @param {string} domID DOM ID to pass to the callback.
	   */
	  executeDispatch: function(event, listener, domID) {
	    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);
	
	    ("production" !== process.env.NODE_ENV ? warning(
	      typeof returnValue !== 'boolean',
	      'Returning `false` from an event handler is deprecated and will be ' +
	      'ignored in a future release. Instead, manually call ' +
	      'e.stopPropagation() or e.preventDefault(), as appropriate.'
	    ) : null);
	
	    if (returnValue === false) {
	      event.stopPropagation();
	      event.preventDefault();
	    }
	  },
	
	  /**
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {DOMEventTarget} topLevelTarget The listening component root node.
	   * @param {string} topLevelTargetID ID of `topLevelTarget`.
	   * @param {object} nativeEvent Native browser event.
	   * @return {*} An accumulation of synthetic events.
	   * @see {EventPluginHub.extractEvents}
	   */
	  extractEvents: function(
	      topLevelType,
	      topLevelTarget,
	      topLevelTargetID,
	      nativeEvent) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topInput:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topError:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSubmit:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // FireFox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	        /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    ("production" !== process.env.NODE_ENV ? invariant(
	      EventConstructor,
	      'SimpleEventPlugin: Unhandled event type, `%s`.',
	      topLevelType
	    ) : invariant(EventConstructor));
	    var event = EventConstructor.getPooled(
	      dispatchConfig,
	      topLevelTargetID,
	      nativeEvent
	    );
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  }
	
	};
	
	module.exports = SimpleEventPlugin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticEvent = __webpack_require__(102);
	
	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function(event) {
	    return (
	      'clipboardData' in event ?
	        event.clipboardData :
	        window.clipboardData
	    );
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);
	
	module.exports = SyntheticClipboardEvent;


/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(111);
	
	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);
	
	module.exports = SyntheticFocusEvent;


/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(111);
	
	var getEventCharCode = __webpack_require__(148);
	var getEventKey = __webpack_require__(149);
	var getEventModifierState = __webpack_require__(112);
	
	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function(event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.
	
	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function(event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.
	
	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function(event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);
	
	module.exports = SyntheticKeyboardEvent;


/***/ },
/* 148 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `charCode` property.
	 */
	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;
	
	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;
	
	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }
	
	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }
	
	  return 0;
	}
	
	module.exports = getEventCharCode;


/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var getEventCharCode = __webpack_require__(148);
	
	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};
	
	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};
	
	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.
	
	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }
	
	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);
	
	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}
	
	module.exports = getEventKey;


/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(110);
	
	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);
	
	module.exports = SyntheticDragEvent;


/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticUIEvent = __webpack_require__(111);
	
	var getEventModifierState = __webpack_require__(112);
	
	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);
	
	module.exports = SyntheticTouchEvent;


/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var SyntheticMouseEvent = __webpack_require__(110);
	
	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function(event) {
	    return (
	      'deltaX' in event ? event.deltaX :
	      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
	    );
	  },
	  deltaY: function(event) {
	    return (
	      'deltaY' in event ? event.deltaY :
	      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	      'wheelDeltaY' in event ? -event.wheelDeltaY :
	      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	      'wheelDelta' in event ? -event.wheelDelta : 0
	    );
	  },
	  deltaZ: null,
	
	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};
	
	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
	  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
	}
	
	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);
	
	module.exports = SyntheticWheelEvent;


/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */
	
	/*jslint bitwise: true*/
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	
	var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
	
	var SVGDOMPropertyConfig = {
	  Properties: {
	    clipPath: MUST_USE_ATTRIBUTE,
	    cx: MUST_USE_ATTRIBUTE,
	    cy: MUST_USE_ATTRIBUTE,
	    d: MUST_USE_ATTRIBUTE,
	    dx: MUST_USE_ATTRIBUTE,
	    dy: MUST_USE_ATTRIBUTE,
	    fill: MUST_USE_ATTRIBUTE,
	    fillOpacity: MUST_USE_ATTRIBUTE,
	    fontFamily: MUST_USE_ATTRIBUTE,
	    fontSize: MUST_USE_ATTRIBUTE,
	    fx: MUST_USE_ATTRIBUTE,
	    fy: MUST_USE_ATTRIBUTE,
	    gradientTransform: MUST_USE_ATTRIBUTE,
	    gradientUnits: MUST_USE_ATTRIBUTE,
	    markerEnd: MUST_USE_ATTRIBUTE,
	    markerMid: MUST_USE_ATTRIBUTE,
	    markerStart: MUST_USE_ATTRIBUTE,
	    offset: MUST_USE_ATTRIBUTE,
	    opacity: MUST_USE_ATTRIBUTE,
	    patternContentUnits: MUST_USE_ATTRIBUTE,
	    patternUnits: MUST_USE_ATTRIBUTE,
	    points: MUST_USE_ATTRIBUTE,
	    preserveAspectRatio: MUST_USE_ATTRIBUTE,
	    r: MUST_USE_ATTRIBUTE,
	    rx: MUST_USE_ATTRIBUTE,
	    ry: MUST_USE_ATTRIBUTE,
	    spreadMethod: MUST_USE_ATTRIBUTE,
	    stopColor: MUST_USE_ATTRIBUTE,
	    stopOpacity: MUST_USE_ATTRIBUTE,
	    stroke: MUST_USE_ATTRIBUTE,
	    strokeDasharray: MUST_USE_ATTRIBUTE,
	    strokeLinecap: MUST_USE_ATTRIBUTE,
	    strokeOpacity: MUST_USE_ATTRIBUTE,
	    strokeWidth: MUST_USE_ATTRIBUTE,
	    textAnchor: MUST_USE_ATTRIBUTE,
	    transform: MUST_USE_ATTRIBUTE,
	    version: MUST_USE_ATTRIBUTE,
	    viewBox: MUST_USE_ATTRIBUTE,
	    x1: MUST_USE_ATTRIBUTE,
	    x2: MUST_USE_ATTRIBUTE,
	    x: MUST_USE_ATTRIBUTE,
	    y1: MUST_USE_ATTRIBUTE,
	    y2: MUST_USE_ATTRIBUTE,
	    y: MUST_USE_ATTRIBUTE
	  },
	  DOMAttributeNames: {
	    clipPath: 'clip-path',
	    fillOpacity: 'fill-opacity',
	    fontFamily: 'font-family',
	    fontSize: 'font-size',
	    gradientTransform: 'gradientTransform',
	    gradientUnits: 'gradientUnits',
	    markerEnd: 'marker-end',
	    markerMid: 'marker-mid',
	    markerStart: 'marker-start',
	    patternContentUnits: 'patternContentUnits',
	    patternUnits: 'patternUnits',
	    preserveAspectRatio: 'preserveAspectRatio',
	    spreadMethod: 'spreadMethod',
	    stopColor: 'stop-color',
	    stopOpacity: 'stop-opacity',
	    strokeDasharray: 'stroke-dasharray',
	    strokeLinecap: 'stroke-linecap',
	    strokeOpacity: 'stroke-opacity',
	    strokeWidth: 'stroke-width',
	    textAnchor: 'text-anchor',
	    viewBox: 'viewBox'
	  }
	};
	
	module.exports = SVGDOMPropertyConfig;


/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createFullPageComponent
	 * @typechecks
	 */
	
	'use strict';
	
	// Defeat circular references by requiring this directly.
	var ReactClass = __webpack_require__(42);
	var ReactElement = __webpack_require__(16);
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Create a component that will throw an exception when unmounted.
	 *
	 * Components like <html> <head> and <body> can't be removed or added
	 * easily in a cross-browser way, however it's valuable to be able to
	 * take advantage of React's reconciliation for styling and <title>
	 * management. So we just document it and throw in dangerous cases.
	 *
	 * @param {string} tag The tag to wrap
	 * @return {function} convenience constructor of new component
	 */
	function createFullPageComponent(tag) {
	  var elementFactory = ReactElement.createFactory(tag);
	
	  var FullPageComponent = ReactClass.createClass({
	    tagName: tag.toUpperCase(),
	    displayName: 'ReactFullPageComponent' + tag,
	
	    componentWillUnmount: function() {
	      ("production" !== process.env.NODE_ENV ? invariant(
	        false,
	        '%s tried to unmount. Because of cross-browser quirks it is ' +
	        'impossible to unmount some top-level components (eg <html>, <head>, ' +
	        'and <body>) reliably and efficiently. To fix this, have a single ' +
	        'top-level component that never unmounts render these elements.',
	        this.constructor.displayName
	      ) : invariant(false));
	    },
	
	    render: function() {
	      return elementFactory(this.props);
	    }
	  });
	
	  return FullPageComponent;
	}
	
	module.exports = createFullPageComponent;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerf
	 * @typechecks static-only
	 */
	
	'use strict';
	
	var DOMProperty = __webpack_require__(49);
	var ReactDefaultPerfAnalysis = __webpack_require__(156);
	var ReactMount = __webpack_require__(72);
	var ReactPerf = __webpack_require__(33);
	
	var performanceNow = __webpack_require__(157);
	
	function roundFloat(val) {
	  return Math.floor(val * 100) / 100;
	}
	
	function addValue(obj, key, val) {
	  obj[key] = (obj[key] || 0) + val;
	}
	
	var ReactDefaultPerf = {
	  _allMeasurements: [], // last item in the list is the current one
	  _mountStack: [0],
	  _injected: false,
	
	  start: function() {
	    if (!ReactDefaultPerf._injected) {
	      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
	    }
	
	    ReactDefaultPerf._allMeasurements.length = 0;
	    ReactPerf.enableMeasure = true;
	  },
	
	  stop: function() {
	    ReactPerf.enableMeasure = false;
	  },
	
	  getLastMeasurements: function() {
	    return ReactDefaultPerf._allMeasurements;
	  },
	
	  printExclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Component class name': item.componentName,
	        'Total inclusive time (ms)': roundFloat(item.inclusive),
	        'Exclusive mount time (ms)': roundFloat(item.exclusive),
	        'Exclusive render time (ms)': roundFloat(item.render),
	        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
	        'Render time per instance (ms)': roundFloat(item.render / item.count),
	        'Instances': item.count
	      };
	    }));
	    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
	    // number.
	  },
	
	  printInclusive: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
	    console.table(summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Inclusive time (ms)': roundFloat(item.time),
	        'Instances': item.count
	      };
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },
	
	  getMeasurementsSummaryMap: function(measurements) {
	    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
	      measurements,
	      true
	    );
	    return summary.map(function(item) {
	      return {
	        'Owner > component': item.componentName,
	        'Wasted time (ms)': item.time,
	        'Instances': item.count
	      };
	    });
	  },
	
	  printWasted: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },
	
	  printDOM: function(measurements) {
	    measurements = measurements || ReactDefaultPerf._allMeasurements;
	    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
	    console.table(summary.map(function(item) {
	      var result = {};
	      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
	      result['type'] = item.type;
	      result['args'] = JSON.stringify(item.args);
	      return result;
	    }));
	    console.log(
	      'Total time:',
	      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
	    );
	  },
	
	  _recordWrite: function(id, fnName, totalTime, args) {
	    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
	    var writes =
	      ReactDefaultPerf
	        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
	        .writes;
	    writes[id] = writes[id] || [];
	    writes[id].push({
	      type: fnName,
	      time: totalTime,
	      args: args
	    });
	  },
	
	  measure: function(moduleName, fnName, func) {
	    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
	      var totalTime;
	      var rv;
	      var start;
	
	      if (fnName === '_renderNewRootComponent' ||
	          fnName === 'flushBatchedUpdates') {
	        // A "measurement" is a set of metrics recorded for each flush. We want
	        // to group the metrics for a given flush together so we can look at the
	        // components that rendered and the DOM operations that actually
	        // happened to determine the amount of "wasted work" performed.
	        ReactDefaultPerf._allMeasurements.push({
	          exclusive: {},
	          inclusive: {},
	          render: {},
	          counts: {},
	          writes: {},
	          displayNames: {},
	          totalTime: 0
	        });
	        start = performanceNow();
	        rv = func.apply(this, args);
	        ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ].totalTime = performanceNow() - start;
	        return rv;
	      } else if (fnName === '_mountImageIntoNode' ||
	          moduleName === 'ReactDOMIDOperations') {
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (fnName === '_mountImageIntoNode') {
	          var mountID = ReactMount.getID(args[1]);
	          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
	        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
	          // special format
	          args[0].forEach(function(update) {
	            var writeArgs = {};
	            if (update.fromIndex !== null) {
	              writeArgs.fromIndex = update.fromIndex;
	            }
	            if (update.toIndex !== null) {
	              writeArgs.toIndex = update.toIndex;
	            }
	            if (update.textContent !== null) {
	              writeArgs.textContent = update.textContent;
	            }
	            if (update.markupIndex !== null) {
	              writeArgs.markup = args[1][update.markupIndex];
	            }
	            ReactDefaultPerf._recordWrite(
	              update.parentID,
	              update.type,
	              totalTime,
	              writeArgs
	            );
	          });
	        } else {
	          // basic format
	          ReactDefaultPerf._recordWrite(
	            args[0],
	            fnName,
	            totalTime,
	            Array.prototype.slice.call(args, 1)
	          );
	        }
	        return rv;
	      } else if (moduleName === 'ReactCompositeComponent' && (
	        (// TODO: receiveComponent()?
	        (fnName === 'mountComponent' ||
	        fnName === 'updateComponent' || fnName === '_renderValidatedComponent')))) {
	
	        if (typeof this._currentElement.type === 'string') {
	          return func.apply(this, args);
	        }
	
	        var rootNodeID = fnName === 'mountComponent' ?
	          args[0] :
	          this._rootNodeID;
	        var isRender = fnName === '_renderValidatedComponent';
	        var isMount = fnName === 'mountComponent';
	
	        var mountStack = ReactDefaultPerf._mountStack;
	        var entry = ReactDefaultPerf._allMeasurements[
	          ReactDefaultPerf._allMeasurements.length - 1
	        ];
	
	        if (isRender) {
	          addValue(entry.counts, rootNodeID, 1);
	        } else if (isMount) {
	          mountStack.push(0);
	        }
	
	        start = performanceNow();
	        rv = func.apply(this, args);
	        totalTime = performanceNow() - start;
	
	        if (isRender) {
	          addValue(entry.render, rootNodeID, totalTime);
	        } else if (isMount) {
	          var subMountTime = mountStack.pop();
	          mountStack[mountStack.length - 1] += totalTime;
	          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        } else {
	          addValue(entry.inclusive, rootNodeID, totalTime);
	        }
	
	        entry.displayNames[rootNodeID] = {
	          current: this.getName(),
	          owner: this._currentElement._owner ?
	            this._currentElement._owner.getName() :
	            '<root>'
	        };
	
	        return rv;
	      } else {
	        return func.apply(this, args);
	      }
	    };
	  }
	};
	
	module.exports = ReactDefaultPerf;


/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultPerfAnalysis
	 */
	
	var assign = __webpack_require__(18);
	
	// Don't try to save users less than 1.2ms (a number I made up)
	var DONT_CARE_THRESHOLD = 1.2;
	var DOM_OPERATION_TYPES = {
	  '_mountImageIntoNode': 'set innerHTML',
	  INSERT_MARKUP: 'set innerHTML',
	  MOVE_EXISTING: 'move',
	  REMOVE_NODE: 'remove',
	  TEXT_CONTENT: 'set textContent',
	  'updatePropertyByID': 'update attribute',
	  'deletePropertyByID': 'delete attribute',
	  'updateStylesByID': 'update styles',
	  'updateInnerHTMLByID': 'set innerHTML',
	  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
	};
	
	function getTotalTime(measurements) {
	  // TODO: return number of DOM ops? could be misleading.
	  // TODO: measure dropped frames after reconcile?
	  // TODO: log total time of each reconcile and the top-level component
	  // class that triggered it.
	  var totalTime = 0;
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    totalTime += measurement.totalTime;
	  }
	  return totalTime;
	}
	
	function getDOMSummary(measurements) {
	  var items = [];
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var id;
	
	    for (id in measurement.writes) {
	      measurement.writes[id].forEach(function(write) {
	        items.push({
	          id: id,
	          type: DOM_OPERATION_TYPES[write.type] || write.type,
	          args: write.args
	        });
	      });
	    }
	  }
	  return items;
	}
	
	function getExclusiveSummary(measurements) {
	  var candidates = {};
	  var displayName;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );
	
	    for (var id in allIDs) {
	      displayName = measurement.displayNames[id].current;
	
	      candidates[displayName] = candidates[displayName] || {
	        componentName: displayName,
	        inclusive: 0,
	        exclusive: 0,
	        render: 0,
	        count: 0
	      };
	      if (measurement.render[id]) {
	        candidates[displayName].render += measurement.render[id];
	      }
	      if (measurement.exclusive[id]) {
	        candidates[displayName].exclusive += measurement.exclusive[id];
	      }
	      if (measurement.inclusive[id]) {
	        candidates[displayName].inclusive += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[displayName].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (displayName in candidates) {
	    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[displayName]);
	    }
	  }
	
	  arr.sort(function(a, b) {
	    return b.exclusive - a.exclusive;
	  });
	
	  return arr;
	}
	
	function getInclusiveSummary(measurements, onlyClean) {
	  var candidates = {};
	  var inclusiveKey;
	
	  for (var i = 0; i < measurements.length; i++) {
	    var measurement = measurements[i];
	    var allIDs = assign(
	      {},
	      measurement.exclusive,
	      measurement.inclusive
	    );
	    var cleanComponents;
	
	    if (onlyClean) {
	      cleanComponents = getUnchangedComponents(measurement);
	    }
	
	    for (var id in allIDs) {
	      if (onlyClean && !cleanComponents[id]) {
	        continue;
	      }
	
	      var displayName = measurement.displayNames[id];
	
	      // Inclusive time is not useful for many components without knowing where
	      // they are instantiated. So we aggregate inclusive time with both the
	      // owner and current displayName as the key.
	      inclusiveKey = displayName.owner + ' > ' + displayName.current;
	
	      candidates[inclusiveKey] = candidates[inclusiveKey] || {
	        componentName: inclusiveKey,
	        time: 0,
	        count: 0
	      };
	
	      if (measurement.inclusive[id]) {
	        candidates[inclusiveKey].time += measurement.inclusive[id];
	      }
	      if (measurement.counts[id]) {
	        candidates[inclusiveKey].count += measurement.counts[id];
	      }
	    }
	  }
	
	  // Now make a sorted array with the results.
	  var arr = [];
	  for (inclusiveKey in candidates) {
	    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
	      arr.push(candidates[inclusiveKey]);
	    }
	  }
	
	  arr.sort(function(a, b) {
	    return b.time - a.time;
	  });
	
	  return arr;
	}
	
	function getUnchangedComponents(measurement) {
	  // For a given reconcile, look at which components did not actually
	  // render anything to the DOM and return a mapping of their ID to
	  // the amount of time it took to render the entire subtree.
	  var cleanComponents = {};
	  var dirtyLeafIDs = Object.keys(measurement.writes);
	  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);
	
	  for (var id in allIDs) {
	    var isDirty = false;
	    // For each component that rendered, see if a component that triggered
	    // a DOM op is in its subtree.
	    for (var i = 0; i < dirtyLeafIDs.length; i++) {
	      if (dirtyLeafIDs[i].indexOf(id) === 0) {
	        isDirty = true;
	        break;
	      }
	    }
	    if (!isDirty && measurement.counts[id] > 0) {
	      cleanComponents[id] = true;
	    }
	  }
	  return cleanComponents;
	}
	
	var ReactDefaultPerfAnalysis = {
	  getExclusiveSummary: getExclusiveSummary,
	  getInclusiveSummary: getInclusiveSummary,
	  getDOMSummary: getDOMSummary,
	  getTotalTime: getTotalTime
	};
	
	module.exports = ReactDefaultPerfAnalysis;


/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performanceNow
	 * @typechecks
	 */
	
	var performance = __webpack_require__(158);
	
	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (!performance || !performance.now) {
	  performance = Date;
	}
	
	var performanceNow = performance.now.bind(performance);
	
	module.exports = performanceNow;


/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule performance
	 * @typechecks
	 */
	
	"use strict";
	
	var ExecutionEnvironment = __webpack_require__(56);
	
	var performance;
	
	if (ExecutionEnvironment.canUseDOM) {
	  performance =
	    window.performance ||
	    window.msPerformance ||
	    window.webkitPerformance;
	}
	
	module.exports = performance || {};


/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 * @providesModule ReactServerRendering
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	var ReactInstanceHandles = __webpack_require__(24);
	var ReactMarkupChecksum = __webpack_require__(82);
	var ReactServerRenderingTransaction =
	  __webpack_require__(160);
	
	var emptyObject = __webpack_require__(19);
	var instantiateReactComponent = __webpack_require__(88);
	var invariant = __webpack_require__(12);
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup
	 */
	function renderToString(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToString(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));
	
	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(false);
	
	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      var markup =
	        componentInstance.mountComponent(id, transaction, emptyObject);
	      return ReactMarkupChecksum.addChecksumToMarkup(markup);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}
	
	/**
	 * @param {ReactElement} element
	 * @return {string} the HTML markup, without the extra React ID and checksum
	 * (for generating static pages)
	 */
	function renderToStaticMarkup(element) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(element),
	    'renderToStaticMarkup(): You must pass a valid ReactElement.'
	  ) : invariant(ReactElement.isValidElement(element)));
	
	  var transaction;
	  try {
	    var id = ReactInstanceHandles.createReactRootID();
	    transaction = ReactServerRenderingTransaction.getPooled(true);
	
	    return transaction.perform(function() {
	      var componentInstance = instantiateReactComponent(element, null);
	      return componentInstance.mountComponent(id, transaction, emptyObject);
	    }, null);
	  } finally {
	    ReactServerRenderingTransaction.release(transaction);
	  }
	}
	
	module.exports = {
	  renderToString: renderToString,
	  renderToStaticMarkup: renderToStaticMarkup
	};
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 * @typechecks
	 */
	
	'use strict';
	
	var PooledClass = __webpack_require__(14);
	var CallbackQueue = __webpack_require__(32);
	var ReactPutListenerQueue = __webpack_require__(140);
	var Transaction = __webpack_require__(41);
	
	var assign = __webpack_require__(18);
	var emptyFunction = __webpack_require__(21);
	
	/**
	 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
	 * during the performing of the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function() {
	    this.reactMountReady.reset();
	  },
	
	  close: emptyFunction
	};
	
	var PUT_LISTENER_QUEUEING = {
	  initialize: function() {
	    this.putListenerQueue.reset();
	  },
	
	  close: emptyFunction
	};
	
	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [
	  PUT_LISTENER_QUEUEING,
	  ON_DOM_READY_QUEUEING
	];
	
	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.putListenerQueue = ReactPutListenerQueue.getPooled();
	}
	
	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap proceedures.
	   */
	  getTransactionWrappers: function() {
	    return TRANSACTION_WRAPPERS;
	  },
	
	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function() {
	    return this.reactMountReady;
	  },
	
	  getPutListenerQueue: function() {
	    return this.putListenerQueue;
	  },
	
	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be resused.
	   */
	  destructor: function() {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	
	    ReactPutListenerQueue.release(this.putListenerQueue);
	    this.putListenerQueue = null;
	  }
	};
	
	
	assign(
	  ReactServerRenderingTransaction.prototype,
	  Transaction.Mixin,
	  Mixin
	);
	
	PooledClass.addPoolingTo(ReactServerRenderingTransaction);
	
	module.exports = ReactServerRenderingTransaction;


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';
	
	var ReactElement = __webpack_require__(16);
	
	var invariant = __webpack_require__(12);
	
	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection. The current implementation of this
	 * function assumes that a single child gets passed without a wrapper, but the
	 * purpose of this helper function is to abstract away the particular structure
	 * of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactComponent} The first and only `ReactComponent` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  ("production" !== process.env.NODE_ENV ? invariant(
	    ReactElement.isValidElement(children),
	    'onlyChild must be passed a children with exactly one child.'
	  ) : invariant(ReactElement.isValidElement(children)));
	  return children;
	}
	
	module.exports = onlyChild;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8)))

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var React = __webpack_require__(6);
	var Unit = __webpack_require__(163);
	var Service = __webpack_require__(235);
	
	var HomeContent = React.createClass({
	    displayName: 'HomeContent',
	
	    getInitialState: function getInitialState() {
	        return {
	            data: []
	        };
	    },
	    render: function render() {
	        var dataList = this.state.data.map(function (data, index) {
	            return React.createElement(
	                'li',
	                { className: 'item-content' },
	                React.createElement(
	                    'div',
	                    { className: 'item-inner' },
	                    React.createElement(
	                        'div',
	                        { className: 'item-title' },
	                        data.name
	                    ),
	                    React.createElement(
	                        'div',
	                        { className: 'item-after' },
	                        data.age
	                    )
	                )
	            );
	        });
	        return React.createElement(
	            'div',
	            { className: 'content-block' },
	            '这里是首页',
	            React.createElement(
	                'p',
	                null,
	                React.createElement(
	                    'a',
	                    { href: 'view/router2.html?id=21' },
	                    'ajax加载新页面'
	                )
	            ),
	            React.createElement(
	                'div',
	                { className: 'list-block' },
	                React.createElement(
	                    'ul',
	                    null,
	                    dataList
	                )
	            )
	        );
	    },
	    // dom渲染后执行
	    componentDidMount: function componentDidMount() {
	        var that = this;
	        Service.user(function (data) {
	            that.setState({
	                data: data
	            });
	        });
	    }
	});
	
	module.exports = HomeContent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	/**
	 * API调用封装
	 * @param type:请求模式，get/post
	 * @param data:请求的数据，名值
	 * @param [successCallback]:请求成功回调函数
	 * @param [errorCallback]:请求失败回调函数
	 *
	 */
	var Unit = {
	    url: '192.168.1.200',
	    // url: "data/",
	    ajax: function ajax(options, successCallback, errorCallback) {
	        var _defaParams = {
	            // appKey: "21725276",
	            // view: 1,
	            // rows: 10,
	            // timestamp: Math.round(new Date().getTime() / 1000)
	            // callback: "JSONP"
	
	        };
	        var data = options.data || {};
	        for (var k in _defaParams) {
	            if (typeof data[k] === "undefined") {
	                data[k] = _defaParams[k];
	            }
	        }
	        var type = options.type || "GET";
	        var api = options.api || '';
	        var url = options.url || this.url + api;
	        $.ajax({
	            type: type,
	            url: url,
	            data: data,
	            dataType: "json",
	            success: function success(data) {
	                Unit.loading("close");
	                successCallback(data);
	            },
	            error: function error() {
	                Unit.loading("close");
	                if (errorCallback) {
	                    errorCallback();
	                } else {
	                    // Unit.toast("服务正在升级中，请稍后再试");
	                }
	            },
	            timeout: 8000
	        });
	    }
	};
	
	// 获取设备可视宽度
	Unit.clientWidth = document.body.clientWidth;
	// 获取设备可视高度
	Unit.clientHeight = document.body.clientHeight;
	/**
	 * 加载层封装
	 * msg[string]: 消息内容
	 * type[number]: 加载层类型,若为0则不显示菊花
	 * time[number]: 加载层存在时间
	 */
	Unit.loading = function (msg, type, time) {
	    var tpl;
	    var msg = msg || '';
	    window.loadingDuration = '';
	    var msk = ".loading-mask";
	    if (window.loadingDuration) {
	        clearTimeout(window.loadingDuration);
	    }
	    if (arguments[0] == "close") {
	        $(msk).remove();
	        return false;
	    }
	    if (arguments.length == 2) {
	        time = arguments[1];
	    }
	    if (time > 0) {
	        window.loadingDuration = setTimeout(function () {
	            $(msk).animate({ opacity: 0 }, 500, 'ease-out', function () {
	                $(msk).remove();
	            });
	        }, time);
	    }
	    if ($(msk).length > 0) {
	        $(msk).remove();
	    }
	    if (type == 0) {
	        tpl = '<div class="loading-mask">' + '<div class="loading">' + '<div>' + msg + '</div>' + '</div>' + '</div>';
	    } else {
	        var msgHtml = '';
	        if (msg) {
	            msgHtml = '<div class="mt5">' + msg + '</div>';
	        }
	        tpl = '<div class="loading-mask">' + '<div class="loading">' + '<i style="width:40px; height:40px" class="preloader preloader-white"></i>' + msgHtml + '</div>' + '</div>';
	    }
	    $("body").append(tpl);
	};
	
	/**
	 * 获取日期
	 * @param  {[string]} type [为'y'，获取现在的年份,为'ym',获取年月,为'm',获取月,为'w',获取周]
	 * @return {[type]}      [description]
	 */
	Unit.getDate = function (type) {
	    var date = new Date();
	    var y = date.getFullYear();
	    var m = fixTime(date.getMonth() + 1);
	    var w = date.getDay();
	    var d = fixTime(date.getDate());
	    var r = y + "/" + m + "/" + d;
	    if (type == 'y') {
	        r = y;
	    } else if (type == 'ym') {
	        r = y + '-' + m;
	    } else if (type == 'm') {
	        r = m;
	    } else if (type == 'w') {
	        r = '周' + '日一二三四五六'.charAt(w);
	    }
	    return r;
	};
	
	/**
	 * 获取第n天的时间
	 * @param n
	 * @returns {string}
	 * @constructor
	 */
	Unit.GetDateTime = function (date, n) {
	    var dd = new Date(date);
	    dd.setDate(dd.getDate() + n);
	    var y = dd.getFullYear();
	    var m = fixTime(dd.getMonth() + 1);
	    var d = fixTime(dd.getDate());
	    return y + "/" + m + "/" + d;
	};
	
	/**
	 * 获取地址栏所有参数
	 * @return {[type]} [description]
	 */
	Unit.getSearch = function () {
	    var search = window.location.search;
	    if (search) {
	        var queryArr = search.split('?')[1].split('&');
	        var q = {};
	        for (var k in queryArr) {
	            var qArr = queryArr[k].split('=');
	            q[qArr[0]] = qArr[1];
	        }
	        return q;
	    } else {
	        return null;
	    }
	};
	/**
	 * 加载页面组件
	 * @param componentName 组件名称
	 */
	Unit.loadComponent = function (componentName) {
	    // 获取页面参数
	    var query = Unit.getSearch();
	    __webpack_require__.e/* require */(1, function(__webpack_require__) { var __WEBPACK_AMD_REQUIRE_ARRAY__ = [__webpack_require__(164)("./" + componentName)]; (function (component) {
	        component.render(query);
	    }.apply(null, __WEBPACK_AMD_REQUIRE_ARRAY__));});
	};
	
	function fixTime(d) {
	    if (d < 10) {
	        d = "0" + d;
	    }
	    return d;
	}
	
	module.exports = Unit;

/***/ },
/* 164 */,
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var React = __webpack_require__(6);
	var Unit = __webpack_require__(163);
	
	var CartContent = React.createClass({
	    displayName: 'CartContent',
	
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'content-block' },
	            '这里是预购篮'
	        );
	    }
	});
	
	module.exports = CartContent;

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var React = __webpack_require__(6);
	var Unit = __webpack_require__(163);
	
	var MeContent = React.createClass({
	    displayName: 'MeContent',
	
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'content-block' },
	            '这里是我的'
	        );
	    }
	});
	
	module.exports = MeContent;

/***/ },
/* 167 */,
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var React = __webpack_require__(6);
	var Unit = __webpack_require__(163);
	
	var SortContent = React.createClass({
	    displayName: 'SortContent',
	
	    render: function render() {
	        return React.createElement(
	            'div',
	            { className: 'content-block' },
	            '这里是分类'
	        );
	    }
	});
	
	module.exports = SortContent;

/***/ },
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */,
/* 200 */,
/* 201 */,
/* 202 */,
/* 203 */,
/* 204 */,
/* 205 */,
/* 206 */,
/* 207 */,
/* 208 */,
/* 209 */,
/* 210 */,
/* 211 */,
/* 212 */,
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */,
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var Unit = __webpack_require__(163);
	
	// 定义服务类
	var Service = {};
	
	Unit.url = "data/";
	
	// 用户登录
	Service.user = function (callback) {
	    Unit.ajax({
	        api: 'data.json'
	    }, function (data) {
	        callback(data);
	    });
	};
	
	module.exports = Service;

/***/ }
/******/ ]);
//# sourceMappingURL=bundle.js.map